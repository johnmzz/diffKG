[
  {
    "qid": 3205368004000,
    "question": "which units of length are associated with the system where mass is measured in micrograms?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.025sx5b",
        "entity_name": "Picometre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jmrm",
        "entity_name": "Millimeter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0db_d",
        "entity_name": "Kilometer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04sf9",
        "entity_name": "Meter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.024_6",
        "entity_name": "Centimeter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02qs2d",
        "entity_name": "Hectometre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.055v9",
        "entity_name": "Micrometer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01p5ld",
        "entity_name": "Decimetre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01p6gt",
        "entity_name": "Decametre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02mvqx",
        "entity_name": "Megametre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02p0rth",
        "entity_name": "Nanometre"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.distance_unit",
          "class": "measurement_unit.distance_unit",
          "friendly_name": "Unit of Length",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02p14f_",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Microgram",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.distance_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.weight_units",
          "friendly_name": "Mass Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.distance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02p14f_ } \n?x0 :measurement_unit.distance_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.weight_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.distance_unit (JOIN measurement_unit.distance_unit.measurement_system (JOIN measurement_unit.measurement_system.weight_units m.02p14f_)))",
    "topic_entity": {
      "m.02p14f_": "Microgram"
    }
  },
  {
    "qid": 4300140008000,
    "question": "what is the name of the religion that is part of abrahamic faiths and has same practices with protestantism?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01lp8",
        "entity_name": "Christianity"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03_gx",
        "entity_name": "Judaism"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "religion.religion",
          "class": "religion.religion",
          "friendly_name": "Religion",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "religion.religious_practice",
          "class": "religion.religious_practice",
          "friendly_name": "Religious Practice",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0f_h6",
          "class": "religion.religion",
          "friendly_name": "abrahamic faiths",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.05sfs",
          "class": "religion.religion",
          "friendly_name": "Protestantism",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "religion.religion.practices",
          "friendly_name": "Practices"
        },
        {
          "start": 0,
          "end": 2,
          "relation": "religion.religion.is_part_of",
          "friendly_name": "Is Part Of"
        },
        {
          "start": 3,
          "end": 1,
          "relation": "religion.religion.practices",
          "friendly_name": "Practices"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.religion . \n?x1 :type.object.type :religion.religious_practice . \nVALUES ?x2 { :m.0f_h6 } \nVALUES ?x3 { :m.05sfs } \n?x0 :religion.religion.practices ?x1 . \n?x0 :religion.religion.is_part_of ?x2 . \n?x3 :religion.religion.practices ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "religion"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.05sfs)) (JOIN religion.religion.is_part_of m.0f_h6)))",
    "topic_entity": {
      "m.0f_h6": "Abrahamic religions",
      "m.05sfs": "Protestantism"
    }
  },
  {
    "qid": 3203650000000,
    "question": "what is the measure for a unit of density used in the same measurement system as kilometre per hour as a measure of speed?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0d1kg",
        "entity_name": "Kilogram per cubic metre"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.unit_of_density",
          "class": "measurement_unit.unit_of_density",
          "friendly_name": "Unit of Density",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.030skj",
          "class": "measurement_unit.speed_unit",
          "friendly_name": "kilometre per hour",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.unit_of_density.measurement_system",
          "friendly_name": "Measurement system"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.speed_units",
          "friendly_name": "Speed Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.unit_of_density . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.030skj } \n?x0 :measurement_unit.unit_of_density.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.speed_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.unit_of_density (JOIN measurement_unit.unit_of_density.measurement_system (JOIN measurement_unit.measurement_system.speed_units m.030skj)))",
    "topic_entity": {
      "m.030skj": "Kilometres per hour"
    }
  },
  {
    "qid": 3205293013000,
    "question": "crayons has artworks from which period/movement?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0nk1p",
        "entity_name": "Symbolism"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "visual_art.art_period_movement",
          "class": "visual_art.art_period_movement",
          "friendly_name": "Art Period/Movement",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "visual_art.artwork",
          "class": "visual_art.artwork",
          "friendly_name": "Artwork",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0ckdv",
          "class": "visual_art.visual_art_medium",
          "friendly_name": "crayons",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "visual_art.artwork.period_or_movement",
          "friendly_name": "Period or Movement"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "visual_art.visual_art_medium.artworks",
          "friendly_name": "Artworks"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :visual_art.art_period_movement . \n?x1 :type.object.type :visual_art.artwork . \nVALUES ?x2 { :m.0ckdv } \n?x1 :visual_art.artwork.period_or_movement ?x0 . \n?x2 :visual_art.visual_art_medium.artworks ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "visual_art"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND visual_art.art_period_movement (JOIN (R visual_art.artwork.period_or_movement) (JOIN (R visual_art.visual_art_medium.artworks) m.0ckdv)))",
    "topic_entity": {
      "m.0ckdv": "Crayon"
    }
  },
  {
    "qid": 3200648015000,
    "question": "what court is inferior to the caribbean court of justice and was founded first?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.08059cj",
        "entity_name": "Supreme Court of Judicature"
      }
    ],
    "function": "argmin",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "law.court",
          "class": "law.court",
          "friendly_name": "Court",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.datetime",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmin"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05vm39",
          "class": "law.court",
          "friendly_name": "Caribbean Court of Justice",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "law.court.founded",
          "friendly_name": "Founded"
        },
        {
          "start": 2,
          "end": 0,
          "relation": "law.court.inferior_courts",
          "friendly_name": "Inferior courts"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.court . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :law.court . \nVALUES ?y2 { :m.05vm39 } \n?y0 :law.court.founded ?y1 . \n?y2 :law.court.inferior_courts ?y0 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.05vm39 } \n?x0 :law.court.founded ?x1 . \n?x2 :law.court.inferior_courts ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "law"
    ],
    "level": "i.i.d.",
    "s_expression": "(ARGMIN (AND law.court (JOIN (R law.court.inferior_courts) m.05vm39)) law.court.founded)",
    "topic_entity": {
      "m.05vm39": "Caribbean Court of Justice"
    }
  },
  {
    "qid": 3202416014000,
    "question": "which video game version was developed by the developer of crash 'n score?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmrs8",
        "entity_name": "Star Wars"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hx6kb",
        "entity_name": "BASIC Programming"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hw7zk",
        "entity_name": "Qix"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm0qr",
        "entity_name": "Crystal Castles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmqc2",
        "entity_name": "Donkey Kong"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hkyv2",
        "entity_name": "Off the Wall"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlhgz",
        "entity_name": "Ms. Pac-Man"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm8sv",
        "entity_name": "Asteroids Deluxe"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hwd15",
        "entity_name": "Defender"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hwd1b",
        "entity_name": "Defender"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm51x",
        "entity_name": "Video Pinball"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040shpx",
        "entity_name": "Video Pinball"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hsh7h",
        "entity_name": "David's Midnight Magic"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nptm9",
        "entity_name": "Basketball"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl8m8",
        "entity_name": "Night Driver"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlytr",
        "entity_name": "Night Driver"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040tt4d",
        "entity_name": "Space Invaders"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hdbqd",
        "entity_name": "Space Invaders"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlcj5",
        "entity_name": "Moon Patrol"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hljpd",
        "entity_name": "Moon Patrol"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmcjq",
        "entity_name": "Moon Patrol"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09p68k8",
        "entity_name": "Super Breakout"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040st56",
        "entity_name": "Galaxian"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm10l",
        "entity_name": "Missile Command 3D"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmpgs",
        "entity_name": "Indiana Jones and the Temple of Doom"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040rb1d",
        "entity_name": "Timegate: Knight's Chase"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm8yx",
        "entity_name": "Arcade Classics"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hgvpt",
        "entity_name": "Outlaw"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040gg_y",
        "entity_name": "Phoenix"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hvwgy",
        "entity_name": "Warlords"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hcvnw",
        "entity_name": "Food Fight"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlgy7",
        "entity_name": "Air-Sea Battle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmnrq",
        "entity_name": "Magic: The Gathering - Battlegrounds"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040qw8s",
        "entity_name": "Space Dungeon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm7xf",
        "entity_name": "Basketball"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040rffm",
        "entity_name": "RoadBlasters"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl6c8",
        "entity_name": "Superman"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hly5t",
        "entity_name": "Mario Bros."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040tkty",
        "entity_name": "Dig Dug"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl3x4",
        "entity_name": "Wolfenstein 3D"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ns972",
        "entity_name": "Battlezone"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040jfmb",
        "entity_name": "Bill & Ted's Excellent Adventure"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nsxcl",
        "entity_name": "Casino"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm4db",
        "entity_name": "Millipede"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmlqk",
        "entity_name": "Tempest 2000"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl_7g",
        "entity_name": "Yars' Revenge"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040h902",
        "entity_name": "Dirty Larry: Renegade Cop"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmb_k",
        "entity_name": "Fight for Life"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmppb",
        "entity_name": "Toki"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hvnpl",
        "entity_name": "Jungle Hunt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlbj9",
        "entity_name": "Asteroids"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hxjvq",
        "entity_name": "Asteroids"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hxjw0",
        "entity_name": "Asteroids"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02_8my8",
        "entity_name": "Furious Karting"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmbs7",
        "entity_name": "Missile Command"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nv428",
        "entity_name": "Alien Brigade"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040tkts",
        "entity_name": "Dig Dug"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmhkh",
        "entity_name": "Crossbow"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04ln_ff",
        "entity_name": "Mission: Impossible Operation Surma"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm067",
        "entity_name": "Food Fight"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hns5_",
        "entity_name": "Midnight Magic"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmg4f",
        "entity_name": "Paperboy"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kkbp1",
        "entity_name": "Pong"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04lpf47",
        "entity_name": "Joust"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040rmm6",
        "entity_name": "Berzerk"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04dgdfv",
        "entity_name": "Krull"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02_85mh",
        "entity_name": "Dungeons and Dragons: Heroes"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl5l_",
        "entity_name": "Donkey Kong Junior"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl62n",
        "entity_name": "Ikari Warriors"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl70c",
        "entity_name": "Gauntlet Legends"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl7_6",
        "entity_name": "Xevious"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl7sy",
        "entity_name": "Xenophobe"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl98v",
        "entity_name": "Rygar"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl_r0",
        "entity_name": "Vanguard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl_y6",
        "entity_name": "Ms. Pac-Man"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlc_f",
        "entity_name": "Donkey Kong"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlfb6",
        "entity_name": "Basketbrawl"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlh7r",
        "entity_name": "Pole Position"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlhvz",
        "entity_name": "Splashdown"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hljl6",
        "entity_name": "Adventure"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hljs0",
        "entity_name": "Pole Position II"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlkhk",
        "entity_name": "Missile Command"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlkt0",
        "entity_name": "Ms. Pac-Man"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hll3_",
        "entity_name": "Donkey Kong"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hll7k",
        "entity_name": "I, Robot"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hllgw",
        "entity_name": "Red Baron"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlncm",
        "entity_name": "Battlezone"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlpcd",
        "entity_name": "Donkey Kong Junior"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlpp_",
        "entity_name": "Pac-Man"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlq3w",
        "entity_name": "Vanguard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlqhw",
        "entity_name": "Crossbow"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlrq6",
        "entity_name": "3-D Tic-Tac-Toe"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlrqw",
        "entity_name": "Mario Bros."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlskg",
        "entity_name": "Tempest"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hltsh",
        "entity_name": "Xenophobe"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlvly",
        "entity_name": "Alpha Beam with Ernie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlyhn",
        "entity_name": "Robotron: 2084"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlzgd",
        "entity_name": "Robotron: 2084"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlzm8",
        "entity_name": "Marble Madness"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm00w",
        "entity_name": "Centipede"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm0bk",
        "entity_name": "Breakout"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm0kp",
        "entity_name": "E.T. the Extra-Terrestrial"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm14x",
        "entity_name": "Pac-Man"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm2g1",
        "entity_name": "Robotron: 2084"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm4xc",
        "entity_name": "Donkey Kong Junior"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm5xt",
        "entity_name": "Ms. Pac-Man"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm60r",
        "entity_name": "Circus Atari"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm6rq",
        "entity_name": "Ninja Gaiden III: The Ancient Ship of Doom"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm72y",
        "entity_name": "Mario Bros."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm81w",
        "entity_name": "Mario Bros."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm9jf",
        "entity_name": "Star Raiders"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmbz4",
        "entity_name": "Battlezone"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmcwh",
        "entity_name": "Pengo"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmdth",
        "entity_name": "Ikari Warriors"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmdzr",
        "entity_name": "Choplifter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmfjv",
        "entity_name": "Pole Position"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmfz4",
        "entity_name": "Golf"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmhw4",
        "entity_name": "Ms. Pac-Man"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmlf2",
        "entity_name": "Kangaroo"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmqg8",
        "entity_name": "Popeye"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hmqps",
        "entity_name": "Swordquest"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040g7qh",
        "entity_name": "Pac-Land"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040gf7w",
        "entity_name": "Fever Pitch Soccer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040gfn6",
        "entity_name": "Crystal Castles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040gzfx",
        "entity_name": "Millipede"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040lnn_",
        "entity_name": "Lunar Lander"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040qdvp",
        "entity_name": "Haunted House"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040qh0t",
        "entity_name": "Pit-Fighter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040rmmc",
        "entity_name": "Berzerk"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040sn7r",
        "entity_name": "Space Duel"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040st51",
        "entity_name": "Galaxian"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040st5j",
        "entity_name": "Galaxian"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040tnw4",
        "entity_name": "Stargate"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040ttsc",
        "entity_name": "Xevious"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.045zqqt",
        "entity_name": "Major Havoc"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hcv5c",
        "entity_name": "Jungle Hunt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hd7gk",
        "entity_name": "Joust"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hptlq",
        "entity_name": "Blackjack"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04htkyz",
        "entity_name": "Commando"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hvnq1",
        "entity_name": "Jungle Hunt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hwxtl",
        "entity_name": "Centipede"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hwxtr",
        "entity_name": "Centipede"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hx0yv",
        "entity_name": "Joust"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hx0z4",
        "entity_name": "Joust"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hx4fx",
        "entity_name": "Star Raiders"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hxc_m",
        "entity_name": "Pac-Man"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05y_2tg",
        "entity_name": "Hover Strike"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09p656q",
        "entity_name": "Missile Command"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hpscm",
        "entity_name": "Basic Math"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hl_t2",
        "entity_name": "Bowling"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlbpr",
        "entity_name": "Gravitar"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlbx0",
        "entity_name": "Avalanche"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hldzd",
        "entity_name": "Combat"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlj1b",
        "entity_name": "Pole Position"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlm6d",
        "entity_name": "Xybots"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlwm_",
        "entity_name": "Batman Returns"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hm65t",
        "entity_name": "Crossbow"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040txm5",
        "entity_name": "Klax"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hd6rn",
        "entity_name": "Centipede"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hvp49",
        "entity_name": "Jr. Pac-Man"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hvwb_",
        "entity_name": "Klax"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hwppk",
        "entity_name": "Solaris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09p613f",
        "entity_name": "Centipede"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.cvg_developer",
          "class": "cvg.cvg_developer",
          "friendly_name": "Video Game Developer",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02wzdys",
          "class": "cvg.computer_videogame",
          "friendly_name": "Crash 'N Score",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.game_version.developer",
          "friendly_name": "Developer"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "cvg.computer_videogame.developer",
          "friendly_name": "Developer"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \n?x1 :type.object.type :cvg.cvg_developer . \nVALUES ?x2 { :m.02wzdys } \n?x0 :cvg.game_version.developer ?x1 . \n?x2 :cvg.computer_videogame.developer ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.game_version (JOIN cvg.game_version.developer (JOIN (R cvg.computer_videogame.developer) m.02wzdys)))",
    "topic_entity": {
      "m.02wzdys": "Crash 'N Score"
    }
  },
  {
    "qid": 4301746002000,
    "question": "xbox is supported by which version released in japan?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cn1dzn",
        "entity_name": "Sonic Free Riders"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "entity",
          "id": "m.03_3d",
          "class": "cvg.computer_game_region",
          "friendly_name": "Japan",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "computer.computer_peripheral",
          "class": "computer.computer_peripheral",
          "friendly_name": "Computer Peripheral",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02plp2",
          "class": "business.brand",
          "friendly_name": "xbox",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.computer_game_region.versions_released_in_this_region",
          "friendly_name": "Versions released in this region"
        },
        {
          "start": 2,
          "end": 0,
          "relation": "computer.computer_peripheral.supporting_game_versions",
          "friendly_name": "Supporting game versions"
        },
        {
          "start": 3,
          "end": 2,
          "relation": "business.brand.products",
          "friendly_name": "Products"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :m.03_3d } \n?x2 :type.object.type :computer.computer_peripheral . \nVALUES ?x3 { :m.02plp2 } \n?x1 :cvg.computer_game_region.versions_released_in_this_region ?x0 . \n?x2 :computer.computer_peripheral.supporting_game_versions ?x0 . \n?x3 :business.brand.products ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "business",
      "cvg",
      "computer"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.03_3d) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
    "topic_entity": {
      "m.03_3d": "Japan",
      "m.02plp2": "Xbox 360"
    }
  },
  {
    "qid": 3205441007000,
    "question": "lonnie wheeler contributed to a book edition published by what publisher?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03y7jc",
        "entity_name": "Simon & Schuster"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "book.publishing_company",
          "class": "book.publishing_company",
          "friendly_name": "Publisher",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "book.book_edition",
          "class": "book.book_edition",
          "friendly_name": "Book Edition",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05y04d_",
          "class": "book.author",
          "friendly_name": "Lonnie Wheeler",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "book.publishing_company.books_published",
          "friendly_name": "Book editions published"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "book.author.contributing_author_to",
          "friendly_name": "Contributing author to"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.publishing_company . \n?x1 :type.object.type :book.book_edition . \nVALUES ?x2 { :m.05y04d_ } \n?x0 :book.publishing_company.books_published ?x1 . \n?x2 :book.author.contributing_author_to ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "book"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND book.publishing_company (JOIN book.publishing_company.books_published (JOIN (R book.author.contributing_author_to) m.05y04d_)))",
    "topic_entity": {
      "m.05y04d_": "Lonnie Wheeler"
    }
  },
  {
    "qid": 3201916001000,
    "question": "which radio program episode has the subject of stephen jay gould?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bj8t51",
        "entity_name": "Questioning the Millenium"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bjd5_n",
        "entity_name": "Fresh Air: May 21, 2002"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "radio.radio_program_episode",
          "class": "radio.radio_program_episode",
          "friendly_name": "Radio program episode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "radio.radio_episode_segment",
          "class": "radio.radio_episode_segment",
          "friendly_name": "Radio episode segment",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.06y7d",
          "class": "radio.radio_subject",
          "friendly_name": "Stephen Jay Gould",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "radio.radio_program_episode.segments",
          "friendly_name": "Segments"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "radio.radio_episode_segment.subjects",
          "friendly_name": "Subjects"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program_episode . \n?x1 :type.object.type :radio.radio_episode_segment . \nVALUES ?x2 { :m.06y7d } \n?x0 :radio.radio_program_episode.segments ?x1 . \n?x1 :radio.radio_episode_segment.subjects ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "radio"
    ],
    "level": "zero-shot",
    "s_expression": "(AND radio.radio_program_episode (JOIN radio.radio_program_episode.segments (JOIN radio.radio_episode_segment.subjects m.06y7d)))",
    "topic_entity": {
      "m.06y7d": "Stephen Jay Gould"
    }
  },
  {
    "qid": 3200546005000,
    "question": "what tennis player won the same match as monica niculescu?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0669zsv",
        "entity_name": "Klara Koukalova"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "tennis.tennis_player",
          "class": "tennis.tennis_player",
          "friendly_name": "Tennis Player",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "tennis.tennis_match",
          "class": "tennis.tennis_match",
          "friendly_name": "Tennis Match",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03hnrtm",
          "class": "tennis.tennis_player",
          "friendly_name": "Monica Niculescu",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "tennis.tennis_player.matches_won",
          "friendly_name": "Matches Won"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "tennis.tennis_player.matches_won",
          "friendly_name": "Matches Won"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :tennis.tennis_player . \n?x1 :type.object.type :tennis.tennis_match . \nVALUES ?x2 { :m.03hnrtm } \n?x0 :tennis.tennis_player.matches_won ?x1 . \n?x2 :tennis.tennis_player.matches_won ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "tennis"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND tennis.tennis_player (JOIN tennis.tennis_player.matches_won (JOIN (R tennis.tennis_player.matches_won) m.03hnrtm)))",
    "topic_entity": {
      "m.03hnrtm": "Monica Niculescu"
    }
  },
  {
    "qid": 3200492005000,
    "question": "who is the video game designer that designed a musical game followed by gh aerosmith?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02rn99",
        "entity_name": "Harmonix"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.cvg_designer",
          "class": "cvg.cvg_designer",
          "friendly_name": "Video Game Designer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.musical_game",
          "class": "cvg.musical_game",
          "friendly_name": "Musical Game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03nsxzp",
          "class": "cvg.musical_game",
          "friendly_name": "gh aerosmith",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.cvg_designer.games_designed",
          "friendly_name": "Games Designed"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "cvg.computer_videogame.prequel",
          "friendly_name": "Previous in narrative"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.cvg_designer . \n?x1 :type.object.type :cvg.musical_game . \nVALUES ?x2 { :m.03nsxzp } \n?x0 :cvg.cvg_designer.games_designed ?x1 . \n?x2 :cvg.computer_videogame.prequel ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.cvg_designer (JOIN cvg.cvg_designer.games_designed (JOIN (R cvg.computer_videogame.prequel) m.03nsxzp)))",
    "topic_entity": {
      "m.03nsxzp": "Guitar Hero: Aerosmith"
    }
  },
  {
    "qid": 3206444010000,
    "question": "the artist sonia was on the television soundtrack for which television show?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b6080",
        "entity_name": "Tenchi Universe"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "tv.tv_program",
          "class": "tv.tv_program",
          "friendly_name": "TV Program",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "tv.tv_soundtrack",
          "class": "tv.tv_soundtrack",
          "friendly_name": "TV soundtrack",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03xnbkw",
          "class": "music.musical_group",
          "friendly_name": "Sonia",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "tv.tv_soundtrack.tv_program",
          "friendly_name": "TV program"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "music.album.artist",
          "friendly_name": "Artist"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :tv.tv_program . \n?x1 :type.object.type :tv.tv_soundtrack . \nVALUES ?x2 { :m.03xnbkw } \n?x1 :tv.tv_soundtrack.tv_program ?x0 . \n?x1 :music.album.artist ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "music",
      "tv"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND tv.tv_program (JOIN (R tv.tv_soundtrack.tv_program) (JOIN music.album.artist m.03xnbkw)))",
    "topic_entity": {
      "m.03xnbkw": "Sonia"
    }
  },
  {
    "qid": 4300899014000,
    "question": "what star can be found in a constellation whose location is by fornax?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.15dp_pcf",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120zv5zs",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121hg3jz",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1239vds8",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.15dq7xd5",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ztj7rw",
        "entity_name": "Phi3 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121_4pnd",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wt0k",
        "entity_name": "Pi Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06m7ch",
        "entity_name": "Beta Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.011_h4",
        "entity_name": "HE0107-5240"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.016dw_",
        "entity_name": "Epsilon Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01d58t",
        "entity_name": "Achernar"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0268yml",
        "entity_name": "Tau4 Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026g23p",
        "entity_name": "Delta Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026g361",
        "entity_name": "Theta Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026g3sn",
        "entity_name": "Upsilon Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026g472",
        "entity_name": "Pi Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02jpm0",
        "entity_name": "Cayrel's Star"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02q4flf",
        "entity_name": "14 Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02rmz7l",
        "entity_name": "Ross 548"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02rys4k",
        "entity_name": "HD 11506"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02x2ss9",
        "entity_name": "HD 5319"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03d1rl3",
        "entity_name": "HD 4113"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03h5wlc",
        "entity_name": "HD 17925"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0404d54",
        "entity_name": "HD 15115"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0404dtc",
        "entity_name": "BD-12° 134"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04czjnr",
        "entity_name": "WASP-4"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04gq01t",
        "entity_name": "81 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.057t2p",
        "entity_name": "Alpha Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05_600h",
        "entity_name": "WASP-5"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05bkc9",
        "entity_name": "79 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05bxxz",
        "entity_name": "HD 2638"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05c2yc",
        "entity_name": "HD 6434"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.064ln5g",
        "entity_name": "BD-17°63"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07d74x",
        "entity_name": "YZ Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07k7q_f",
        "entity_name": "WASP-18"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07ws_w",
        "entity_name": "Theta Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wsn1",
        "entity_name": "Alpha Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wspt",
        "entity_name": "Beta Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wsqv",
        "entity_name": "Gamma Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wst7",
        "entity_name": "Delta Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wsty",
        "entity_name": "Eta Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wsxq",
        "entity_name": "Epsilon Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wsz3",
        "entity_name": "Zeta Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wszt",
        "entity_name": "Iota Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wt0x",
        "entity_name": "Mu Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wt9p",
        "entity_name": "Sigma Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wtb0",
        "entity_name": "Xi Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wtcj",
        "entity_name": "Tau Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08bdwc",
        "entity_name": "25 Arietis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08sgt8",
        "entity_name": "Eta Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0990c4",
        "entity_name": "HD 142"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09cvf7",
        "entity_name": "HD 12039"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09gtcb",
        "entity_name": "GJ 1002"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ccwmt",
        "entity_name": "Gliese 105"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0czrjz",
        "entity_name": "Kappa1 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dgnr4w",
        "entity_name": "Lambda Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gvrnzy",
        "entity_name": "WASP-44"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwr41h",
        "entity_name": "Epsilon Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwsdw2",
        "entity_name": "Rho Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwt3s5",
        "entity_name": "Upsilon2 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwty4y",
        "entity_name": "Mu Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwvfwh",
        "entity_name": "Chi Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwvzg7",
        "entity_name": "Xi1 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwx08c",
        "entity_name": "Nu Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwxf2s",
        "entity_name": "Sigma Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwyccz",
        "entity_name": "Phi1 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwz6nv",
        "entity_name": "Phi2 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0m0hqhf",
        "entity_name": "3 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0m0jqkk",
        "entity_name": "46 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0m0pff1",
        "entity_name": "2 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n4331b",
        "entity_name": "Omega Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n46rr2",
        "entity_name": "20 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n47rl6",
        "entity_name": "Nu Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n481pl",
        "entity_name": "7 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n490nj",
        "entity_name": "Zeta Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n4c0lx",
        "entity_name": "Lambda Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n4ck1l",
        "entity_name": "6 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0nhjt3q",
        "entity_name": "75 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0px_m21",
        "entity_name": "Kappa Phoenicis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0px_xq7",
        "entity_name": "Lambda1 Phoenicis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0py12s1",
        "entity_name": "Eta Phoenicis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0py1fh8",
        "entity_name": "Iota Phoenicis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0py1fky",
        "entity_name": "Gamma Phoenicis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0py1m2g",
        "entity_name": "Psi Phoenicis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0py1vl_",
        "entity_name": "Delta Phoenicis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0py2dvy",
        "entity_name": "Epsilon Phoenicis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0py2wgj",
        "entity_name": "Mu Phoenicis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0x0f9_p",
        "entity_name": "Mira A"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.057t5r",
        "entity_name": "Beta Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08sgm1",
        "entity_name": "Eta Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0py1n_w",
        "entity_name": "Beta Phoenicis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120lq9z0",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fxfvm",
        "entity_name": "Nu Phoenicis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121011q6",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pgdp8p",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pgdrp3",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120j8hwm",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122qglk6",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120rrrx6",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122s8wx5",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.12214qp2h",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pfsx9z",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07k840",
        "entity_name": "Gliese 1"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pg7sp0",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121g1kvf",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.012hr6kf",
        "entity_name": "63 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.12214j5_4",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.070mj6",
        "entity_name": "Delta Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1228lwcs",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0410cb",
        "entity_name": "EF Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cyj_r",
        "entity_name": "p Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120hhsv8",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1227ptwd",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122tpfrv",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122kc05j",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pgtsf_",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08s1ct",
        "entity_name": "Zeta Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cnc9h",
        "entity_name": "94 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pgnd__",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02rqrtp",
        "entity_name": "HD 2039"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wt8n",
        "entity_name": "Kappa Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ftd6j",
        "entity_name": "58 Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0wyrzp1",
        "entity_name": "49 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120qkxyh",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122mwq5_",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026w82r",
        "entity_name": "HR 1614"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122kjj0k",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02wczd2",
        "entity_name": "Gliese 86"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02rhbpq",
        "entity_name": "HD 11964"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08sgs1",
        "entity_name": "Iota Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pfyxb7",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.12214r8gz",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121k3jp2",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122czlm7",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07w17d",
        "entity_name": "HD 28185"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122qxyv0",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.12214r6n1",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1218dlpd",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06m7gl",
        "entity_name": "Gamma Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122h6zdc",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05cbrd",
        "entity_name": "HD 4208"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07ptc",
        "entity_name": "Tau Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pg0d_f",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ccq4",
        "entity_name": "HD 10647"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pgqx5w",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wtfp",
        "entity_name": "Lambda Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122n5zc4",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121pkfg5",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1210xqy8",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08sgwz",
        "entity_name": "Gamma Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n5v8fg",
        "entity_name": "R Sculptoris"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.12195y9s",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121g0z88",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120rrrx3",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121cs07t",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03r7pr",
        "entity_name": "82 G. Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pgx8z0",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cp0v_",
        "entity_name": "HD 224693"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0py0z4s",
        "entity_name": "HD 222095"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121v2d71",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.15dpx4qf",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1232c4gp",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120zcp9w",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122dsjvh",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1216xcxb",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pfx48r",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08s7f0",
        "entity_name": "Upsilon2 Eridani"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120sd67s",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.119pgf_0k",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05yq6rn",
        "entity_name": "18 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.011cbpvh",
        "entity_name": "T Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0y6lbm0",
        "entity_name": "84 Ceti"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h65dl3",
        "entity_name": "WISE J0254+0223"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122qmh1_",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121c9_05",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122d8c3q",
        "entity_name": "null"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "astronomy.star",
          "class": "astronomy.star",
          "friendly_name": "Star",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "astronomy.constellation",
          "class": "astronomy.constellation",
          "friendly_name": "Constellation",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "astronomy.constellation_bordering_relationship",
          "class": "astronomy.constellation_bordering_relationship",
          "friendly_name": "Constellation bordering relationship",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02_08",
          "class": "astronomy.constellation",
          "friendly_name": "Fornax",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "astronomy.constellation.contains",
          "friendly_name": "Stars"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "astronomy.constellation_bordering_relationship.constellations",
          "friendly_name": "Constellations"
        },
        {
          "start": 3,
          "end": 2,
          "relation": "astronomy.constellation.bordering_constellations_new",
          "friendly_name": "Bordering constellations"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.star . \n?x1 :type.object.type :astronomy.constellation . \n?x2 :type.object.type :astronomy.constellation_bordering_relationship . \nVALUES ?x3 { :m.02_08 } \n?x1 :astronomy.constellation.contains ?x0 . \n?x2 :astronomy.constellation_bordering_relationship.constellations ?x1 . \n?x3 :astronomy.constellation.bordering_constellations_new ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "astronomy"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND astronomy.star (JOIN (R astronomy.constellation.contains) (JOIN (R astronomy.constellation_bordering_relationship.constellations) (JOIN (R astronomy.constellation.bordering_constellations_new) m.02_08))))",
    "topic_entity": {
      "m.02_08": "Fornax"
    }
  },
  {
    "qid": 3204005000000,
    "question": "what is the unit length of a measurement system whose volumetric heat capacity units is joule per cubic metre per kelvin?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.025sx5b",
        "entity_name": "Picometre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jmrm",
        "entity_name": "Millimeter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0db_d",
        "entity_name": "Kilometer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04sf9",
        "entity_name": "Meter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.024_6",
        "entity_name": "Centimeter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02qs2d",
        "entity_name": "Hectometre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.055v9",
        "entity_name": "Micrometer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01p5ld",
        "entity_name": "Decimetre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01p6gt",
        "entity_name": "Decametre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02mvqx",
        "entity_name": "Megametre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02p0rth",
        "entity_name": "Nanometre"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.distance_unit",
          "class": "measurement_unit.distance_unit",
          "friendly_name": "Unit of Length",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02t6r4z",
          "class": "measurement_unit.volumetric_heat_capacity_unit",
          "friendly_name": "Joule per cubic metre per kelvin",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.distance_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.volumetric_heat_capacity_units",
          "friendly_name": "Volumetric Heat Capacity Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.distance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02t6r4z } \n?x0 :measurement_unit.distance_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.volumetric_heat_capacity_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.distance_unit (JOIN measurement_unit.distance_unit.measurement_system (JOIN measurement_unit.measurement_system.volumetric_heat_capacity_units m.02t6r4z)))",
    "topic_entity": {
      "m.02t6r4z": "Joule per cubic metre per kelvin"
    }
  },
  {
    "qid": 4302207017000,
    "question": "the container for digital negative shares the same genre of which file format?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0268361",
        "entity_name": "DMPL"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h0c4",
        "entity_name": "JPEG 2000"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.072vxx",
        "entity_name": "Extensible Metadata Platform"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01nvyx",
        "entity_name": "Truevision TGA"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122dsmnf",
        "entity_name": "Universal Image Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.012h7x",
        "entity_name": "Encapsulated PostScript"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.017967",
        "entity_name": "OpenEXR"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01ct7p",
        "entity_name": "Digital Picture Exchange"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01dnrc",
        "entity_name": "FITS"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01jdks",
        "entity_name": "X3D"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01l4d_",
        "entity_name": "BMP file format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01n8_3",
        "entity_name": "ICER"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01nbx_",
        "entity_name": "ILBM"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01sx3h",
        "entity_name": "Exchangeable image file format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01zdj4",
        "entity_name": "PICT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0200_v",
        "entity_name": "Vector Markup Language"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.020133",
        "entity_name": "Xara Flare"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02019q",
        "entity_name": "Extended Vector Animation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02107h",
        "entity_name": "Computer Graphics Metafile"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.025s47z",
        "entity_name": "Joint Photographic Experts Group"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.025v4fs",
        "entity_name": "JPEG File Interchange Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026sy5h",
        "entity_name": "PLY"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0277836",
        "entity_name": "PDF/X"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027g7wt",
        "entity_name": "Wavelet scalar quantization"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027nmyn",
        "entity_name": "Jhead"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02803fy",
        "entity_name": "Catia Graphical Representation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0289vdx",
        "entity_name": "Portable Gray Map"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02l627",
        "entity_name": "X PixMap"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02mt_d",
        "entity_name": "ANIM"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02w9sd",
        "entity_name": "DjVu"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0322zr",
        "entity_name": "SWF"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0324q2",
        "entity_name": "XCF"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03k8jc",
        "entity_name": "ART image file format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03sbhz",
        "entity_name": "APNG"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.041wn9",
        "entity_name": "Wireless Application Protocol Bitmap Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0429cc",
        "entity_name": "IGES"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042gt0",
        "entity_name": "Joint Bi-level Image Experts Group"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042mvx",
        "entity_name": "JBIG"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0443t",
        "entity_name": "JPEG Network Graphics"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.049vsx",
        "entity_name": "Magick Image File Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04qxth",
        "entity_name": "XBin"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04x6lk",
        "entity_name": "X BitMap"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.052fr",
        "entity_name": "Multiple-image Network Graphics"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.054zwc",
        "entity_name": "LSM"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05fc4j",
        "entity_name": "Cineon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05q8xp",
        "entity_name": "Wavefront .obj file"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.065yj",
        "entity_name": "PCX"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06f60",
        "entity_name": "Raster graphics"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06mvj8",
        "entity_name": "ICO"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06xdp",
        "entity_name": "Scalable Vector Graphics"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.078f0g",
        "entity_name": "STL"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07wblc",
        "entity_name": ".BLP"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07xhlx",
        "entity_name": "Image file formats"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.085hyj",
        "entity_name": "Vector graphics markup language"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08612f",
        "entity_name": "JT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0871pw",
        "entity_name": "MrSID"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08pzbm",
        "entity_name": "Cartesian Perceptual Compression"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08syb9",
        "entity_name": "JBIG2"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.092kft",
        "entity_name": "3DXML"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b09gl",
        "entity_name": "Apple Icon Image format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bdfrw",
        "entity_name": "xVRML"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c7gg0",
        "entity_name": "Image Cytometry Standard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cq3qv",
        "entity_name": "Silicon Graphics Image"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0csw66",
        "entity_name": "Adobe Illustrator Artwork"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0d3hx9",
        "entity_name": "JPEG XR"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dxwcb",
        "entity_name": "Microsoft Document Imaging Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0f8zx9",
        "entity_name": "Content Sealed Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fqqq_",
        "entity_name": "FELICS"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g3jhf",
        "entity_name": "TIFF/EP"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j4pp",
        "entity_name": "Netpbm format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0l071",
        "entity_name": "Windows Metafile"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0psnq",
        "entity_name": "VRML"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01t1vz",
        "entity_name": "Layered Image File Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0600q",
        "entity_name": "Portable Document Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.012h7d",
        "entity_name": "Tagged Image File Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0220vh_",
        "entity_name": "JPEG"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03bfb",
        "entity_name": "GIF"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06279",
        "entity_name": "Portable Network Graphics"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09yy1v",
        "entity_name": "Lossless JPEG"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gp58p",
        "entity_name": "FlashPix"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08g1q1",
        "entity_name": "Raw image format"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.file_format",
          "class": "computer.file_format",
          "friendly_name": "File Format",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.file_format_genre",
          "class": "computer.file_format_genre",
          "friendly_name": "File Format Genre",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "computer.file_format",
          "class": "computer.file_format",
          "friendly_name": "File Format",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.03_2yh",
          "class": "computer.file_format",
          "friendly_name": "Digital Negative",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.file_format_genre.file_formats",
          "friendly_name": "File Formats"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "computer.file_format.genre",
          "friendly_name": "Genre"
        },
        {
          "start": 3,
          "end": 2,
          "relation": "computer.file_format.container_for",
          "friendly_name": "Container For"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.file_format . \n?x1 :type.object.type :computer.file_format_genre . \n?x2 :type.object.type :computer.file_format . \nVALUES ?x3 { :m.03_2yh } \n?x1 :computer.file_format_genre.file_formats ?x0 . \n?x2 :computer.file_format.genre ?x1 . \n?x3 :computer.file_format.container_for ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND computer.file_format (JOIN (R computer.file_format_genre.file_formats) (JOIN (R computer.file_format.genre) (JOIN (R computer.file_format.container_for) m.03_2yh))))",
    "topic_entity": {
      "m.03_2yh": "Digital Negative"
    }
  },
  {
    "qid": 3200878001000,
    "question": "the same division with barrie colts has what other hockey teams?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.015pfq",
        "entity_name": "Brampton Battalion"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02qss0v",
        "entity_name": "Niagara IceDogs"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02rlqj9",
        "entity_name": "Mississauga Steelheads"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03skc7",
        "entity_name": "Sudbury Wolves"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "ice_hockey.hockey_team",
          "class": "ice_hockey.hockey_team",
          "friendly_name": "Ice hockey team",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "ice_hockey.hockey_division",
          "class": "ice_hockey.hockey_division",
          "friendly_name": "Ice hockey division",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.033587",
          "class": "ice_hockey.hockey_team",
          "friendly_name": "Barrie Colts",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "ice_hockey.hockey_team.division",
          "friendly_name": "Division"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "ice_hockey.hockey_division.teams",
          "friendly_name": "Teams"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :ice_hockey.hockey_team . \n?x1 :type.object.type :ice_hockey.hockey_division . \nVALUES ?x2 { :m.033587 } \n?x0 :ice_hockey.hockey_team.division ?x1 . \n?x1 :ice_hockey.hockey_division.teams ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "ice_hockey"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND ice_hockey.hockey_team (JOIN ice_hockey.hockey_team.division (JOIN ice_hockey.hockey_division.teams m.033587)))",
    "topic_entity": {
      "m.033587": "Barrie Colts"
    }
  },
  {
    "qid": 3203411020000,
    "question": "name the tld registry that registered afilias.",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.022clc",
        "entity_name": "Public Interest Registry"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "internet.top_level_domain_registry",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Top Level Domain Registry",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "internet.top_level_domain",
          "class": "internet.top_level_domain",
          "friendly_name": "Top Level Domain",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.051dgm",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Afilias",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "internet.top_level_domain_registry.domains",
          "friendly_name": "Domains Registered"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "internet.top_level_domain.registry",
          "friendly_name": "Registry"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.top_level_domain_registry . \n?x1 :type.object.type :internet.top_level_domain . \nVALUES ?x2 { :m.051dgm } \n?x0 :internet.top_level_domain_registry.domains ?x1 . \n?x1 :internet.top_level_domain.registry ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "internet"
    ],
    "level": "compositional",
    "s_expression": "(AND internet.top_level_domain_registry (JOIN internet.top_level_domain_registry.domains (JOIN internet.top_level_domain.registry m.051dgm)))",
    "topic_entity": {
      "m.051dgm": "Afilias"
    }
  },
  {
    "qid": 3200371005000,
    "question": "the conference electronic entertainment expo 2013 has a conference venue that is associated with what conference?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gmghqr",
        "entity_name": "Electronic Entertainment Expo 2011"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j9lvpx",
        "entity_name": "Electronic Entertainment Expo 2012"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05zkqyz",
        "entity_name": "Electronic Entertainment Expo 2009"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09v7jkb",
        "entity_name": "Electronic Entertainment Expo 2010"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.010fchkz",
        "entity_name": "Electronic Entertainment Expo 2014"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference",
          "class": "conferences.conference",
          "friendly_name": "Conference event",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference_venue",
          "class": "conferences.conference_venue",
          "friendly_name": "Conference venue",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0vpt98m",
          "class": "conferences.conference",
          "friendly_name": "Electronic Entertainment Expo 2013",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "conferences.conference.venue",
          "friendly_name": "Venue"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "conferences.conference_venue.conferences",
          "friendly_name": "Conferences"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference . \n?x1 :type.object.type :conferences.conference_venue . \nVALUES ?x2 { :m.0vpt98m } \n?x0 :conferences.conference.venue ?x1 . \n?x1 :conferences.conference_venue.conferences ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference (JOIN conferences.conference.venue (JOIN conferences.conference_venue.conferences m.0vpt98m)))",
    "topic_entity": {
      "m.0vpt98m": "Electronic Entertainment Expo 2013"
    }
  },
  {
    "qid": 3205347011000,
    "question": "name the episode of a radio program whose artist is irene worth.",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0668866",
        "entity_name": "The Odyssey of Homer Episode One"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.066886d",
        "entity_name": "The Odyssey of Homer Episode Four"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.066886l",
        "entity_name": "The Odyssey of Homer Episode Six"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.066886s",
        "entity_name": "The Odyssey of Homer Episode Five"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.066886z",
        "entity_name": "The Odyssey of Homer Episode Seven"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0668874",
        "entity_name": "The Odyssey of Homer Episode Eight"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.066887b",
        "entity_name": "The Odyssey of Homer Episode Three"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.066887j",
        "entity_name": "The Odyssey of Homer Episode Two"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "radio.radio_program_episode",
          "class": "radio.radio_program_episode",
          "friendly_name": "Radio program episode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "radio.radio_program",
          "class": "radio.radio_program",
          "friendly_name": "Radio program",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0g4sfg",
          "class": "broadcast.artist",
          "friendly_name": "Irene Worth",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "radio.radio_program.episodes",
          "friendly_name": "Episodes"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "broadcast.content.artist",
          "friendly_name": "Artists"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program_episode . \n?x1 :type.object.type :radio.radio_program . \nVALUES ?x2 { :m.0g4sfg } \n?x1 :radio.radio_program.episodes ?x0 . \n?x1 :broadcast.content.artist ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "broadcast",
      "radio"
    ],
    "level": "zero-shot",
    "s_expression": "(AND radio.radio_program_episode (JOIN (R radio.radio_program.episodes) (JOIN broadcast.content.artist m.0g4sfg)))",
    "topic_entity": {
      "m.0g4sfg": "Irene Worth"
    }
  },
  {
    "qid": 3200855008000,
    "question": "who is the colorist for comic book new avengers?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.08050n",
        "entity_name": "Dave McCaig"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "comic_books.comic_book_colorist",
          "class": "comic_books.comic_book_colorist",
          "friendly_name": "Comic Book Colorist",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "comic_books.comic_book_issue",
          "class": "comic_books.comic_book_issue",
          "friendly_name": "Comic Book Issue",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0648fr",
          "class": "comic_books.comic_book_series",
          "friendly_name": "new avengers",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "comic_books.comic_book_colorist.comic_covers_colored",
          "friendly_name": "Comic Covers Colored"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "comic_books.comic_book_series.issues",
          "friendly_name": "Issues"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_colorist . \n?x1 :type.object.type :comic_books.comic_book_issue . \nVALUES ?x2 { :m.0648fr } \n?x0 :comic_books.comic_book_colorist.comic_covers_colored ?x1 . \n?x2 :comic_books.comic_book_series.issues ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "comic_books"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND comic_books.comic_book_colorist (JOIN comic_books.comic_book_colorist.comic_covers_colored (JOIN (R comic_books.comic_book_series.issues) m.0648fr)))",
    "topic_entity": {
      "m.0648fr": "The New Avengers"
    }
  },
  {
    "qid": 3205368009000,
    "question": "which unit of length is affiliated with a measurement system whose mass units include hundredweight?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vb3",
        "entity_name": "Mile"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01crvy",
        "entity_name": "Foot"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03th6",
        "entity_name": "Inch"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01464h",
        "entity_name": "Fathom"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02mr9z",
        "entity_name": "Rod"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0355rq",
        "entity_name": "Chain"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.018cl3",
        "entity_name": "Cable length"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05bl8",
        "entity_name": "Nautical mile"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05gwxt",
        "entity_name": "Link"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.087tz",
        "entity_name": "Yard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.031l7",
        "entity_name": "Furlong"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.050f99",
        "entity_name": "League"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fhs97",
        "entity_name": "Thousandth of an inch"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.distance_unit",
          "class": "measurement_unit.distance_unit",
          "friendly_name": "Unit of Length",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02cylp",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Hundredweight",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.distance_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.weight_units",
          "friendly_name": "Mass Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.distance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02cylp } \n?x0 :measurement_unit.distance_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.weight_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.distance_unit (JOIN measurement_unit.distance_unit.measurement_system (JOIN measurement_unit.measurement_system.weight_units m.02cylp)))",
    "topic_entity": {
      "m.02cylp": "Hundredweight"
    }
  },
  {
    "qid": 4301141017000,
    "question": "in what countries is the version developed by calaris studios and distributed through wii ware released?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.075g54v",
        "entity_name": "Wii/DS NA"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_region",
          "class": "cvg.computer_game_region",
          "friendly_name": "Video Game Region",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03hfyj6",
          "class": "cvg.computer_game_distribution_system",
          "friendly_name": "wii ware",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.0fpnfkn",
          "class": "cvg.cvg_developer",
          "friendly_name": "Calaris Studios",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.game_version.regions",
          "friendly_name": "Regions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.game_version.distributed_through",
          "friendly_name": "Distributed through"
        },
        {
          "start": 3,
          "end": 1,
          "relation": "cvg.cvg_developer.game_versions_developed",
          "friendly_name": "Game Versions Developed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_region . \n?x1 :type.object.type :cvg.game_version . \nVALUES ?x2 { :m.03hfyj6 } \nVALUES ?x3 { :m.0fpnfkn } \n?x1 :cvg.game_version.regions ?x0 . \n?x1 :cvg.game_version.distributed_through ?x2 . \n?x3 :cvg.cvg_developer.game_versions_developed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.0fpnfkn))))",
    "topic_entity": {
      "m.03hfyj6": "WiiWare",
      "m.0fpnfkn": "Calaris Studios"
    }
  },
  {
    "qid": 3205327013000,
    "question": "nazi holocaust fits into what radio broadcast genres?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03hxd3",
        "entity_name": "Radio documentary"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "broadcast.genre",
          "class": "broadcast.genre",
          "friendly_name": "Broadcast Genre",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "radio.radio_program",
          "class": "radio.radio_program",
          "friendly_name": "Radio program",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03hzt",
          "class": "radio.radio_subject",
          "friendly_name": "nazi holocaust",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "broadcast.content.genre",
          "friendly_name": "Genres"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "radio.radio_program.subjects",
          "friendly_name": "Subject"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.genre . \n?x1 :type.object.type :radio.radio_program . \nVALUES ?x2 { :m.03hzt } \n?x1 :broadcast.content.genre ?x0 . \n?x1 :radio.radio_program.subjects ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "radio",
      "broadcast"
    ],
    "level": "zero-shot",
    "s_expression": "(AND broadcast.genre (JOIN (R broadcast.content.genre) (JOIN radio.radio_program.subjects m.03hzt)))",
    "topic_entity": {
      "m.03hzt": "The Holocaust"
    }
  },
  {
    "qid": 3200435005000,
    "question": "which unit profile is the si base unit of joules?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.120hhsxf",
        "entity_name": "Kiloton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1224btsg",
        "entity_name": "Kilojoule"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122jqjdq",
        "entity_name": "Megaton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.017mjn",
        "entity_name": "Hartree"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.018lqb",
        "entity_name": "Kilowatt hour"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01fr3",
        "entity_name": "British thermal unit"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01wv2",
        "entity_name": "Calorie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02m68",
        "entity_name": "Electronvolt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02phk",
        "entity_name": "Erg"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02qdq0",
        "entity_name": "Barrel of oil equivalent"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03r93c",
        "entity_name": "Tonne of oil equivalent"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04g9275",
        "entity_name": "Kilocalorie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04n4r_n",
        "entity_name": "Cubic mile of oil"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05cdmtb",
        "entity_name": "Ton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05cpvgm",
        "entity_name": "Milliton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05cpvh4",
        "entity_name": "Microton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05pxqc7",
        "entity_name": "Megaelectronvolt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cz9j60",
        "entity_name": "Kilogram oil equivalent"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "freebase.unit_profile",
          "class": "freebase.unit_profile",
          "friendly_name": "Unit Profile",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.common_dimension",
          "class": "measurement_unit.common_dimension",
          "friendly_name": "Common Dimension",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04570",
          "class": "measurement_unit.energy_unit",
          "friendly_name": "joules",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.dimension.units",
          "friendly_name": "Units"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.dimension.si_base_unit",
          "friendly_name": "SI Base Unit"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :freebase.unit_profile . \n?x1 :type.object.type :measurement_unit.common_dimension . \nVALUES ?x2 { :m.04570 } \n?x1 :measurement_unit.dimension.units ?x0 . \n?x1 :measurement_unit.dimension.si_base_unit ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND freebase.unit_profile (JOIN (R measurement_unit.dimension.units) (JOIN measurement_unit.dimension.si_base_unit m.04570)))",
    "topic_entity": {
      "m.04570": "Joule"
    }
  },
  {
    "qid": 4302525008000,
    "question": "chromosome 20 (human) has the same band as what genomic locus with an end base over 20299592?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcz6f",
        "entity_name": "20 - [23614276,23617661]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lg53y",
        "entity_name": "20 + [43953610,43960862]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lldvr",
        "entity_name": "20 + [34287860,34308266]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmpn2",
        "entity_name": "20 - [31410305,31452997]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqn6d",
        "entity_name": "20 - [24934872,24987615]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwh7",
        "entity_name": "20 - [29912530,29922139]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls51b",
        "entity_name": "20 + [22476756,22481302]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp7zf",
        "entity_name": "20 + [61054503,61070393]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls3zn",
        "entity_name": "20 - [61846321,61907299]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwxfd",
        "entity_name": "Locus for Human Cytogenetic Band 20q13.2"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh2j7",
        "entity_name": "20 - [59983248,60074260]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ll253",
        "entity_name": "20 - [48940289,48980933]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgc43",
        "entity_name": "20 - [47553817,47618113]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljrh3",
        "entity_name": "20 + [25329773,25376764]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljyy0",
        "entity_name": "20 - [33700290,33716251]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lk37g",
        "entity_name": "20 - [57872012,57940603]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lpp0w",
        "entity_name": "20 + [42537960,42556657]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsvsx",
        "entity_name": "20 + [31717964,31719991]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lk76t",
        "entity_name": "20 + [46971833,47083644]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkfsb",
        "entity_name": "20 + [33278105,33328217]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqc4n",
        "entity_name": "20 + [32567864,32592422]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqhw_",
        "entity_name": "20 - [34674335,34707971]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcfbd",
        "entity_name": "20 + [32311831,32320808]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lk3q1",
        "entity_name": "20 + [43531807,43543585]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwfy",
        "entity_name": "20 + [60558104,60578408]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcz49",
        "entity_name": "20 - [23676189,23679573]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp0gr",
        "entity_name": "20 - [46674199,46877826]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls46x",
        "entity_name": "20 + [61963009,61964784]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llhj3",
        "entity_name": "20 - [25602850,25625468]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnk9n",
        "entity_name": "20 + [52525663,52701116]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ly5x4",
        "entity_name": "20 + [36491723,36491860]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwxdv",
        "entity_name": "Locus for Human Cytogenetic Band 20q13.13"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lg0nx",
        "entity_name": "20 + [43236911,43238598]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp1g6",
        "entity_name": "20 + [33026866,33053896]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp70l",
        "entity_name": "20 + [42807901,42813081]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lt8zv",
        "entity_name": "20 - [29516969,29524476]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ln84v",
        "entity_name": "20 - [33353794,33463246]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lj7lz",
        "entity_name": "20 - [33720024,33750687]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llvgf",
        "entity_name": "20 - [43435933,43440370]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqxcr",
        "entity_name": "20 - [61659882,61676032]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lg9rt",
        "entity_name": "20 - [60145185,60151868]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lktfq",
        "entity_name": "20 + [30871434,30901866]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqnvw",
        "entity_name": "20 + [61809834,61837937]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ltb_b",
        "entity_name": "20 - [60552198,60559175]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lg21s",
        "entity_name": "20 - [30243967,30259191]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls4f5",
        "entity_name": "20 - [42813862,42872325]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkm0g",
        "entity_name": "20 + [42593849,42681091]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ln1qw",
        "entity_name": "20 + [61838438,61840899]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnlv7",
        "entity_name": "20 + [32926501,32979422]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls3vl",
        "entity_name": "20 - [60471947,60484420]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lssc2",
        "entity_name": "20 + [23447782,23470646]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lt8z3",
        "entity_name": "20 + [29492071,29501720]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgcc0",
        "entity_name": "20 - [61630209,61639150]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh0q0",
        "entity_name": "20 - [47163282,47238310]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljyzj",
        "entity_name": "20 - [61801252,61809808]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls424",
        "entity_name": "20 - [55505629,55533559]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmbq6",
        "entity_name": "20 - [57041598,57051263]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls45c",
        "entity_name": "20 - [35163042,35241387]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llftx",
        "entity_name": "20 + [60152216,60190960]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmgyr",
        "entity_name": "20 + [33852826,34001406]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsfdc",
        "entity_name": "20 - [43171506,43177216]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwx6n",
        "entity_name": "Locus for Human Cytogenetic Band 20p11.23"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwx8x",
        "entity_name": "Locus for Human Cytogenetic Band 20q11.1"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh03_",
        "entity_name": "20 + [22964120,22965286]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lk6rj",
        "entity_name": "20 + [33223434,33228827]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lklm6",
        "entity_name": "20 - [40134805,41251970]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkwv1",
        "entity_name": "20 - [32766238,32877093]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnd08",
        "entity_name": "20 + [55399869,55417794]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp2wx",
        "entity_name": "20 - [44123030,44151986]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrgsw",
        "entity_name": "20 + [57612997,57856160]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwh_",
        "entity_name": "20 - [30240609,30241823]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lt8y9",
        "entity_name": "20 + [29466711,29480643]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ldsp5",
        "entity_name": "20 - [22509822,22514101]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lf21q",
        "entity_name": "20 - [61507985,61574436]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lhlw2",
        "entity_name": "20 - [51617016,51633042]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ll0v8",
        "entity_name": "20 + [47862656,47942178]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnfvf",
        "entity_name": "20 + [48844873,48927120]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls52c",
        "entity_name": "20 + [43919668,43941176]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwxc4",
        "entity_name": "Locus for Human Cytogenetic Band 20q12"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwxgj",
        "entity_name": "Locus for Human Cytogenetic Band 20q13.32"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls5mk",
        "entity_name": "20 - [60418687,60435983]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llglt",
        "entity_name": "20 - [25223378,25319453]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnx2h",
        "entity_name": "20 - [47295843,47328008]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq984",
        "entity_name": "20 - [60397082,60415727]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwx8b",
        "entity_name": "Locus for Human Cytogenetic Band 20p11.1"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lf057",
        "entity_name": "20 - [33330138,33336007]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfn0l",
        "entity_name": "20 - [32979896,33007261]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lhrn0",
        "entity_name": "20 - [33484562,33489440]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lld3c",
        "entity_name": "20 - [34954058,35013589]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmqx2",
        "entity_name": "20 + [61760090,61798044]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwxfz",
        "entity_name": "Locus for Human Cytogenetic Band 20q13.31"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcqls",
        "entity_name": "20 + [59260951,59945693]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfgly",
        "entity_name": "20 + [62266270,62344049]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgyng",
        "entity_name": "20 - [31459423,31495358]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnsgm",
        "entity_name": "20 - [55656857,55719946]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lchzl",
        "entity_name": "20 - [29715921,29774316]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ldqq9",
        "entity_name": "20 + [30103717,30153319]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lg2wq",
        "entity_name": "20 - [43960803,43974192]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnqzr",
        "entity_name": "20 + [61841654,61845846]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp1d_",
        "entity_name": "20 + [61394982,61432728]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh8jb",
        "entity_name": "20 + [39090875,39186540]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llnh9",
        "entity_name": "20 - [36489362,36489499]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnmb6",
        "entity_name": "20 - [45719558,45848214]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnwxs",
        "entity_name": "20 - [42173750,42249631]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lf42v",
        "entity_name": "20 - [60317515,60375762]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkvf5",
        "entity_name": "20 - [25381336,25514152]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls5g0",
        "entity_name": "20 - [23379040,23381481]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsfc9",
        "entity_name": "20 - [41788214,41789055]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lss9f",
        "entity_name": "20 - [56467831,56523354]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ly5xv",
        "entity_name": "20 + [36495918,36496055]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lf19v",
        "entity_name": "20 - [49053599,49073023]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfrww",
        "entity_name": "20 - [21439647,21442663]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgs9q",
        "entity_name": "20 + [43269087,43271822]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkv8k",
        "entity_name": "20 + [29790564,29853263]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrw1x",
        "entity_name": "20 + [56159388,56169591]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnw3b",
        "entity_name": "20 - [43602678,43609441]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq6k5",
        "entity_name": "20 + [29565901,29621030]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lswwc",
        "entity_name": "20 + [30409813,30490782]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lj0fy",
        "entity_name": "20 + [56659733,56687987]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljsgm",
        "entity_name": "20 + [60246974,60304663]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqswx",
        "entity_name": "20 + [31783468,31843735]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lt8xm",
        "entity_name": "20 - [29456360,29457650]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ldlhl",
        "entity_name": "20 - [62207626,62208627]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lhhqc",
        "entity_name": "20 + [42947757,42970574]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmnyc",
        "entity_name": "20 + [43478137,43488297]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lg_80",
        "entity_name": "20 + [35406501,35467234]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lj2kx",
        "entity_name": "20 - [43355500,43367644]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq_5k",
        "entity_name": "20 - [43613204,43641378]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lktdy",
        "entity_name": "20 - [23007992,23014976]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lptdx",
        "entity_name": "20 + [56701267,56724306]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lpy1s",
        "entity_name": "20 + [36810510,36834247]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwcb",
        "entity_name": "20 + [23368321,23373566]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls4_0",
        "entity_name": "20 + [33750805,33752315]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfh_7",
        "entity_name": "20 - [42681576,42713789]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkwrw",
        "entity_name": "20 - [39240502,39362152]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq2gv",
        "entity_name": "20 + [61996961,62035838]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq4rn",
        "entity_name": "20 + [44771685,44798392]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llh5q",
        "entity_name": "20 - [33053867,33144278]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lpcw6",
        "entity_name": "20 - [44235782,44313740]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ltsbb",
        "entity_name": "20 + [58326031,58332991]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq4pb",
        "entity_name": "20 + [57027703,57035103]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsfkf",
        "entity_name": "20 + [30638941,30660355]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ld_8b",
        "entity_name": "20 + [20296764,20299592]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwf3",
        "entity_name": "20 - [23531046,23534512]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljbtw",
        "entity_name": "20 + [56397650,56455368]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lpq57",
        "entity_name": "20 + [61337720,61342298]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcz5t",
        "entity_name": "20 - [23562293,23566573]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lc9dk",
        "entity_name": "20 - [32331736,32354783]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcrmc",
        "entity_name": "20 + [48240782,48242618]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwx9g",
        "entity_name": "Locus for Human Cytogenetic Band 20q11.21"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljxn6",
        "entity_name": "20 - [49646720,49818314]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ll6c3",
        "entity_name": "20 - [45271787,45418880]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls3_f",
        "entity_name": "20 - [43836253,43853953]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lth1b",
        "entity_name": "20 - [43710615,43732291]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lffln",
        "entity_name": "20 + [41729122,41778535]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfbp1",
        "entity_name": "20 + [44070953,44078606]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lvrt0",
        "entity_name": "20 + [54541708,54544982]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgsbd",
        "entity_name": "20 + [43283423,43286512]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lk19s",
        "entity_name": "20 - [62174977,62181767]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnh27",
        "entity_name": "20 - [44563113,44575600]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwlg",
        "entity_name": "20 + [31713780,31715380]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgy1r",
        "entity_name": "20 + [48032933,48038829]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh0yj",
        "entity_name": "20 - [54377851,54400757]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnx11",
        "entity_name": "20 - [49833987,49852420]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqnk5",
        "entity_name": "20 + [32598352,32611809]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwm9",
        "entity_name": "20 + [31862779,31905830]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls49n",
        "entity_name": "20 - [34839258,34924650]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lggxr",
        "entity_name": "20 - [35059591,35157823]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lj52l",
        "entity_name": "20 - [32139775,32163745]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljtkc",
        "entity_name": "20 - [38747928,38751289]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnwgx",
        "entity_name": "20 - [24891579,24921424]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lw5hs",
        "entity_name": "20 + [35738725,35745049]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ld372",
        "entity_name": "20 + [30813851,30860822]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls5c3",
        "entity_name": "20 - [43596249,43601547]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ltj_2",
        "entity_name": "20 - [43746703,43767071]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljw1k",
        "entity_name": "20 - [43903767,43919441]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llf_z",
        "entity_name": "20 + [36867761,36985080]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq7jk",
        "entity_name": "20 + [36988368,37015112]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcplh",
        "entity_name": "20 + [44180312,44191790]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls_48",
        "entity_name": "20 + [54532954,54534604]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ld4yl",
        "entity_name": "20 + [57308893,57334441]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lr9b9",
        "entity_name": "20 - [44746410,44751682]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ldj7v",
        "entity_name": "20 - [32896183,32924317]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh6dj",
        "entity_name": "20 - [22974269,22978300]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lhrpj",
        "entity_name": "20 + [45564063,45719022]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmj81",
        "entity_name": "20 + [31287462,31294772]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnzhm",
        "entity_name": "20 - [62058498,62071661]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lpyqy",
        "entity_name": "20 + [24397834,24595166]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnhlw",
        "entity_name": "20 + [61374609,61391586]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsscw",
        "entity_name": "20 + [29922165,29996424]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcwc_",
        "entity_name": "20 + [60918831,60942954]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcyj3",
        "entity_name": "20 + [47096244,47146892]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lm7b7",
        "entity_name": "20 - [25004098,25010766]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp7yq",
        "entity_name": "20 - [23303164,23350080]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgmgr",
        "entity_name": "20 + [35240887,35303439]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lj3wt",
        "entity_name": "20 + [42777298,42789865]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnvj6",
        "entity_name": "20 + [54420770,54467242]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp7x5",
        "entity_name": "20 + [35351464,35379076]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsfjb",
        "entity_name": "20 - [26032015,26042697]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lvn1r",
        "entity_name": "20 - [48131067,48203666]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lg5p9",
        "entity_name": "20 - [57945281,57948746]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls4_w",
        "entity_name": "20 - [43950673,43953307]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwxh2",
        "entity_name": "Locus for Human Cytogenetic Band 20q13.33"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ln1kc",
        "entity_name": "20 - [61297225,61317982]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lph05",
        "entity_name": "20 - [44619869,44746513]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwdc",
        "entity_name": "20 - [23493368,23497328]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls5n9",
        "entity_name": "20 + [34019942,34082035]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljf1r",
        "entity_name": "20 - [47682888,47763744]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkt8n",
        "entity_name": "20 + [32045392,32131727]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ln368",
        "entity_name": "20 + [61039885,61050271]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lng0v",
        "entity_name": "20 + [47269290,47294020]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls4g8",
        "entity_name": "20 - [31035241,31055899]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ld71c",
        "entity_name": "20 + [34163761,34284134]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls4bd",
        "entity_name": "20 + [34937983,34956045]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lm1ll",
        "entity_name": "20 + [29526765,29536368]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmmcg",
        "entity_name": "20 + [56989705,57003582]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnhj8",
        "entity_name": "20 - [50133956,50241930]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp80f",
        "entity_name": "20 - [44428095,44468677]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp852",
        "entity_name": "20 - [44010698,44034239]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrvxl",
        "entity_name": "20 + [35964919,36007158]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsfn0",
        "entity_name": "20 + [60131587,60142907]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lt8vm",
        "entity_name": "20 - [29354675,29360048]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lvn0_",
        "entity_name": "20 - [48173713,48203666]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcz50",
        "entity_name": "20 - [23752403,23755311]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkn5y",
        "entity_name": "20 + [33506563,33563216]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lphf_",
        "entity_name": "20 + [39402973,39422635]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ll8wm",
        "entity_name": "20 + [62082874,62134896]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrvzm",
        "entity_name": "20 - [43185480,43186519]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lhyf1",
        "entity_name": "20 + [24877865,24888561]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfxt5",
        "entity_name": "20 + [21634363,21644619]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lczy6",
        "entity_name": "20 - [57003634,57015696]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ld04g",
        "entity_name": "20 - [52203394,52223930]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcszk",
        "entity_name": "20 - [61445108,61463191]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ln2lp",
        "entity_name": "20 - [62041629,62058211]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcjq3",
        "entity_name": "20 - [55178961,55274707]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lr3x2",
        "entity_name": "20 - [23913686,23917415]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ly66q",
        "entity_name": "20 + [47330626,47330715]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp4d5",
        "entity_name": "20 + [36095466,36154631]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ldcp2",
        "entity_name": "20 - [29895763,29897080]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwxd8",
        "entity_name": "Locus for Human Cytogenetic Band 20q13.12"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljq6b",
        "entity_name": "20 + [30184475,30218719]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrw0x",
        "entity_name": "20 + [51022352,51537217]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp67_",
        "entity_name": "20 + [34635436,34655766]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ll6mg",
        "entity_name": "20 + [55338237,55352455]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls5dx",
        "entity_name": "20 - [48646921,48686832]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lv_ct",
        "entity_name": "20 - [51924443,51925639]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lftxk",
        "entity_name": "20 + [60810633,60864566]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsz52",
        "entity_name": "20 - [62185176,62186155]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgf04",
        "entity_name": "20 + [25176705,25226647]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfvzw",
        "entity_name": "20 + [62181931,62202439]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcz72",
        "entity_name": "20 - [23804571,23808379]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkq87",
        "entity_name": "20 + [43368904,43379877]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq_6f",
        "entity_name": "20 + [43895876,43905320]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqctw",
        "entity_name": "20 + [32414744,32562857]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmhxt",
        "entity_name": "20 - [34004959,34005841]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lts9n",
        "entity_name": "20 + [58064374,58081402]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ld8p_",
        "entity_name": "20 + [44956915,45250898]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lg29j",
        "entity_name": "20 + [39199574,39237770]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnpd6",
        "entity_name": "20 + [35755847,35933933]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq75h",
        "entity_name": "20 - [29996418,30003543]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrgkb",
        "entity_name": "20 + [43853982,43873472]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lts8w",
        "entity_name": "20 + [48342673,48361820]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls5qc",
        "entity_name": "20 + [42399039,42413288]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfyf_",
        "entity_name": "20 + [55569542,55574921]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp8fs",
        "entity_name": "20 - [31708553,31725922]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lj36w",
        "entity_name": "20 - [48984811,49008466]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkkz2",
        "entity_name": "20 - [60979534,61039718]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgssq",
        "entity_name": "20 + [41519931,41525654]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq_38",
        "entity_name": "20 - [39422019,39428911]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmbl2",
        "entity_name": "20 - [44411583,44426470]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgxdy",
        "entity_name": "20 - [43314292,43316619]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh3nl",
        "entity_name": "20 + [62158882,62174142]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkpm6",
        "entity_name": "20 - [31758175,31771763]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lr5b4",
        "entity_name": "20 + [31334601,31361344]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lvdrz",
        "entity_name": "20 + [31106890,31125094]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lx7z3",
        "entity_name": "20 - [43992595,43997100]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljyb8",
        "entity_name": "20 + [41621099,41647686]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcpj0",
        "entity_name": "20 + [25124371,25155359]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lm3n5",
        "entity_name": "20 + [23279372,23283407]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lhd19",
        "entity_name": "20 - [48131067,48165900]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lj589",
        "entity_name": "20 - [33677379,33716261]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lv7gr",
        "entity_name": "20 + [30019465,30049916]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfmpx",
        "entity_name": "20 - [35312902,35318705]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lf4d9",
        "entity_name": "20 + [36408298,36439066]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkr4n",
        "entity_name": "20 + [21231941,21318462]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ln8gh",
        "entity_name": "20 + [60898282,60902389]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lm2p2",
        "entity_name": "20 + [39099886,39101060]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqhz6",
        "entity_name": "20 - [39464583,39680546]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ld534",
        "entity_name": "20 - [61589809,61600948]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lpc_9",
        "entity_name": "20 + [23293020,23301682]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq1ym",
        "entity_name": "20 - [33609920,33651007]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfptr",
        "entity_name": "20 + [54257195,54258277]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljr6_",
        "entity_name": "20 - [47953334,47965474]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwp0",
        "entity_name": "20 - [32885038,32885925]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwxcq",
        "entity_name": "Locus for Human Cytogenetic Band 20q13.11"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq2mh",
        "entity_name": "20 + [31059067,31075175]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkbmn",
        "entity_name": "20 - [60942911,60963559]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfqzd",
        "entity_name": "20 - [49441171,49592664]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh5kg",
        "entity_name": "20 + [54637764,54647745]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgclp",
        "entity_name": "20 + [48560297,48634494]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls3yr",
        "entity_name": "20 + [31219620,31232883]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq4qv",
        "entity_name": "20 - [55612307,55628934]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkk8b",
        "entity_name": "20 + [60906621,60915796]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llwr5",
        "entity_name": "20 + [60744241,60774091]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lpl6_",
        "entity_name": "20 + [42309321,42342426]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrgr_",
        "entity_name": "20 + [54367389,54377125]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrjtv",
        "entity_name": "20 + [29420088,29424824]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnhp6",
        "entity_name": "20 - [33166830,33198803]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lt8ww",
        "entity_name": "20 - [29428627,29442066]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ll46x",
        "entity_name": "20 + [30259356,30290127]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp68q",
        "entity_name": "20 + [57966876,58021562]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llngl",
        "entity_name": "20 - [36487256,36487391]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lj9c2",
        "entity_name": "20 + [31541588,31701497]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkh3z",
        "entity_name": "20 - [43004184,43022527]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lf131",
        "entity_name": "20 - [47421911,47532587]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnl40",
        "entity_name": "20 + [21054694,21175259]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ldkj5",
        "entity_name": "20 + [56848189,56919641]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwx76",
        "entity_name": "Locus for Human Cytogenetic Band 20p11.22"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqv4z",
        "entity_name": "20 + [41978220,42131669]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ldx5g",
        "entity_name": "20 + [29656752,29657973]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwxb0",
        "entity_name": "Locus for Human Cytogenetic Band 20q11.22"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwjp",
        "entity_name": "20 + [31083114,31095513]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llvmq",
        "entity_name": "20 + [49008769,49011226]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnyn9",
        "entity_name": "20 + [56318176,56375968]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp8c5",
        "entity_name": "20 + [43996723,44010068]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljwx5",
        "entity_name": "20 + [23419765,23424659]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsffc",
        "entity_name": "20 - [56827368,56859352]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnwpp",
        "entity_name": "20 + [36534899,36640917]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lczb1",
        "entity_name": "20 + [54400833,54412988]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsfb8",
        "entity_name": "20 + [36643251,36650517]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkpg1",
        "entity_name": "20 - [60223420,60228717]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lth24",
        "entity_name": "20 - [43669991,43693320]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lhylf",
        "entity_name": "20 - [51993923,52120489]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh0x9",
        "entity_name": "20 + [43028533,43142007]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ld4h4",
        "entity_name": "20 - [31727149,31737853]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrvw3",
        "entity_name": "20 - [61107845,61108786]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ln89m",
        "entity_name": "20 + [62357564,62377836]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lss8n",
        "entity_name": "20 + [43764068,43770869]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh7zs",
        "entity_name": "20 - [43885259,43889359]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ldsqy",
        "entity_name": "20 + [42417854,42493443]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lcgjy",
        "entity_name": "20 - [57037127,57040816]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lck1r",
        "entity_name": "20 + [36365998,36399318]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp71f",
        "entity_name": "20 + [37024413,37101777]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgrsz",
        "entity_name": "20 - [43387341,43410477]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lhx9j",
        "entity_name": "20 + [55359551,55386925]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ly5vs",
        "entity_name": "20 + [36511425,36511560]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh8wf",
        "entity_name": "20 + [61967033,61993334]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrv_9",
        "entity_name": "20 - [43948536,43949644]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmvhx",
        "entity_name": "20 - [62149522,62151422]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lk2rg",
        "entity_name": "20 - [55496853,55497488]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp8cx",
        "entity_name": "20 + [57948950,57955963]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lg_hk",
        "entity_name": "20 - [61642606,61649300]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkk5k",
        "entity_name": "20 + [60311421,60317312]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls533",
        "entity_name": "20 + [43691798,43693244]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrvww",
        "entity_name": "20 - [61342583,61356334]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llhzy",
        "entity_name": "20 - [61689398,61721672]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lf233",
        "entity_name": "20 - [43154363,43163166]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkkjj",
        "entity_name": "20 + [43874661,43879002]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljftd",
        "entity_name": "20 + [30329127,30386474]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq_74",
        "entity_name": "20 + [43943286,43947311]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lm9x4",
        "entity_name": "20 - [61741504,61755223]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwxbl",
        "entity_name": "Locus for Human Cytogenetic Band 20q11.23"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnmg7",
        "entity_name": "20 + [34667580,34674373]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljl6l",
        "entity_name": "20 - [33754944,33793606]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmp1q",
        "entity_name": "20 + [33593191,33608818]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqxhh",
        "entity_name": "20 - [36272320,36322587]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ljn1s",
        "entity_name": "20 - [36044836,36095246]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnyy_",
        "entity_name": "20 - [34713582,34807894]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lpn9q",
        "entity_name": "20 + [61622576,61623967]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqqd1",
        "entity_name": "20 + [29689351,29696460]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llhpf",
        "entity_name": "20 + [60201647,60211167]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02llfb_",
        "entity_name": "20 + [41576487,41603948]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnlwr",
        "entity_name": "20 + [47986320,48003828]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwn7",
        "entity_name": "20 - [32612006,32728749]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgzhc",
        "entity_name": "20 + [33667222,33672378]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lt8tw",
        "entity_name": "20 + [29309127,29311095]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkrrt",
        "entity_name": "20 + [34428857,34590449]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lj296",
        "entity_name": "20 + [61796731,61800480]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnxd6",
        "entity_name": "20 - [20340670,20641122]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmmhx",
        "entity_name": "20 + [54477091,54527344]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls3x6",
        "entity_name": "20 + [36786518,36791428]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkg0v",
        "entity_name": "20 - [35579232,35589716]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lpz70",
        "entity_name": "20 - [34813861,34835562]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lfrzq",
        "entity_name": "20 + [35583020,35585505]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lgn8_",
        "entity_name": "20 + [60395515,60396970]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lkh5r",
        "entity_name": "20 - [42558277,42584139]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwkg",
        "entity_name": "20 + [31268818,31279219]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls418",
        "entity_name": "20 - [54005902,54013418]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsfl7",
        "entity_name": "20 - [30754161,30795035]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmmsb",
        "entity_name": "20 - [42258549,42272844]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lrwpt",
        "entity_name": "20 - [33336947,33343638]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls47z",
        "entity_name": "20 + [30061913,30083643]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lts7n",
        "entity_name": "20 + [62139936,62141574]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lh69x",
        "entity_name": "20 - [36190276,36227113]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnzdc",
        "entity_name": "20 + [44091244,44122195]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls464",
        "entity_name": "20 - [62075911,62081435]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lsfm3",
        "entity_name": "20 + [31134415,31163217]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lnbq_",
        "entity_name": "20 - [56246380,56317900]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lp43_",
        "entity_name": "20 + [32755808,32764897]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqnqv",
        "entity_name": "20 + [48781487,48803684]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lk3j9",
        "entity_name": "20 + [34603310,34611639]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lf_h8",
        "entity_name": "20 + [52257908,52269898]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lmdbs",
        "entity_name": "20 + [41652992,41709275]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lqwr2",
        "entity_name": "20 + [29871044,29886152]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls40h",
        "entity_name": "20 - [30498329,30534848]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ltsdt",
        "entity_name": "20 + [28225539,28245218]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ls55c",
        "entity_name": "20 - [25543000,25552613]"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kwx7s",
        "entity_name": "Locus for Human Cytogenetic Band 20p11.21"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lplrq",
        "entity_name": "20 + [61654816,61658479]"
      }
    ],
    "function": ">=",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "biology.genomic_locus",
          "class": "biology.genomic_locus",
          "friendly_name": "Genomic Locus",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "20299592^^http://www.w3.org/2001/XMLSchema#integer",
          "class": "type.int",
          "friendly_name": "20299592",
          "question_node": 0,
          "function": ">="
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "biology.cytogenetic_band",
          "class": "biology.cytogenetic_band",
          "friendly_name": "Cytogenetic Band",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02kwgm0",
          "class": "biology.chromosome",
          "friendly_name": "Chromosome 20 (human)",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "biology.genomic_locus.end_base",
          "friendly_name": "End Base"
        },
        {
          "start": 0,
          "end": 2,
          "relation": "biology.genomic_locus.band",
          "friendly_name": "Band"
        },
        {
          "start": 3,
          "end": 2,
          "relation": "biology.chromosome.band",
          "friendly_name": "Band"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.genomic_locus . \nFILTER (?x1 >= \"20299592\"^^<http://www.w3.org/2001/XMLSchema#integer>)\n?x2 :type.object.type :biology.cytogenetic_band . \nVALUES ?x3 { :m.02kwgm0 } \n?x0 :biology.genomic_locus.end_base ?x1 . \n?x0 :biology.genomic_locus.band ?x2 . \n?x3 :biology.chromosome.band ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "biology"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND biology.genomic_locus (AND (ge biology.genomic_locus.end_base 20299592^^http://www.w3.org/2001/XMLSchema#integer) (JOIN biology.genomic_locus.band (JOIN (R biology.chromosome.band) m.02kwgm0))))",
    "topic_entity": {
      "m.02kwgm0": "Chromosome 20 (human)"
    }
  },
  {
    "qid": 3203411018000,
    "question": "name the tld registry that registered cornell.",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01vbkb",
        "entity_name": "Verisign"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "internet.top_level_domain_registry",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Top Level Domain Registry",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "internet.top_level_domain",
          "class": "internet.top_level_domain",
          "friendly_name": "Top Level Domain",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.09bffv",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "cornell",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "internet.top_level_domain_registry.domains",
          "friendly_name": "Domains Registered"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "internet.top_level_domain.registry",
          "friendly_name": "Registry"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.top_level_domain_registry . \n?x1 :type.object.type :internet.top_level_domain . \nVALUES ?x2 { :m.09bffv } \n?x0 :internet.top_level_domain_registry.domains ?x1 . \n?x1 :internet.top_level_domain.registry ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "internet"
    ],
    "level": "compositional",
    "s_expression": "(AND internet.top_level_domain_registry (JOIN internet.top_level_domain_registry.domains (JOIN internet.top_level_domain.registry m.09bffv)))",
    "topic_entity": {
      "m.09bffv": "Educause"
    }
  },
  {
    "qid": 3200492003000,
    "question": "what video game designer also designed a musical game followed by gh aerosmith?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02rn99",
        "entity_name": "Harmonix"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.cvg_designer",
          "class": "cvg.cvg_designer",
          "friendly_name": "Video Game Designer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.musical_game",
          "class": "cvg.musical_game",
          "friendly_name": "Musical Game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03nsxzp",
          "class": "cvg.musical_game",
          "friendly_name": "gh aerosmith",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.cvg_designer.games_designed",
          "friendly_name": "Games Designed"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "cvg.computer_videogame.prequel",
          "friendly_name": "Previous in narrative"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.cvg_designer . \n?x1 :type.object.type :cvg.musical_game . \nVALUES ?x2 { :m.03nsxzp } \n?x0 :cvg.cvg_designer.games_designed ?x1 . \n?x2 :cvg.computer_videogame.prequel ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.cvg_designer (JOIN cvg.cvg_designer.games_designed (JOIN (R cvg.computer_videogame.prequel) m.03nsxzp)))",
    "topic_entity": {
      "m.03nsxzp": "Guitar Hero: Aerosmith"
    }
  },
  {
    "qid": 3202704016000,
    "question": "which material is of the same class as cor-ten steel?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fvrsk",
        "entity_name": "Alloy steel"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06qqv",
        "entity_name": "Stainless steel"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02yxm_",
        "entity_name": "Carbon steel"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.065zbvt",
        "entity_name": "Deoxidized steel"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04wl9d",
        "entity_name": "Maraging steel"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03qrct3",
        "entity_name": "Galvanized steel"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02yxpg",
        "entity_name": "Tool steel"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.010vv6qw",
        "entity_name": "MS Pipe, MS Tube"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "engineering.material",
          "class": "engineering.material",
          "friendly_name": "Material",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "engineering.material",
          "class": "engineering.material",
          "friendly_name": "Material",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.08g_fq",
          "class": "engineering.material",
          "friendly_name": "cor-ten steel",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "engineering.material.subclass",
          "friendly_name": "Child material class"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "engineering.material.parent_material_class",
          "friendly_name": "Parent material class"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :engineering.material . \n?x1 :type.object.type :engineering.material . \nVALUES ?x2 { :m.08g_fq } \n?x1 :engineering.material.subclass ?x0 . \n?x2 :engineering.material.parent_material_class ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "engineering"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND engineering.material (JOIN (R engineering.material.subclass) (JOIN (R engineering.material.parent_material_class) m.08g_fq)))",
    "topic_entity": {
      "m.08g_fq": "Weathering steel"
    }
  },
  {
    "qid": 4300898008000,
    "question": "what text serves as the core of judaism and is honored by male circumcision practitioners?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.07gn9",
        "entity_name": "Tanakh"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "religion.religious_text",
          "class": "religion.religious_text",
          "friendly_name": "Religious Text",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "entity",
          "id": "m.03_gx",
          "class": "religion.religion",
          "friendly_name": "Judaism",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "religion.religion",
          "class": "religion.religion",
          "friendly_name": "Religion",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.01zky",
          "class": "religion.religious_practice",
          "friendly_name": "male circumcision",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "religion.religion.texts",
          "friendly_name": "Texts"
        },
        {
          "start": 2,
          "end": 0,
          "relation": "religion.religion.texts",
          "friendly_name": "Texts"
        },
        {
          "start": 2,
          "end": 3,
          "relation": "religion.religion.practices",
          "friendly_name": "Practices"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.religious_text . \nVALUES ?x1 { :m.03_gx } \n?x2 :type.object.type :religion.religion . \nVALUES ?x3 { :m.01zky } \n?x1 :religion.religion.texts ?x0 . \n?x2 :religion.religion.texts ?x0 . \n?x2 :religion.religion.practices ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "religion"
    ],
    "level": "compositional",
    "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.03_gx) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.01zky))))",
    "topic_entity": {
      "m.03_gx": "Judaism",
      "m.01zky": "Circumcision"
    }
  },
  {
    "qid": 3205169002000,
    "question": "which is the unit of specific heat capacity in the measurement system which uses pounds per square inch for pressure?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h13rn6",
        "entity_name": "Btu per pound-mass per degree F"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.specific_heat_capacity_unit",
          "class": "measurement_unit.specific_heat_capacity_unit",
          "friendly_name": "Unit of Specific Heat Capacity",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0661nyk",
          "class": "measurement_unit.pressure_unit",
          "friendly_name": "Pounds per square inch",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.specific_heat_capacity_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.pressure_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.specific_heat_capacity_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0661nyk } \n?x0 :measurement_unit.specific_heat_capacity_unit.measurement_system ?x1 . \n?x2 :measurement_unit.pressure_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.specific_heat_capacity_unit (JOIN measurement_unit.specific_heat_capacity_unit.measurement_system (JOIN (R measurement_unit.pressure_unit.measurement_system) m.0661nyk)))",
    "topic_entity": {
      "m.0661nyk": "Pounds per square inch"
    }
  },
  {
    "qid": 4301746003000,
    "question": "which version that was released in united states supports xbox360?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gm9fh4",
        "entity_name": "Virtua Tennis 4"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "entity",
          "id": "m.09c7w0",
          "class": "cvg.computer_game_region",
          "friendly_name": "united states",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "computer.computer_peripheral",
          "class": "computer.computer_peripheral",
          "friendly_name": "Computer Peripheral",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02plp2",
          "class": "business.brand",
          "friendly_name": "xbox360",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.computer_game_region.versions_released_in_this_region",
          "friendly_name": "Versions released in this region"
        },
        {
          "start": 2,
          "end": 0,
          "relation": "computer.computer_peripheral.supporting_game_versions",
          "friendly_name": "Supporting game versions"
        },
        {
          "start": 3,
          "end": 2,
          "relation": "business.brand.products",
          "friendly_name": "Products"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :m.09c7w0 } \n?x2 :type.object.type :computer.computer_peripheral . \nVALUES ?x3 { :m.02plp2 } \n?x1 :cvg.computer_game_region.versions_released_in_this_region ?x0 . \n?x2 :computer.computer_peripheral.supporting_game_versions ?x0 . \n?x3 :business.brand.products ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "business",
      "cvg",
      "computer"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.09c7w0) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
    "topic_entity": {
      "m.09c7w0": "United States of America",
      "m.02plp2": "Xbox 360"
    }
  },
  {
    "qid": 3204989004000,
    "question": "what mass unit shares a measurement system with gray per second?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.07ny7",
        "entity_name": "Tonne"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.047dr",
        "entity_name": "Kilogram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1225dlgf",
        "entity_name": "Milligram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01x32j1",
        "entity_name": "Gram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02p14f_",
        "entity_name": "Microgram"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.mass_unit",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Unit of Mass",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj5d4",
          "class": "measurement_unit.absorbed_dose_rate_unit",
          "friendly_name": "Gray per second",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.weight_units",
          "friendly_name": "Mass Units"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.absorbed_dose_rate_units",
          "friendly_name": "Absorbed Dose Rate Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.mass_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj5d4 } \n?x1 :measurement_unit.measurement_system.weight_units ?x0 . \n?x1 :measurement_unit.measurement_system.absorbed_dose_rate_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.mass_unit (JOIN (R measurement_unit.measurement_system.weight_units) (JOIN measurement_unit.measurement_system.absorbed_dose_rate_units m.02sj5d4)))",
    "topic_entity": {
      "m.02sj5d4": "Gray per second"
    }
  },
  {
    "qid": 3200796010000,
    "question": "what type of fictional setting is the setting type of daughter of the demon?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01n32",
        "entity_name": "City"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "fictional_universe.type_of_fictional_setting",
          "class": "fictional_universe.type_of_fictional_setting",
          "friendly_name": "Type of fictional setting",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "fictional_universe.fictional_setting",
          "class": "fictional_universe.fictional_setting",
          "friendly_name": "Fictional Setting",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.030rkmx",
          "class": "comic_books.comic_book_story",
          "friendly_name": "Daughter of the Demon",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "fictional_universe.fictional_setting.setting_type",
          "friendly_name": "Setting type"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "fictional_universe.fictional_setting.works_set_here",
          "friendly_name": "Fictional Works Set Here"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.type_of_fictional_setting . \n?x1 :type.object.type :fictional_universe.fictional_setting . \nVALUES ?x2 { :m.030rkmx } \n?x1 :fictional_universe.fictional_setting.setting_type ?x0 . \n?x1 :fictional_universe.fictional_setting.works_set_here ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "fictional_universe"
    ],
    "level": "compositional",
    "s_expression": "(AND fictional_universe.type_of_fictional_setting (JOIN (R fictional_universe.fictional_setting.setting_type) (JOIN fictional_universe.fictional_setting.works_set_here m.030rkmx)))",
    "topic_entity": {
      "m.030rkmx": "Daughter of the Demon"
    }
  },
  {
    "qid": 3205088003000,
    "question": "what is the name of the unit of power that is associated with a measurement system having a magnetic field strength units including ampere per metre?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.09hl5",
        "entity_name": "Watt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1226mnjx",
        "entity_name": "Megawatt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kdm16",
        "entity_name": "Milliwatt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120ylmh4",
        "entity_name": "Kilowatt"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.power_unit",
          "class": "measurement_unit.power_unit",
          "friendly_name": "Unit of Power",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj414",
          "class": "measurement_unit.magnetic_field_strength_unit",
          "friendly_name": "Ampere per metre",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.power_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.magnetic_field_strength_units",
          "friendly_name": "Magnetic Field Strength Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.power_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj414 } \n?x0 :measurement_unit.power_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.magnetic_field_strength_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.power_unit (JOIN measurement_unit.power_unit.measurement_system (JOIN measurement_unit.measurement_system.magnetic_field_strength_units m.02sj414)))",
    "topic_entity": {
      "m.02sj414": "Ampere per metre"
    }
  },
  {
    "qid": 3204293015000,
    "question": "what are silas and v's jobs?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02wszft",
        "entity_name": "Assassin"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "fictional_universe.character_occupation",
          "class": "fictional_universe.character_occupation",
          "friendly_name": "Character Occupation",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "entity",
          "id": "g.11x1nz095",
          "class": "book.book_character",
          "friendly_name": "Silas",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0c8k7j",
          "class": "comic_strips.comic_strip_character",
          "friendly_name": "V",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "fictional_universe.fictional_character.occupation",
          "friendly_name": "Occupation"
        },
        {
          "start": 2,
          "end": 0,
          "relation": "fictional_universe.fictional_character.occupation",
          "friendly_name": "Occupation"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.character_occupation . \nVALUES ?x1 { :g.11x1nz095 } \nVALUES ?x2 { :m.0c8k7j } \n?x1 :fictional_universe.fictional_character.occupation ?x0 . \n?x2 :fictional_universe.fictional_character.occupation ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "fictional_universe"
    ],
    "level": "compositional",
    "s_expression": "(AND fictional_universe.character_occupation (AND (JOIN (R fictional_universe.fictional_character.occupation) g.11x1nz095) (JOIN (R fictional_universe.fictional_character.occupation) m.0c8k7j)))",
    "topic_entity": {
      "m.0c8k7j": "V"
    }
  },
  {
    "qid": 3201526001000,
    "question": "mustonen died on which kind of glacier?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01xx7q9",
        "entity_name": "Mountain Glacier"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "geography.glacier_type",
          "class": "geography.glacier_type",
          "friendly_name": "Glacier type",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "geography.glacier",
          "class": "geography.glacier",
          "friendly_name": "Glacier",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0b9hds",
          "class": "people.deceased_person",
          "friendly_name": "mustonen",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "geography.glacier.glacier_type",
          "friendly_name": "Glacier Type"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "people.deceased_person.place_of_death",
          "friendly_name": "Place of death"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :geography.glacier_type . \n?x1 :type.object.type :geography.glacier . \nVALUES ?x2 { :m.0b9hds } \n?x1 :geography.glacier.glacier_type ?x0 . \n?x2 :people.deceased_person.place_of_death ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "people",
      "geography"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND geography.glacier_type (JOIN (R geography.glacier.glacier_type) (JOIN (R people.deceased_person.place_of_death) m.0b9hds)))",
    "topic_entity": {
      "m.0b9hds": "Leo Mustonen"
    }
  },
  {
    "qid": 4302314002000,
    "question": "what medical trial design using health study has the lowest number of expected total enrollment?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01y2h6z",
        "entity_name": "Randomized"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01ph3t",
        "entity_name": "Blind experiment"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "medicine.medical_trial_design",
          "class": "medicine.medical_trial_design",
          "friendly_name": "Medical trial design",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "medicine.medical_trial",
          "class": "medicine.medical_trial",
          "friendly_name": "Medical trial",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03zbbx9",
          "class": "medicine.medical_trial",
          "friendly_name": "health study",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.int",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "medicine.medical_trial.design",
          "friendly_name": "Design"
        },
        {
          "start": 0,
          "end": 2,
          "relation": "medicine.medical_trial_design.trials",
          "friendly_name": "Trials"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "medicine.medical_trial.expected_total_enrollment",
          "friendly_name": "Expected total enrollment"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_design . \n?x1 :type.object.type :medicine.medical_trial . \nVALUES ?x2 { :m.03zbbx9 } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :medicine.medical_trial_design . \n?y1 :type.object.type :medicine.medical_trial . \nVALUES ?y2 { :m.03zbbx9 } \n?y1 :medicine.medical_trial.design ?y0 . \n?y0 :medicine.medical_trial_design.trials ?y2 . \n?y1 :medicine.medical_trial.expected_total_enrollment ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :medicine.medical_trial.design ?x0 . \n?x0 :medicine.medical_trial_design.trials ?x2 . \n?x1 :medicine.medical_trial.expected_total_enrollment ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "medicine"
    ],
    "level": "compositional",
    "s_expression": "(ARGMAX (AND medicine.medical_trial_design (JOIN medicine.medical_trial_design.trials m.03zbbx9)) (JOIN (R medicine.medical_trial.design) medicine.medical_trial.expected_total_enrollment))",
    "topic_entity": {
      "m.03zbbx9": "Physicians' Health Study"
    }
  },
  {
    "qid": 4301141024000,
    "question": "physical media, which is developed by lass, was released where?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03_3d",
        "entity_name": "Japan"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_region",
          "class": "cvg.computer_game_region",
          "friendly_name": "Video Game Region",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0663y78",
          "class": "cvg.computer_game_distribution_system",
          "friendly_name": "Physical media",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.07ydjg7",
          "class": "cvg.cvg_developer",
          "friendly_name": "Lass",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.game_version.regions",
          "friendly_name": "Regions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.game_version.distributed_through",
          "friendly_name": "Distributed through"
        },
        {
          "start": 3,
          "end": 1,
          "relation": "cvg.cvg_developer.game_versions_developed",
          "friendly_name": "Game Versions Developed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_region . \n?x1 :type.object.type :cvg.game_version . \nVALUES ?x2 { :m.0663y78 } \nVALUES ?x3 { :m.07ydjg7 } \n?x1 :cvg.game_version.regions ?x0 . \n?x1 :cvg.game_version.distributed_through ?x2 . \n?x3 :cvg.cvg_developer.game_versions_developed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.07ydjg7))))",
    "topic_entity": {
      "m.0663y78": "Physical media",
      "m.07ydjg7": "Lass"
    }
  },
  {
    "qid": 3201961004000,
    "question": "can you name the unit of speed that shares a measurement system with foot-lambert?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.018x8t",
        "entity_name": "Miles per hour"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.speed_unit",
          "class": "measurement_unit.speed_unit",
          "friendly_name": "Unit of Speed",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.065nnm",
          "class": "measurement_unit.luminance_unit",
          "friendly_name": "Foot-lambert",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.speed_units",
          "friendly_name": "Speed Units"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.luminance_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.speed_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.065nnm } \n?x1 :measurement_unit.measurement_system.speed_units ?x0 . \n?x2 :measurement_unit.luminance_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.speed_unit (JOIN (R measurement_unit.measurement_system.speed_units) (JOIN (R measurement_unit.luminance_unit.measurement_system) m.065nnm)))",
    "topic_entity": {
      "m.065nnm": "Foot-lambert"
    }
  },
  {
    "qid": 3205347004000,
    "question": "which is the episode of a radio program whose artist is bob and ray?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.06bflm5",
        "entity_name": "Glenn Gould"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06bflmk",
        "entity_name": "Tapiola Choir"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06bfll_",
        "entity_name": "Rod MacLeish"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "radio.radio_program_episode",
          "class": "radio.radio_program_episode",
          "friendly_name": "Radio program episode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "radio.radio_program",
          "class": "radio.radio_program",
          "friendly_name": "Radio program",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01tf4f7",
          "class": "broadcast.artist",
          "friendly_name": "Bob and Ray",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "radio.radio_program.episodes",
          "friendly_name": "Episodes"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "broadcast.content.artist",
          "friendly_name": "Artists"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program_episode . \n?x1 :type.object.type :radio.radio_program . \nVALUES ?x2 { :m.01tf4f7 } \n?x1 :radio.radio_program.episodes ?x0 . \n?x1 :broadcast.content.artist ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "broadcast",
      "radio"
    ],
    "level": "zero-shot",
    "s_expression": "(AND radio.radio_program_episode (JOIN (R radio.radio_program.episodes) (JOIN broadcast.content.artist m.01tf4f7)))",
    "topic_entity": {
      "m.01tf4f7": "Bob and Ray"
    }
  },
  {
    "qid": 3205368014000,
    "question": "what kind unit of length is associated with a measurement system whose mass units include picul?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.025sl9b",
        "entity_name": "Cun"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.055vq1",
        "entity_name": "Li"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.distance_unit",
          "class": "measurement_unit.distance_unit",
          "friendly_name": "Unit of Length",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.025t9b5",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Picul",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.distance_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.weight_units",
          "friendly_name": "Mass Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.distance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.025t9b5 } \n?x0 :measurement_unit.distance_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.weight_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.distance_unit (JOIN measurement_unit.distance_unit.measurement_system (JOIN measurement_unit.measurement_system.weight_units m.025t9b5)))",
    "topic_entity": {
      "m.025t9b5": "Picul"
    }
  },
  {
    "qid": 3204817025000,
    "question": "what is the video game series that includes a video game expansion designed by gremlin interactive?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.05bv8d8",
        "entity_name": "Gauntlet"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.game_series",
          "class": "cvg.game_series",
          "friendly_name": "Video Game Series",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_game_expansion",
          "class": "cvg.computer_game_expansion",
          "friendly_name": "Video Game Expansion",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02hk_py",
          "class": "cvg.cvg_designer",
          "friendly_name": "Gremlin Interactive",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.computer_videogame.game_series",
          "friendly_name": "Part of game series"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.designers",
          "friendly_name": "Designers"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_series . \n?x1 :type.object.type :cvg.computer_game_expansion . \nVALUES ?x2 { :m.02hk_py } \n?x1 :cvg.computer_videogame.game_series ?x0 . \n?x1 :cvg.computer_videogame.designers ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.game_series (JOIN (R cvg.computer_videogame.game_series) (JOIN cvg.computer_videogame.designers m.02hk_py)))",
    "topic_entity": {
      "m.02hk_py": "Gremlin Interactive"
    }
  },
  {
    "qid": 4301069003000,
    "question": "after the date of 05/08/2008, which song was added to rock band?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.048cbj",
        "entity_name": "More Than a Feeling"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04csrvd",
        "entity_name": "Hard to Handle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.010x7g2",
        "entity_name": "Gimme Three Steps"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04_czx",
        "entity_name": "Won't Get Fooled Again"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lfg_q",
        "entity_name": "N.I.B."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bb4dch",
        "entity_name": "Blackened"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0y6lj4",
        "entity_name": "March of the Pigs"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026dtxk",
        "entity_name": "Here It Goes Again"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04kdx3",
        "entity_name": "Paperback Writer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0q43m_",
        "entity_name": "Juke Box Hero"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02r0fml",
        "entity_name": "China Cat Sunflower"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0x4kw6",
        "entity_name": "The Hellion / Electric Eye"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n9251",
        "entity_name": "Rockaway Beach"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n5hd",
        "entity_name": "All the Small Things"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04rpmd",
        "entity_name": "Paranoid"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09q_cy",
        "entity_name": "Should I Stay or Should I Go"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01b7v8x",
        "entity_name": "Action"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n888f",
        "entity_name": "Day Late, Dollar Short"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122y5frt",
        "entity_name": "Wonderwall"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.090kp1",
        "entity_name": "\"Heroes\""
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05fh61",
        "entity_name": "Buddy Holly"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0chxm9",
        "entity_name": "It Hurts"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0m1r77",
        "entity_name": "Pain and Pleasure"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0m1d6v",
        "entity_name": "Ever Fallen In Love (With Someone You Shouldn’t’ve)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0797q51",
        "entity_name": "Shockwave"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0np8sh",
        "entity_name": "Moonage Daydream"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0t2003",
        "entity_name": "My Iron Lung"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.010p6mc",
        "entity_name": "Little Sister"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lccwf",
        "entity_name": "Blinded By Fear"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05y89k",
        "entity_name": "Highway Star"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dfq18",
        "entity_name": "Wanted Dead or Alive"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h0h7h",
        "entity_name": "Brass in Pocket"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01cwb0d",
        "entity_name": "Ride the Lightning"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.051_g2",
        "entity_name": "Enter Sandman"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lncs_",
        "entity_name": "Live Forever"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lfk2f",
        "entity_name": "Fortunate Son"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01g11h",
        "entity_name": "Gimme Shelter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0142135",
        "entity_name": "Move Along"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.014jj63",
        "entity_name": "Ten Speed (of God's Blood & Burial)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0160270",
        "entity_name": "I'm So Sick"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0187z4j",
        "entity_name": "Red Tandy"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01drs3m",
        "entity_name": "Attack"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01drs3v",
        "entity_name": "A Beautiful Lie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.025sqdg",
        "entity_name": "Vasoline"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.025t7rk",
        "entity_name": "Sex Type Thing"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0264xm1",
        "entity_name": "Dead on Arrival"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026lncs",
        "entity_name": "This Ain't a Scene, It's an Arms Race"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026p0xj",
        "entity_name": "Roam"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02760qj",
        "entity_name": "Can't Stand Losing You"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027dm29",
        "entity_name": "Mississippi Queen"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027hx6b",
        "entity_name": "Synchronicity II"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02pq819",
        "entity_name": "Joker & the Thief"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02r14hc",
        "entity_name": "3's & 7's"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03b_hdy",
        "entity_name": "crushcrushcrush"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03bywlr",
        "entity_name": "Brainpower"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03cj6hh",
        "entity_name": "Song With A Mission"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03cs52b",
        "entity_name": "The Electric Version"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03nlw9g",
        "entity_name": "Peace of Mind"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03zf8g",
        "entity_name": "Orange Crush"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.048cw1",
        "entity_name": "Roxanne"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04qbjgv",
        "entity_name": "Cat Scratch Fever"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.056csw",
        "entity_name": "The Hand That Feeds"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05c98v2",
        "entity_name": "Saints of Los Angeles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05fh9_",
        "entity_name": "Say It Ain't So"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05klpg",
        "entity_name": "Go with the Flow"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n87v9",
        "entity_name": "29 Fingers"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n87wb",
        "entity_name": "Blood Doll"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n8866",
        "entity_name": "Can't Let Go"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n88_k",
        "entity_name": "Time We Had"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n88n9",
        "entity_name": "I Get By"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n88tn",
        "entity_name": "Nightmare"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n88wf",
        "entity_name": "Pleasure (Pleasure)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n88yr",
        "entity_name": "Seven"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05zy8g",
        "entity_name": "Blitzkrieg Bop"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.069lq1",
        "entity_name": "Reptilia"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07154d",
        "entity_name": "Foreplay/Long Time"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.073vg0",
        "entity_name": "I Think I'm Paranoid"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.075vptj",
        "entity_name": "Beethoven's Cunt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.075zcnv",
        "entity_name": "Still Alive"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.077kdp",
        "entity_name": "Are You Gonna Be My Girl"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07n64g",
        "entity_name": "Don't Look Back in Anger"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.082dr7",
        "entity_name": "Sabotage"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.092h3b",
        "entity_name": "Complete Control"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09j10y",
        "entity_name": "Dani California"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09rs__",
        "entity_name": "Dirty Little Secret"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c4w1b",
        "entity_name": "Welcome Home"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c5mq1",
        "entity_name": "Message in a Bottle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c_hv9",
        "entity_name": "Detroit Rock City"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cmkmw",
        "entity_name": "Maps"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cx17p",
        "entity_name": "Next to You"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dkm0j",
        "entity_name": "Main Offender"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dl0qt",
        "entity_name": "Die, All Right!"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dxcmt",
        "entity_name": "You've Got Another Thing Comin'"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fd3k5",
        "entity_name": "When You Were Young"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g75kfj",
        "entity_name": "Siva"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0glq9qs",
        "entity_name": "Timmy and the Lords of the Underworld"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h61r1",
        "entity_name": "Calling Dr. Love"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0l1f7f",
        "entity_name": "Zero"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ldkcv",
        "entity_name": "We Care a Lot"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lftjc",
        "entity_name": "El Scorcho"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ljr08",
        "entity_name": "Sugar Magnolia"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lldjn",
        "entity_name": "I Need A Miracle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0llym2",
        "entity_name": "Devil's Child"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0m79qt",
        "entity_name": "The Perfect Drug"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0mgh_6",
        "entity_name": "(Take These) Chains"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pfv52",
        "entity_name": "Cherry Bomb"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0q_3ys",
        "entity_name": "Franklin's Tower"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0qhm11",
        "entity_name": "Date With the Night"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0qn5_r",
        "entity_name": "Hitch a Ride"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0r41vt",
        "entity_name": "Bloodstone"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0r6nlx",
        "entity_name": "D.O.A."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0rv03c",
        "entity_name": "Super-Sprøde"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0vtnkk",
        "entity_name": "Screaming for Vengeance"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0xcy07",
        "entity_name": "Flirtin' With Disaster (live)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0yf_8b",
        "entity_name": "Simple Man"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01bmk_n",
        "entity_name": "Sweet Leaf"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04235w",
        "entity_name": "Black Hole Sun"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hh2h",
        "entity_name": "Can't Buy Me Love"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g27kd",
        "entity_name": "...And Justice for All"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0_9tk5",
        "entity_name": "I Fought the Law"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.056nx9",
        "entity_name": "(Don't Fear) The Reaper"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07p94l",
        "entity_name": "The Ballroom Blitz"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0260cc5",
        "entity_name": "Train Kept A-Rollin'"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03hkyk6",
        "entity_name": "Casey Jones"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03by3wd",
        "entity_name": "Green Grass and High Tides"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05cb9z",
        "entity_name": "Creep"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07ksr2",
        "entity_name": "Epic"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08__td",
        "entity_name": "Celebrity Skin"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lrx58",
        "entity_name": "Truth Hits Everybody"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.010v81m",
        "entity_name": "The Collector"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n88vr",
        "entity_name": "Outside"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lmhk9",
        "entity_name": "Smokin'"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04252r",
        "entity_name": "In Bloom"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05f8y_",
        "entity_name": "Cherub Rock"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lllkt",
        "entity_name": "Interstate Love Song"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0m45md",
        "entity_name": "Wave of Mutilation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0p8qnt",
        "entity_name": "Something About You"
      }
    ],
    "function": "<=",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.musical_game_song",
          "class": "cvg.musical_game_song",
          "friendly_name": "Musical Game Song",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.musical_game_song_relationship",
          "class": "cvg.musical_game_song_relationship",
          "friendly_name": "Musical game/song relationship",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0fq74z3",
          "class": "cvg.musical_game",
          "friendly_name": "Rock Band",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "2008-05-08^^http://www.w3.org/2001/XMLSchema#date",
          "class": "type.datetime",
          "friendly_name": "05/08/2008",
          "question_node": 0,
          "function": "<="
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.musical_game_song.games",
          "friendly_name": "Games"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.musical_game_song_relationship.game",
          "friendly_name": "Game"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "cvg.musical_game_song_relationship.release_date",
          "friendly_name": "Release date"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.musical_game_song . \n?x1 :type.object.type :cvg.musical_game_song_relationship . \nVALUES ?x2 { :m.0fq74z3 } \nFILTER (?x3 <= \"2008-05-08-08:00\"^^<http://www.w3.org/2001/XMLSchema#date>)\n?x0 :cvg.musical_game_song.games ?x1 . \n?x1 :cvg.musical_game_song_relationship.game ?x2 . \n?x1 :cvg.musical_game_song_relationship.release_date ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.musical_game_song (JOIN cvg.musical_game_song.games (AND (JOIN cvg.musical_game_song_relationship.game m.0fq74z3) (le cvg.musical_game_song_relationship.release_date 2008-05-08^^http://www.w3.org/2001/XMLSchema#date))))",
    "topic_entity": {
      "m.0fq74z3": "Rock Band"
    }
  },
  {
    "qid": 3206106003000,
    "question": "which is the tallest film art director who's profession is stunt coordinator?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pkr1",
        "entity_name": "Sammo Hung"
      }
    ],
    "function": "argmax",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "film.film_art_director",
          "class": "film.film_art_director",
          "friendly_name": "Film art director",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.float",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0b9sfj",
          "class": "people.profession",
          "friendly_name": "Stunt Coordinator",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.height_meters",
          "friendly_name": "Height"
        },
        {
          "start": 0,
          "end": 2,
          "relation": "people.person.profession",
          "friendly_name": "Profession"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.film_art_director . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :film.film_art_director . \nVALUES ?y2 { :m.0b9sfj } \n?y0 :people.person.height_meters ?y1 . \n?y0 :people.person.profession ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.0b9sfj } \n?x0 :people.person.height_meters ?x1 . \n?x0 :people.person.profession ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "people"
    ],
    "level": "i.i.d.",
    "s_expression": "(ARGMAX (AND film.film_art_director (JOIN people.person.profession m.0b9sfj)) people.person.height_meters)",
    "topic_entity": {
      "m.0b9sfj": "Stunt Coordinator"
    }
  },
  {
    "qid": 3202563017000,
    "question": "texas dance halls: a two-step circuit uses which binding format for its first edition?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.023rr3",
        "entity_name": "Hardcover"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "book.book_binding",
          "class": "book.book_binding",
          "friendly_name": "Book Binding",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "book.book_edition",
          "class": "book.book_edition",
          "friendly_name": "Book Edition",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0cm204h",
          "class": "book.book",
          "friendly_name": "Texas Dance Halls: A Two-Step Circuit",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "book.book_edition.binding",
          "friendly_name": "Binding/format"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "book.book.first_edition",
          "friendly_name": "First edition"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.book_binding . \n?x1 :type.object.type :book.book_edition . \nVALUES ?x2 { :m.0cm204h } \n?x1 :book.book_edition.binding ?x0 . \n?x2 :book.book.first_edition ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "book"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND book.book_binding (JOIN (R book.book_edition.binding) (JOIN (R book.book.first_edition) m.0cm204h)))",
    "topic_entity": {
      "m.0cm204h": "Texas Dance Halls: A Two-Step Circuit"
    }
  },
  {
    "qid": 3204168016000,
    "question": "which is the family of a computer processor that is a variant of qualcomm msm 7201?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v77gs",
        "entity_name": "ARMv6"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.computer_processor",
          "class": "computer.computer_processor",
          "friendly_name": "Computer Processor",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.computer_processor",
          "class": "computer.computer_processor",
          "friendly_name": "Computer Processor",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05v77gd",
          "class": "computer.computer_processor",
          "friendly_name": "Qualcomm MSM 7201",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.computer_processor.processor_family",
          "friendly_name": "Processor Family"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "computer.computer_processor.variants",
          "friendly_name": "Variants"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.computer_processor . \n?x1 :type.object.type :computer.computer_processor . \nVALUES ?x2 { :m.05v77gd } \n?x1 :computer.computer_processor.processor_family ?x0 . \n?x1 :computer.computer_processor.variants ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "compositional",
    "s_expression": "(AND computer.computer_processor (JOIN (R computer.computer_processor.processor_family) (JOIN computer.computer_processor.variants m.05v77gd)))",
    "topic_entity": {
      "m.05v77gd": "Qualcomm MSM 7201"
    }
  },
  {
    "qid": 4303841004000,
    "question": "what region did rockstar games publish the latest released version of its game?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02j9z",
        "entity_name": "Europe"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.059g4",
        "entity_name": "North America"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_region",
          "class": "cvg.computer_game_region",
          "friendly_name": "Video Game Region",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.datetime",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.01_4mn",
          "class": "cvg.cvg_publisher",
          "friendly_name": "Rockstar Games",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.game_version.regions",
          "friendly_name": "Regions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.game_version.release_date",
          "friendly_name": "Release Date"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "cvg.game_version.publisher",
          "friendly_name": "Publisher"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_region . \n?x1 :type.object.type :cvg.game_version . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :cvg.computer_game_region . \n?y1 :type.object.type :cvg.game_version . \nVALUES ?y3 { :m.01_4mn } \n?y1 :cvg.game_version.regions ?y0 . \n?y1 :cvg.game_version.release_date ?y2 . \n?y1 :cvg.game_version.publisher ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x3 { :m.01_4mn } \n?x1 :cvg.game_version.regions ?x0 . \n?x1 :cvg.game_version.release_date ?x2 . \n?x1 :cvg.game_version.publisher ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(ARGMAX (AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (JOIN cvg.game_version.publisher m.01_4mn))) (JOIN (R cvg.game_version.regions) cvg.game_version.release_date))",
    "topic_entity": {
      "m.01_4mn": "Rockstar Games"
    }
  },
  {
    "qid": 3203081009000,
    "question": "what type of education does swathmore college provide?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0nc5m",
        "entity_name": "Sally Ride"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "spaceflight.astronaut",
          "class": "spaceflight.astronaut",
          "friendly_name": "Astronaut",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "education.education",
          "class": "education.education",
          "friendly_name": "Education",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.012fvq",
          "class": "education.university",
          "friendly_name": "swathmore college",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.education",
          "friendly_name": "Education"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "education.education.institution",
          "friendly_name": "Institution"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.astronaut . \n?x1 :type.object.type :education.education . \nVALUES ?x2 { :m.012fvq } \n?x0 :people.person.education ?x1 . \n?x1 :education.education.institution ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "education",
      "people"
    ],
    "level": "compositional",
    "s_expression": "(AND spaceflight.astronaut (JOIN people.person.education (JOIN education.education.institution m.012fvq)))",
    "topic_entity": {
      "m.012fvq": "Swarthmore College"
    }
  },
  {
    "qid": 3202811008000,
    "question": "which video game designer designed the video game which is part of meteos series?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04mq9_",
        "entity_name": "Masahiro Sakurai"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.cvg_designer",
          "class": "cvg.cvg_designer",
          "friendly_name": "Video Game Designer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_videogame",
          "class": "cvg.computer_videogame",
          "friendly_name": "Video game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.09k2kx3",
          "class": "cvg.game_series",
          "friendly_name": "Meteos series",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.computer_videogame.designers",
          "friendly_name": "Designers"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.game_series",
          "friendly_name": "Part of game series"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.cvg_designer . \n?x1 :type.object.type :cvg.computer_videogame . \nVALUES ?x2 { :m.09k2kx3 } \n?x1 :cvg.computer_videogame.designers ?x0 . \n?x1 :cvg.computer_videogame.game_series ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.cvg_designer (JOIN (R cvg.computer_videogame.designers) (JOIN cvg.computer_videogame.game_series m.09k2kx3)))",
    "topic_entity": {
      "m.09k2kx3": "Meteos series"
    }
  },
  {
    "qid": 3203873003000,
    "question": "what is the unit of acceleration in the system which uses newtons as a unit of force?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.037jgl",
        "entity_name": "Metre per second squared"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.acceleration_unit",
          "class": "measurement_unit.acceleration_unit",
          "friendly_name": "Unit of Acceleration",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0jkgw",
          "class": "measurement_unit.unit_of_force",
          "friendly_name": "newtons",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.acceleration_units",
          "friendly_name": "Acceleration Units"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.force_units",
          "friendly_name": "Force Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.acceleration_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0jkgw } \n?x1 :measurement_unit.measurement_system.acceleration_units ?x0 . \n?x1 :measurement_unit.measurement_system.force_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.acceleration_unit (JOIN (R measurement_unit.measurement_system.acceleration_units) (JOIN measurement_unit.measurement_system.force_units m.0jkgw)))",
    "topic_entity": {
      "m.0jkgw": "Newton"
    }
  },
  {
    "qid": 3204989003000,
    "question": "name the unit of mass that is used in the same measurement system as gray per second?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.07ny7",
        "entity_name": "Tonne"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.047dr",
        "entity_name": "Kilogram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1225dlgf",
        "entity_name": "Milligram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01x32j1",
        "entity_name": "Gram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02p14f_",
        "entity_name": "Microgram"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.mass_unit",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Unit of Mass",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj5d4",
          "class": "measurement_unit.absorbed_dose_rate_unit",
          "friendly_name": "Gray per second",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.weight_units",
          "friendly_name": "Mass Units"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.absorbed_dose_rate_units",
          "friendly_name": "Absorbed Dose Rate Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.mass_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj5d4 } \n?x1 :measurement_unit.measurement_system.weight_units ?x0 . \n?x1 :measurement_unit.measurement_system.absorbed_dose_rate_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.mass_unit (JOIN (R measurement_unit.measurement_system.weight_units) (JOIN measurement_unit.measurement_system.absorbed_dose_rate_units m.02sj5d4)))",
    "topic_entity": {
      "m.02sj5d4": "Gray per second"
    }
  },
  {
    "qid": 3203245000000,
    "question": "what celebrity is in a romantic relationship involving mike tyson?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03nt54r",
        "entity_name": "Aisleyne Horgan-Wallace"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "celebrities.celebrity",
          "class": "celebrities.celebrity",
          "friendly_name": "Celebrity",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "celebrities.romantic_relationship",
          "class": "celebrities.romantic_relationship",
          "friendly_name": "Romantic relationship",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.09qvs",
          "class": "celebrities.celebrity",
          "friendly_name": "Mike Tyson",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "celebrities.romantic_relationship.celebrity",
          "friendly_name": "Celebrity"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "celebrities.romantic_relationship.celebrity",
          "friendly_name": "Celebrity"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :celebrities.celebrity . \n?x1 :type.object.type :celebrities.romantic_relationship . \nVALUES ?x2 { :m.09qvs } \n?x1 :celebrities.romantic_relationship.celebrity ?x0 . \n?x1 :celebrities.romantic_relationship.celebrity ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "celebrities"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND celebrities.celebrity (JOIN (R celebrities.romantic_relationship.celebrity) (JOIN celebrities.romantic_relationship.celebrity m.09qvs)))",
    "topic_entity": {
      "m.09qvs": "Mike Tyson"
    }
  },
  {
    "qid": 4301141025000,
    "question": "where is the version developed by first star software and distributed through virtual console released?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.09c7w0",
        "entity_name": "United States of America"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_region",
          "class": "cvg.computer_game_region",
          "friendly_name": "Video Game Region",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.07sg3j",
          "class": "cvg.computer_game_distribution_system",
          "friendly_name": "Virtual Console",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02pzfw",
          "class": "cvg.cvg_developer",
          "friendly_name": "First Star Software",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.game_version.regions",
          "friendly_name": "Regions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.game_version.distributed_through",
          "friendly_name": "Distributed through"
        },
        {
          "start": 3,
          "end": 1,
          "relation": "cvg.cvg_developer.game_versions_developed",
          "friendly_name": "Game Versions Developed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_region . \n?x1 :type.object.type :cvg.game_version . \nVALUES ?x2 { :m.07sg3j } \nVALUES ?x3 { :m.02pzfw } \n?x1 :cvg.game_version.regions ?x0 . \n?x1 :cvg.game_version.distributed_through ?x2 . \n?x3 :cvg.cvg_developer.game_versions_developed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.07sg3j) (JOIN (R cvg.cvg_developer.game_versions_developed) m.02pzfw))))",
    "topic_entity": {
      "m.07sg3j": "Virtual Console",
      "m.02pzfw": "First Star Software"
    }
  },
  {
    "qid": 3202531016000,
    "question": "name the tv subject is associated with a tv program whose filming locations include 20th century fox studios?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.082801",
        "entity_name": "Behavior modification"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "tv.tv_subject",
          "class": "tv.tv_subject",
          "friendly_name": "TV subject",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "tv.tv_program",
          "class": "tv.tv_program",
          "friendly_name": "TV Program",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0j7zytd",
          "class": "tv.tv_location",
          "friendly_name": "20th Century Fox Studios",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "tv.tv_subject.tv_programs",
          "friendly_name": "TV programs"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "tv.tv_program.filming_locations",
          "friendly_name": "Filming locations"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :tv.tv_subject . \n?x1 :type.object.type :tv.tv_program . \nVALUES ?x2 { :m.0j7zytd } \n?x0 :tv.tv_subject.tv_programs ?x1 . \n?x1 :tv.tv_program.filming_locations ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "tv"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND tv.tv_subject (JOIN tv.tv_subject.tv_programs (JOIN tv.tv_program.filming_locations m.0j7zytd)))",
    "topic_entity": {
      "m.0j7zytd": "20th Century Fox Studios"
    }
  },
  {
    "qid": 4301141003000,
    "question": "virtual console, which is developed by sega of japan, was released where?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.075g54v",
        "entity_name": "Wii/DS NA"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_region",
          "class": "cvg.computer_game_region",
          "friendly_name": "Video Game Region",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.07sg3j",
          "class": "cvg.computer_game_distribution_system",
          "friendly_name": "Virtual Console",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.06p8m",
          "class": "cvg.cvg_developer",
          "friendly_name": "sega of japan",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.game_version.regions",
          "friendly_name": "Regions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.game_version.distributed_through",
          "friendly_name": "Distributed through"
        },
        {
          "start": 3,
          "end": 1,
          "relation": "cvg.cvg_developer.game_versions_developed",
          "friendly_name": "Game Versions Developed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_region . \n?x1 :type.object.type :cvg.game_version . \nVALUES ?x2 { :m.07sg3j } \nVALUES ?x3 { :m.06p8m } \n?x1 :cvg.game_version.regions ?x0 . \n?x1 :cvg.game_version.distributed_through ?x2 . \n?x3 :cvg.cvg_developer.game_versions_developed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.07sg3j) (JOIN (R cvg.cvg_developer.game_versions_developed) m.06p8m))))",
    "topic_entity": {
      "m.07sg3j": "Virtual Console",
      "m.06p8m": "Sega"
    }
  },
  {
    "qid": 3203952000000,
    "question": "which cyclists share the same language as wilson?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.027tm9b",
        "entity_name": "Geraint Thomas"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04gkhjq",
        "entity_name": "Peter Kennaugh"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fxksg",
        "entity_name": "Tyler Farrar"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02x22b6",
        "entity_name": "Taylor Phinney"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.066p_g",
        "entity_name": "Amber Neben"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06jpgd",
        "entity_name": "Chris Horner"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "sports.cyclist",
          "class": "sports.cyclist",
          "friendly_name": "Cyclist",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "language.human_language",
          "class": "language.human_language",
          "friendly_name": "Human Language",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0kzy0",
          "class": "music.bassist",
          "friendly_name": "wilson",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.languages",
          "friendly_name": "Languages"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "people.person.languages",
          "friendly_name": "Languages"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.cyclist . \n?x1 :type.object.type :language.human_language . \nVALUES ?x2 { :m.0kzy0 } \n?x0 :people.person.languages ?x1 . \n?x2 :people.person.languages ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "people"
    ],
    "level": "compositional",
    "s_expression": "(AND sports.cyclist (JOIN people.person.languages (JOIN (R people.person.languages) m.0kzy0)))",
    "topic_entity": {
      "m.0kzy0": "Brian Wilson"
    }
  },
  {
    "qid": 3202880000000,
    "question": "what is the color filter array type of digital cameras with compressed format motion jpeg?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02r8js",
        "entity_name": "Bayer filter"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "digicams.camera_color_filter_array_type",
          "class": "digicams.camera_color_filter_array_type",
          "friendly_name": "Camera Color Filter Array Type",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "digicams.digital_camera",
          "class": "digicams.digital_camera",
          "friendly_name": "Digital Camera",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.017m0p",
          "class": "digicams.camera_compressed_format",
          "friendly_name": "Motion JPEG",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "digicams.digital_camera.color_filter_array_type",
          "friendly_name": "Color filter array type"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "digicams.camera_compressed_format.cameras",
          "friendly_name": "Cameras"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.camera_color_filter_array_type . \n?x1 :type.object.type :digicams.digital_camera . \nVALUES ?x2 { :m.017m0p } \n?x1 :digicams.digital_camera.color_filter_array_type ?x0 . \n?x2 :digicams.camera_compressed_format.cameras ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "digicams"
    ],
    "level": "compositional",
    "s_expression": "(AND digicams.camera_color_filter_array_type (JOIN (R digicams.digital_camera.color_filter_array_type) (JOIN (R digicams.camera_compressed_format.cameras) m.017m0p)))",
    "topic_entity": {
      "m.017m0p": "Motion JPEG"
    }
  },
  {
    "qid": 3204808006000,
    "question": "what kind of organism is the fossil specimen in the awash river?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0mfl",
        "entity_name": "Ardipithecus"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "biology.organism_classification",
          "class": "biology.organism_classification",
          "friendly_name": "Organism Classification",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "biology.fossil_specimen",
          "class": "biology.fossil_specimen",
          "friendly_name": "Fossil specimen",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05p525",
          "class": "biology.fossil_site",
          "friendly_name": "Awash River",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "biology.organism_classification.fossil_specimens",
          "friendly_name": "Fossil specimens"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "biology.fossil_site.specimens_found_here",
          "friendly_name": "Specimens found here"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.organism_classification . \n?x1 :type.object.type :biology.fossil_specimen . \nVALUES ?x2 { :m.05p525 } \n?x0 :biology.organism_classification.fossil_specimens ?x1 . \n?x2 :biology.fossil_site.specimens_found_here ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "biology"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND biology.organism_classification (JOIN biology.organism_classification.fossil_specimens (JOIN (R biology.fossil_site.specimens_found_here) m.05p525)))",
    "topic_entity": {
      "m.05p525": "Awash River"
    }
  },
  {
    "qid": 3200273002000,
    "question": "which type of online advertising is extended by the same type?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j72ylp",
        "entity_name": "SEO"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n7w78w",
        "entity_name": "SEO consultant"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0rn_rkd",
        "entity_name": "Marketing Specialist"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "type.type",
          "class": "type.type",
          "friendly_name": "Type",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "type.type",
          "class": "type.type",
          "friendly_name": "Type",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04j5ww_",
          "class": "type.type",
          "friendly_name": "Online Advertising",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "type.type.extends",
          "friendly_name": "Extends"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "type.type.extends",
          "friendly_name": "Extends"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :type.type . \n?x1 :type.object.type :type.type . \nVALUES ?x2 { :m.04j5ww_ } \n?x1 :type.type.extends ?x0 . \n?x1 :type.type.extends ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "type"
    ],
    "level": "compositional",
    "s_expression": "(AND type.type (JOIN (R type.type.extends) (JOIN type.type.extends m.04j5ww_)))",
    "topic_entity": {
      "m.04j5ww_": "Online Advertising"
    }
  },
  {
    "qid": 3206434001000,
    "question": "the measurement system of katal uses which unit of luminance?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02sj43m",
        "entity_name": "Candela per square metre"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.luminance_unit",
          "class": "measurement_unit.luminance_unit",
          "friendly_name": "Unit of Luminance",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04cph",
          "class": "measurement_unit.catalytic_activity_unit",
          "friendly_name": "Katal",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.luminance_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.catalytic_activity_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.luminance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.04cph } \n?x0 :measurement_unit.luminance_unit.measurement_system ?x1 . \n?x2 :measurement_unit.catalytic_activity_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.luminance_unit (JOIN measurement_unit.luminance_unit.measurement_system (JOIN (R measurement_unit.catalytic_activity_unit.measurement_system) m.04cph)))",
    "topic_entity": {
      "m.04cph": "Katal"
    }
  },
  {
    "qid": 4301654005000,
    "question": "which inventor has the quotation related to we'll never know the worth of water till the well go dry.?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.07bty",
        "entity_name": "Thomas Edison"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "law.inventor",
          "class": "law.inventor",
          "friendly_name": "Inventor",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "media_common.quotation",
          "class": "media_common.quotation",
          "friendly_name": "Quotation",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "media_common.quotation_subject",
          "class": "media_common.quotation_subject",
          "friendly_name": "Quotation Subject",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.048gl5l",
          "class": "media_common.quotation",
          "friendly_name": "We'll never know the worth of water till the well go dry.",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "media_common.quotation.author",
          "friendly_name": "Author"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "media_common.quotation.subjects",
          "friendly_name": "Subjects"
        },
        {
          "start": 2,
          "end": 3,
          "relation": "media_common.quotation_subject.quotations_about_this_subject",
          "friendly_name": "Quotations About This Subject"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.inventor . \n?x1 :type.object.type :media_common.quotation . \n?x2 :type.object.type :media_common.quotation_subject . \nVALUES ?x3 { :m.048gl5l } \n?x1 :media_common.quotation.author ?x0 . \n?x1 :media_common.quotation.subjects ?x2 . \n?x2 :media_common.quotation_subject.quotations_about_this_subject ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "media_common"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND law.inventor (JOIN (R media_common.quotation.author) (JOIN media_common.quotation.subjects (JOIN media_common.quotation_subject.quotations_about_this_subject m.048gl5l))))",
    "topic_entity": {
      "m.048gl5l": "We'll never know the worth of water till the well go dry."
    }
  },
  {
    "qid": 3205442004000,
    "question": "the computer games korsakovia uses a video game engine developed by what video game engine developer",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dwl2",
        "entity_name": "Valve Corporation"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_engine_developer",
          "class": "cvg.computer_game_engine_developer",
          "friendly_name": "Video Game Engine Developer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_game_engine",
          "class": "cvg.computer_game_engine",
          "friendly_name": "Video Game Engine",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.080mfrd",
          "class": "cvg.computer_game_mod",
          "friendly_name": "Korsakovia",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.computer_game_engine_developer.computer_game_engines_developed",
          "friendly_name": "Computer game engines developed"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_game_engine.used_for_computer_games",
          "friendly_name": "Used for computer games"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_engine_developer . \n?x1 :type.object.type :cvg.computer_game_engine . \nVALUES ?x2 { :m.080mfrd } \n?x0 :cvg.computer_game_engine_developer.computer_game_engines_developed ?x1 . \n?x1 :cvg.computer_game_engine.used_for_computer_games ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_engine_developer (JOIN cvg.computer_game_engine_developer.computer_game_engines_developed (JOIN cvg.computer_game_engine.used_for_computer_games m.080mfrd)))",
    "topic_entity": {
      "m.080mfrd": "Korsakovia"
    }
  },
  {
    "qid": 4301069007000,
    "question": "the song added after aug. the 11st, 2009 to band hero was what?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.06n49d",
        "entity_name": "Sappy"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n91mx",
        "entity_name": "Dis-Moi"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03jkxv9",
        "entity_name": "Bloodmeat"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n8_sw",
        "entity_name": "That Was Just Your Life"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n97v_",
        "entity_name": "Death Blossoms"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05b360",
        "entity_name": "Black Betty"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0wff1p",
        "entity_name": "21st Century (Digital Boy)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06dlyz",
        "entity_name": "Negative Creep"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n97kb",
        "entity_name": "Her Strut"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n8__8",
        "entity_name": "The End of the Line"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027cbrt",
        "entity_name": "Life in the Fast Lane"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n98qm",
        "entity_name": "It's Nice to Know You Work Alone"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0xt2sn",
        "entity_name": "Good Mourning / Black Friday (Randy Burns mix)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04gv9b5",
        "entity_name": "The Day That Never Comes"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fzvcl",
        "entity_name": "One of These Nights"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n98gz",
        "entity_name": "The Sad Punk"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05h_nh",
        "entity_name": "No One Knows"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01243s",
        "entity_name": "With a Little Help from My Friends"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n8__t",
        "entity_name": "Broken, Beat & Scarred"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07jy_9",
        "entity_name": "Mr. Brightside"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n98xm",
        "entity_name": "Jailbait"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lr9cq",
        "entity_name": "Chalk Dust Torture"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03yflvb",
        "entity_name": "Light It Up"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bfwbz",
        "entity_name": "Milkshake"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n97q6",
        "entity_name": "Break It Out"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07t5zwq",
        "entity_name": "I Am The Arsonist"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n983d",
        "entity_name": "Carolina"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n91vv",
        "entity_name": "Your Face"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07n68_6",
        "entity_name": "On Broken Glass"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n911w",
        "entity_name": "Consoler of the Lonely"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06yx2g",
        "entity_name": "Iron Fist"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n9081",
        "entity_name": "Rock and Roll Band"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07n685w",
        "entity_name": "NJ Legion Iced Tea"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07hzp0",
        "entity_name": "Because of You"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09z70z",
        "entity_name": "Drive"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.060ch6",
        "entity_name": "Jessie's Girl"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bhc9h3",
        "entity_name": "Hillbilly Deluxe"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04czjhh",
        "entity_name": "Man-Sized Wreath"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05b4t9n",
        "entity_name": "The Turning"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07np7jl",
        "entity_name": "Oh Yeah!"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.062q4b",
        "entity_name": "Tomorrow Never Knows"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04d_pjd",
        "entity_name": "G.L.O.W."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03w5tq",
        "entity_name": "You Really Got Me"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0mfxgx",
        "entity_name": "Ruby Soho"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dy0sz",
        "entity_name": "Me and My Gang"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02rrj0t",
        "entity_name": "So What'cha Want"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0y7tgc",
        "entity_name": "More Human Than Human"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n95sg",
        "entity_name": "Degenerated"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0471sn",
        "entity_name": "What's My Age Again?"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h4_93",
        "entity_name": "Old Time Rock and Roll"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n97ml",
        "entity_name": "Get Out Of Denver"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02vy9j7",
        "entity_name": "Ticks"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.048cg0",
        "entity_name": "Born to Run"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0y6ldw",
        "entity_name": "Look Good in Leather"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.096ydc",
        "entity_name": "Johnny I Hardly Knew Ye"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n91nv",
        "entity_name": "Frail Grasp On The Big Picture"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01d08g0",
        "entity_name": "Cherry Cola"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.025v04w",
        "entity_name": "Lycanthrope"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lmj8h",
        "entity_name": "Camel's Night Out"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01dnq5w",
        "entity_name": "Por La Boca Vive El Pez"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026qzd7",
        "entity_name": "Hot Blooded"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04f43fp",
        "entity_name": "Use Me"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ngh1y",
        "entity_name": "New Wave"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0frp42p",
        "entity_name": "Young Cardinals"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07n68fs",
        "entity_name": "Everything's Magic"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0797lz2",
        "entity_name": "Shimmer & Shine"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0vc5dm",
        "entity_name": "Hier kommt Alex"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.017q6wg",
        "entity_name": "I'm Shipping Up to Boston"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026m_36",
        "entity_name": "Finley"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07n74pr",
        "entity_name": "Disconnected"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04ghf9h",
        "entity_name": "Another Way to Die"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0123pxj",
        "entity_name": "Cadillac Solitario"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07np71p",
        "entity_name": "Anything 'Cept The Truth"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07np74_",
        "entity_name": "Low (Travis Barker Remix)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04jpn45",
        "entity_name": "Cyanide"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0d_bzfw",
        "entity_name": "My Apocalypse"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n9042",
        "entity_name": "Suicide & Redemption"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n98yt",
        "entity_name": "Love Me Like a Reptile"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02h3sz",
        "entity_name": "You Know You're Right"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c1mv3",
        "entity_name": "Very Ape"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n991w",
        "entity_name": "Stay Away"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0169x6b",
        "entity_name": "Linoleum"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04nz0x",
        "entity_name": "It's Raining Men"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04cx_qs",
        "entity_name": "The Shock of the Lightning"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n90wb",
        "entity_name": "Waiting for the Rapture"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n96x3",
        "entity_name": "Ain't Got Nothin"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04f59tc",
        "entity_name": "Falling Down"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n96tx",
        "entity_name": "(Get Off Your) High Horse Lady"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04gm3fc",
        "entity_name": "I'm Outta Time"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n973q",
        "entity_name": "Soldier On"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n9707",
        "entity_name": "The Nature of Reality"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ntxvd",
        "entity_name": "Down With Disease"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.012q_0",
        "entity_name": "We Are the Champions"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04gvv9_",
        "entity_name": "C-lebrity"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b8lyl",
        "entity_name": "Fat Bottomed Girls"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03m97y9",
        "entity_name": "Supernatural Superserious"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02vsnrw",
        "entity_name": "Audience of One"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122y5frt",
        "entity_name": "Wonderwall"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02vq7_2",
        "entity_name": "Well Thought Out Twinkles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n98j0",
        "entity_name": "Panic Switch"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05qp4q",
        "entity_name": "Good Times"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0783pr",
        "entity_name": "The Everlasting Gaze"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01cz4n8",
        "entity_name": "'54, '74, '90, 2006"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.017pnsn",
        "entity_name": "Touch In The Night (Crash Version)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04kcbd1",
        "entity_name": "Bodhisattva"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.080j41",
        "entity_name": "Kid Charlemagne"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n921x",
        "entity_name": "Sacrifice"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n93s2",
        "entity_name": "Losing Touch"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06z8wm",
        "entity_name": "Debaser"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n946d",
        "entity_name": "Mama Mae"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pfry3",
        "entity_name": "The Bitter End"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n90_v",
        "entity_name": "Hold Up"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03wj5rq",
        "entity_name": "Salute Your Solution"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026x_3j",
        "entity_name": "In the Shadows"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04sc7d",
        "entity_name": "New Slang"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02qqwxv",
        "entity_name": "Outtathaway!"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0f2nfm",
        "entity_name": "Junior's Farm"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.028054l",
        "entity_name": "What Have You Done"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.052n5t",
        "entity_name": "Within You Without You"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03d2lg0",
        "entity_name": "Gimme All Your Lovin'"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09rs__",
        "entity_name": "Dirty Little Secret"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0f2hvr",
        "entity_name": "Hi, Hi, Hi"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ntxwy",
        "entity_name": "Sample in a Jar"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dwnm8",
        "entity_name": "Ready to Fall"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n91t4",
        "entity_name": "Jimi"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n9763",
        "entity_name": "Commotion"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.12302h7m",
        "entity_name": "C'est Comme Ça"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04jl8jn",
        "entity_name": "To Be Where There's Life"
      }
    ],
    "function": "<=",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.musical_game_song",
          "class": "cvg.musical_game_song",
          "friendly_name": "Musical Game Song",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.musical_game_song_relationship",
          "class": "cvg.musical_game_song_relationship",
          "friendly_name": "Musical game/song relationship",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.06ztwyd",
          "class": "cvg.musical_game",
          "friendly_name": "Band Hero",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "2009-08-11^^http://www.w3.org/2001/XMLSchema#date",
          "class": "type.datetime",
          "friendly_name": "Aug. the 11st, 2009",
          "question_node": 0,
          "function": "<="
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.musical_game_song.games",
          "friendly_name": "Games"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.musical_game_song_relationship.game",
          "friendly_name": "Game"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "cvg.musical_game_song_relationship.release_date",
          "friendly_name": "Release date"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.musical_game_song . \n?x1 :type.object.type :cvg.musical_game_song_relationship . \nVALUES ?x2 { :m.06ztwyd } \nFILTER (?x3 <= \"2009-08-11-08:00\"^^<http://www.w3.org/2001/XMLSchema#date>)\n?x0 :cvg.musical_game_song.games ?x1 . \n?x1 :cvg.musical_game_song_relationship.game ?x2 . \n?x1 :cvg.musical_game_song_relationship.release_date ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.musical_game_song (JOIN cvg.musical_game_song.games (AND (JOIN cvg.musical_game_song_relationship.game m.06ztwyd) (le cvg.musical_game_song_relationship.release_date 2009-08-11^^http://www.w3.org/2001/XMLSchema#date))))",
    "topic_entity": {
      "m.06ztwyd": "Band Hero"
    }
  },
  {
    "qid": 4303841002000,
    "question": "the latest released version of the game by sony computer entertainment america was published in which region?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.09c7w0",
        "entity_name": "United States of America"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_region",
          "class": "cvg.computer_game_region",
          "friendly_name": "Video Game Region",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.datetime",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.0gm955z",
          "class": "cvg.cvg_publisher",
          "friendly_name": "Sony Computer Entertainment America",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.game_version.regions",
          "friendly_name": "Regions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.game_version.release_date",
          "friendly_name": "Release Date"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "cvg.game_version.publisher",
          "friendly_name": "Publisher"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_region . \n?x1 :type.object.type :cvg.game_version . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :cvg.computer_game_region . \n?y1 :type.object.type :cvg.game_version . \nVALUES ?y3 { :m.0gm955z } \n?y1 :cvg.game_version.regions ?y0 . \n?y1 :cvg.game_version.release_date ?y2 . \n?y1 :cvg.game_version.publisher ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x3 { :m.0gm955z } \n?x1 :cvg.game_version.regions ?x0 . \n?x1 :cvg.game_version.release_date ?x2 . \n?x1 :cvg.game_version.publisher ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(ARGMAX (AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (JOIN cvg.game_version.publisher m.0gm955z))) (JOIN (R cvg.game_version.regions) cvg.game_version.release_date))",
    "topic_entity": {
      "m.0gm955z": "Sony Computer Entertainment America"
    }
  },
  {
    "qid": 3205368001000,
    "question": "which units of length are associated with the system where mass is measured in grains?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vb3",
        "entity_name": "Mile"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01crvy",
        "entity_name": "Foot"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03th6",
        "entity_name": "Inch"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01464h",
        "entity_name": "Fathom"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02mr9z",
        "entity_name": "Rod"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0355rq",
        "entity_name": "Chain"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.018cl3",
        "entity_name": "Cable length"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05bl8",
        "entity_name": "Nautical mile"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05gwxt",
        "entity_name": "Link"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.087tz",
        "entity_name": "Yard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.031l7",
        "entity_name": "Furlong"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.050f99",
        "entity_name": "League"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fhs97",
        "entity_name": "Thousandth of an inch"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.distance_unit",
          "class": "measurement_unit.distance_unit",
          "friendly_name": "Unit of Length",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.016sl1",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Grain",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.distance_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.weight_units",
          "friendly_name": "Mass Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.distance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.016sl1 } \n?x0 :measurement_unit.distance_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.weight_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.distance_unit (JOIN measurement_unit.distance_unit.measurement_system (JOIN measurement_unit.measurement_system.weight_units m.016sl1)))",
    "topic_entity": {
      "m.016sl1": "Grain"
    }
  },
  {
    "qid": 3202335001000,
    "question": "the designer of uss constitution also designed which ships?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01vmyz",
        "entity_name": "USS Constellation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01mwn6",
        "entity_name": "USS Congress"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04cvc2l",
        "entity_name": "USS Wasp"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02g2qn",
        "entity_name": "USS President"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05mtr59",
        "entity_name": "USS Frolic"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gx9453",
        "entity_name": "USS Peacock"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01bsf_",
        "entity_name": "USS United States"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03f3fj",
        "entity_name": "USS Chesapeake"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "boats.ship",
          "class": "boats.ship",
          "friendly_name": "Ship",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "boats.ship_designer",
          "class": "boats.ship_designer",
          "friendly_name": "Ship Designer",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.07y14",
          "class": "user.patrick.default_domain.warship_v1_1",
          "friendly_name": "USS Constitution",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "boats.ship.designer",
          "friendly_name": "Designer"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "boats.ship_designer.boats_designed",
          "friendly_name": "Boats Designed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :boats.ship . \n?x1 :type.object.type :boats.ship_designer . \nVALUES ?x2 { :m.07y14 } \n?x0 :boats.ship.designer ?x1 . \n?x1 :boats.ship_designer.boats_designed ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "boats"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND boats.ship (JOIN boats.ship.designer (JOIN boats.ship_designer.boats_designed m.07y14)))",
    "topic_entity": {
      "m.07y14": "USS Constitution"
    }
  },
  {
    "qid": 3203411013000,
    "question": "name the tld registry that registered university management ltd.",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hsm_4",
        "entity_name": "Belize Network Information Center"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "internet.top_level_domain_registry",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Top Level Domain Registry",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "internet.top_level_domain",
          "class": "internet.top_level_domain",
          "friendly_name": "Top Level Domain",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02hsmx5",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "University Management Ltd",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "internet.top_level_domain_registry.domains",
          "friendly_name": "Domains Registered"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "internet.top_level_domain.registry",
          "friendly_name": "Registry"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.top_level_domain_registry . \n?x1 :type.object.type :internet.top_level_domain . \nVALUES ?x2 { :m.02hsmx5 } \n?x0 :internet.top_level_domain_registry.domains ?x1 . \n?x1 :internet.top_level_domain.registry ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "internet"
    ],
    "level": "compositional",
    "s_expression": "(AND internet.top_level_domain_registry (JOIN internet.top_level_domain_registry.domains (JOIN internet.top_level_domain.registry m.02hsmx5)))",
    "topic_entity": {
      "m.02hsmx5": "University Management Ltd"
    }
  },
  {
    "qid": 3203411009000,
    "question": "nic.bi was registered by which tld registry?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hsmps",
        "entity_name": "CBINET"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "internet.top_level_domain_registry",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Top Level Domain Registry",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "internet.top_level_domain",
          "class": "internet.top_level_domain",
          "friendly_name": "Top Level Domain",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02hsmvm",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "NIC.BI",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "internet.top_level_domain_registry.domains",
          "friendly_name": "Domains Registered"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "internet.top_level_domain.registry",
          "friendly_name": "Registry"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.top_level_domain_registry . \n?x1 :type.object.type :internet.top_level_domain . \nVALUES ?x2 { :m.02hsmvm } \n?x0 :internet.top_level_domain_registry.domains ?x1 . \n?x1 :internet.top_level_domain.registry ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "internet"
    ],
    "level": "compositional",
    "s_expression": "(AND internet.top_level_domain_registry (JOIN internet.top_level_domain_registry.domains (JOIN internet.top_level_domain.registry m.02hsmvm)))",
    "topic_entity": {
      "m.02hsmvm": "NIC.BI"
    }
  },
  {
    "qid": 4300898000000,
    "question": "the text at the core of hidden christians of japan and honored by family worship practitioners is what?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.015j7",
        "entity_name": "The Bible"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "religion.religious_text",
          "class": "religion.religious_text",
          "friendly_name": "Religious Text",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "entity",
          "id": "m.044f0r",
          "class": "religion.religion",
          "friendly_name": "Hidden Christians of Japan",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "religion.religion",
          "class": "religion.religion",
          "friendly_name": "Religion",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.0vpv0_w",
          "class": "religion.religious_practice",
          "friendly_name": "Family worship",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "religion.religion.texts",
          "friendly_name": "Texts"
        },
        {
          "start": 2,
          "end": 0,
          "relation": "religion.religion.texts",
          "friendly_name": "Texts"
        },
        {
          "start": 2,
          "end": 3,
          "relation": "religion.religion.practices",
          "friendly_name": "Practices"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.religious_text . \nVALUES ?x1 { :m.044f0r } \n?x2 :type.object.type :religion.religion . \nVALUES ?x3 { :m.0vpv0_w } \n?x1 :religion.religion.texts ?x0 . \n?x2 :religion.religion.texts ?x0 . \n?x2 :religion.religion.practices ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "religion"
    ],
    "level": "compositional",
    "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.044f0r) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.0vpv0_w))))",
    "topic_entity": {
      "m.044f0r": "Hidden Christians of Japan",
      "m.0vpv0_w": "Family worship"
    }
  },
  {
    "qid": 4301766004000,
    "question": "the creators of pst's most recently released browser was called what?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04b32v",
        "entity_name": "Internet Explorer for Mac"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.web_browser",
          "class": "computer.web_browser",
          "friendly_name": "Web browser",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.software_developer",
          "class": "computer.software_developer",
          "friendly_name": "Software Developer",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02l09y1",
          "class": "computer.file_format",
          "friendly_name": "Pst",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.datetime",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.software_developer.software",
          "friendly_name": "Software"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "computer.file_format.format_creator",
          "friendly_name": "Format Creator"
        },
        {
          "start": 0,
          "end": 3,
          "relation": "computer.software.first_released",
          "friendly_name": "First Released"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.web_browser . \n?x1 :type.object.type :computer.software_developer . \nVALUES ?x2 { :m.02l09y1 } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :computer.web_browser . \n?y1 :type.object.type :computer.software_developer . \nVALUES ?y2 { :m.02l09y1 } \n?y1 :computer.software_developer.software ?y0 . \n?y2 :computer.file_format.format_creator ?y1 . \n?y0 :computer.software.first_released ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :computer.software_developer.software ?x0 . \n?x2 :computer.file_format.format_creator ?x1 . \n?x0 :computer.software.first_released ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "compositional",
    "s_expression": "(ARGMAX (AND computer.web_browser (JOIN (R computer.software_developer.software) (JOIN (R computer.file_format.format_creator) m.02l09y1))) computer.software.first_released)",
    "topic_entity": {
      "m.02l09y1": "Pst"
    }
  },
  {
    "qid": 4301141015000,
    "question": "where is the version developed by insomniac games and distributed through physical media released?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03_6lc",
        "entity_name": "PAL region"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_region",
          "class": "cvg.computer_game_region",
          "friendly_name": "Video Game Region",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0663y78",
          "class": "cvg.computer_game_distribution_system",
          "friendly_name": "Physical media",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.033b85",
          "class": "cvg.cvg_developer",
          "friendly_name": "Insomniac Games",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.game_version.regions",
          "friendly_name": "Regions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.game_version.distributed_through",
          "friendly_name": "Distributed through"
        },
        {
          "start": 3,
          "end": 1,
          "relation": "cvg.cvg_developer.game_versions_developed",
          "friendly_name": "Game Versions Developed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_region . \n?x1 :type.object.type :cvg.game_version . \nVALUES ?x2 { :m.0663y78 } \nVALUES ?x3 { :m.033b85 } \n?x1 :cvg.game_version.regions ?x0 . \n?x1 :cvg.game_version.distributed_through ?x2 . \n?x3 :cvg.cvg_developer.game_versions_developed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.033b85))))",
    "topic_entity": {
      "m.0663y78": "Physical media",
      "m.033b85": "Insomniac Games"
    }
  },
  {
    "qid": 3202416002000,
    "question": "which video game version was developed by the developer of battle forge?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0kyq3h2",
        "entity_name": "Command & Conquer Tiberium Alliances"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0kyq5k0",
        "entity_name": "SpellForce: The Order of Dawn"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nspt0",
        "entity_name": "BattleForge"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0kz27qj",
        "entity_name": "SpellForce 2: Shadow Wars"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.cvg_developer",
          "class": "cvg.cvg_developer",
          "friendly_name": "Video Game Developer",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04f56nl",
          "class": "cvg.computer_videogame",
          "friendly_name": "battle forge",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.game_version.developer",
          "friendly_name": "Developer"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "cvg.computer_videogame.developer",
          "friendly_name": "Developer"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \n?x1 :type.object.type :cvg.cvg_developer . \nVALUES ?x2 { :m.04f56nl } \n?x0 :cvg.game_version.developer ?x1 . \n?x2 :cvg.computer_videogame.developer ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.game_version (JOIN cvg.game_version.developer (JOIN (R cvg.computer_videogame.developer) m.04f56nl)))",
    "topic_entity": {
      "m.04f56nl": "BattleForge"
    }
  },
  {
    "qid": 3202594006000,
    "question": "which is used as the unit of volume in the measurement system with joule per mole per kelvin?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g593rd",
        "entity_name": "Cubic metre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04lmb",
        "entity_name": "Liter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1211ppz5",
        "entity_name": "Centiliter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121_428n",
        "entity_name": "Deciliter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01x333y",
        "entity_name": "Milliliter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121_4_py",
        "entity_name": "Hectoliter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121g16hn",
        "entity_name": "Cubic kilometer"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.volume_unit",
          "class": "measurement_unit.volume_unit",
          "friendly_name": "Unit Of Volume",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj59n",
          "class": "measurement_unit.molar_heat_capacity_unit",
          "friendly_name": "Joule per mole per kelvin",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.volume_units",
          "friendly_name": "Volume Units"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.molar_heat_capacity_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.volume_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj59n } \n?x1 :measurement_unit.measurement_system.volume_units ?x0 . \n?x2 :measurement_unit.molar_heat_capacity_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.volume_unit (JOIN (R measurement_unit.measurement_system.volume_units) (JOIN (R measurement_unit.molar_heat_capacity_unit.measurement_system) m.02sj59n)))",
    "topic_entity": {
      "m.02sj59n": "Joule per mole per kelvin"
    }
  },
  {
    "qid": 3202265004000,
    "question": "which automotive class uses the elvis presley's pink cadillac as one of its example models?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01lcwm",
        "entity_name": "Luxury vehicle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03vntj",
        "entity_name": "Full-size car"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "automotive.automotive_class",
          "class": "automotive.automotive_class",
          "friendly_name": "Automotive Class",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "automotive.model",
          "class": "automotive.model",
          "friendly_name": "Automobile Model",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03yndmb",
          "class": "automotive.privately_owned_vehicle",
          "friendly_name": "Elvis Presley's Pink Cadillac",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "automotive.automotive_class.examples",
          "friendly_name": "Examples"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "automotive.privately_owned_vehicle.model",
          "friendly_name": "Model"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :automotive.automotive_class . \n?x1 :type.object.type :automotive.model . \nVALUES ?x2 { :m.03yndmb } \n?x0 :automotive.automotive_class.examples ?x1 . \n?x2 :automotive.privately_owned_vehicle.model ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "automotive"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND automotive.automotive_class (JOIN automotive.automotive_class.examples (JOIN (R automotive.privately_owned_vehicle.model) m.03yndmb)))",
    "topic_entity": {
      "m.03yndmb": "Elvis Presley's Pink Cadillac"
    }
  },
  {
    "qid": 3201961003000,
    "question": "what speed unit shares the same measurement system with stilb?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0y484fc",
        "entity_name": "Centimetre per second"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.speed_unit",
          "class": "measurement_unit.speed_unit",
          "friendly_name": "Unit of Speed",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04csv72",
          "class": "measurement_unit.luminance_unit",
          "friendly_name": "Stilb",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.speed_units",
          "friendly_name": "Speed Units"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.luminance_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.speed_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.04csv72 } \n?x1 :measurement_unit.measurement_system.speed_units ?x0 . \n?x2 :measurement_unit.luminance_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.speed_unit (JOIN (R measurement_unit.measurement_system.speed_units) (JOIN (R measurement_unit.luminance_unit.measurement_system) m.04csv72)))",
    "topic_entity": {
      "m.04csv72": "Stilb"
    }
  },
  {
    "qid": 3201428001000,
    "question": "which is the galactic interaction type of ngc 4567?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cgl16t",
        "entity_name": "Galactic collision"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "astronomy.galactic_interaction_type",
          "class": "astronomy.galactic_interaction_type",
          "friendly_name": "Galactic interaction type",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "astronomy.galactic_interaction",
          "class": "astronomy.galactic_interaction",
          "friendly_name": "Galactic interaction",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0x0kj85",
          "class": "astronomy.galaxy",
          "friendly_name": "NGC 4567",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "astronomy.galactic_interaction_type.galaxy_s_interacting_this_way",
          "friendly_name": "Galaxy's interacting this way"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "astronomy.galaxy.interaction",
          "friendly_name": "Interaction"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.galactic_interaction_type . \n?x1 :type.object.type :astronomy.galactic_interaction . \nVALUES ?x2 { :m.0x0kj85 } \n?x0 :astronomy.galactic_interaction_type.galaxy_s_interacting_this_way ?x1 . \n?x2 :astronomy.galaxy.interaction ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "astronomy"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND astronomy.galactic_interaction_type (JOIN astronomy.galactic_interaction_type.galaxy_s_interacting_this_way (JOIN (R astronomy.galaxy.interaction) m.0x0kj85)))",
    "topic_entity": {
      "m.0x0kj85": "NGC 4567"
    }
  },
  {
    "qid": 4301766002000,
    "question": "which browser was most recently released by the creators of esl?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04b32v",
        "entity_name": "Internet Explorer for Mac"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.web_browser",
          "class": "computer.web_browser",
          "friendly_name": "Web browser",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.software_developer",
          "class": "computer.software_developer",
          "friendly_name": "Software Developer",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02l0lkl",
          "class": "computer.file_format",
          "friendly_name": "Esl",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.datetime",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.software_developer.software",
          "friendly_name": "Software"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "computer.file_format.format_creator",
          "friendly_name": "Format Creator"
        },
        {
          "start": 0,
          "end": 3,
          "relation": "computer.software.first_released",
          "friendly_name": "First Released"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.web_browser . \n?x1 :type.object.type :computer.software_developer . \nVALUES ?x2 { :m.02l0lkl } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :computer.web_browser . \n?y1 :type.object.type :computer.software_developer . \nVALUES ?y2 { :m.02l0lkl } \n?y1 :computer.software_developer.software ?y0 . \n?y2 :computer.file_format.format_creator ?y1 . \n?y0 :computer.software.first_released ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :computer.software_developer.software ?x0 . \n?x2 :computer.file_format.format_creator ?x1 . \n?x0 :computer.software.first_released ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "compositional",
    "s_expression": "(ARGMAX (AND computer.web_browser (JOIN (R computer.software_developer.software) (JOIN (R computer.file_format.format_creator) m.02l0lkl))) computer.software.first_released)",
    "topic_entity": {
      "m.02l0lkl": "Esl"
    }
  },
  {
    "qid": 3200570004000,
    "question": "which conference sponsor also sponsored the conference series with advanstar communications, inc.?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fpd6jv",
        "entity_name": "Magic International"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference_sponsor",
          "class": "conferences.conference_sponsor",
          "friendly_name": "Conference sponsor",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.09k3g5t",
          "class": "conferences.conference_sponsor",
          "friendly_name": "Advanstar Communications, Inc.",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "conferences.conference_series.sponsoring_organization",
          "friendly_name": "Sponsoring organization"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "conferences.conference_series.sponsoring_organization",
          "friendly_name": "Sponsoring organization"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_sponsor . \n?x1 :type.object.type :conferences.conference_series . \nVALUES ?x2 { :m.09k3g5t } \n?x1 :conferences.conference_series.sponsoring_organization ?x0 . \n?x1 :conferences.conference_series.sponsoring_organization ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference_sponsor (JOIN (R conferences.conference_series.sponsoring_organization) (JOIN conferences.conference_series.sponsoring_organization m.09k3g5t)))",
    "topic_entity": {
      "m.09k3g5t": "Advanstar Communications, Inc."
    }
  },
  {
    "qid": 3205234013000,
    "question": "what is the conference series that belongs to the same conference event as sheraton columbus hotel?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hn1p_7",
        "entity_name": "GIScience"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference",
          "class": "conferences.conference",
          "friendly_name": "Conference event",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0_z98xk",
          "class": "conferences.conference_venue",
          "friendly_name": "Sheraton Columbus Hotel",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "conferences.conference_series.conference",
          "friendly_name": "Conferences"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "conferences.conference_venue.conferences",
          "friendly_name": "Conferences"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_series . \n?x1 :type.object.type :conferences.conference . \nVALUES ?x2 { :m.0_z98xk } \n?x0 :conferences.conference_series.conference ?x1 . \n?x2 :conferences.conference_venue.conferences ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference_series (JOIN conferences.conference_series.conference (JOIN (R conferences.conference_venue.conferences) m.0_z98xk)))",
    "topic_entity": {
      "m.0_z98xk": "Sheraton Columbus Hotel"
    }
  },
  {
    "qid": 4300106004000,
    "question": "who is the owner of the website with api access to flof.com.ar?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.040vknr",
        "entity_name": "StopFinder Ltd."
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "internet.website_owner",
          "class": "internet.website_owner",
          "friendly_name": "Website Owner",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "internet.website",
          "class": "internet.website",
          "friendly_name": "Website",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "internet.api",
          "class": "internet.api",
          "friendly_name": "API",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.04swg_r",
          "class": "internet.website",
          "friendly_name": "flof.com.ar",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "internet.website_owner.websites_owned",
          "friendly_name": "Websites Owned"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "internet.api.site",
          "friendly_name": "Site"
        },
        {
          "start": 2,
          "end": 3,
          "relation": "internet.api.site",
          "friendly_name": "Site"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.website_owner . \n?x1 :type.object.type :internet.website . \n?x2 :type.object.type :internet.api . \nVALUES ?x3 { :m.04swg_r } \n?x0 :internet.website_owner.websites_owned ?x1 . \n?x2 :internet.api.site ?x1 . \n?x2 :internet.api.site ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "internet"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND internet.website_owner (JOIN internet.website_owner.websites_owned (JOIN (R internet.api.site) (JOIN internet.api.site m.04swg_r))))",
    "topic_entity": {
      "m.04swg_r": "flof.com.ar"
    }
  },
  {
    "qid": 3203230010000,
    "question": "which professional sports team has the same owner as washington wizards?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jnl5",
        "entity_name": "Washington Capitals"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "sports.professional_sports_team",
          "class": "sports.professional_sports_team",
          "friendly_name": "Professional Sports Team",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "sports.sports_team_owner",
          "class": "sports.sports_team_owner",
          "friendly_name": "Sports Team Owner",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0jm5b",
          "class": "sports.professional_sports_team",
          "friendly_name": "Washington Wizards",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "sports.sports_team_owner.teams_owned",
          "friendly_name": "Teams Owned"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "sports.professional_sports_team.owner_s",
          "friendly_name": "Owner(s)"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.professional_sports_team . \n?x1 :type.object.type :sports.sports_team_owner . \nVALUES ?x2 { :m.0jm5b } \n?x1 :sports.sports_team_owner.teams_owned ?x0 . \n?x2 :sports.professional_sports_team.owner_s ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "sports"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND sports.professional_sports_team (JOIN (R sports.sports_team_owner.teams_owned) (JOIN (R sports.professional_sports_team.owner_s) m.0jm5b)))",
    "topic_entity": {
      "m.0jm5b": "Washington Wizards"
    }
  },
  {
    "qid": 3200593015000,
    "question": "eros platière is the same breed as what domesticated animal?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03k3r",
        "entity_name": "Horse"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "biology.domesticated_animal",
          "class": "biology.domesticated_animal",
          "friendly_name": "Domesticated animal",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "biology.animal_breed",
          "class": "biology.animal_breed",
          "friendly_name": "Animal breed",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0kfxfzh",
          "class": "biology.pedigreed_animal",
          "friendly_name": "Eros Platière",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "biology.animal_breed.breed_of",
          "friendly_name": "Breed of"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "biology.pedigreed_animal.breed",
          "friendly_name": "Breed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.domesticated_animal . \n?x1 :type.object.type :biology.animal_breed . \nVALUES ?x2 { :m.0kfxfzh } \n?x1 :biology.animal_breed.breed_of ?x0 . \n?x2 :biology.pedigreed_animal.breed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "biology"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND biology.domesticated_animal (JOIN (R biology.animal_breed.breed_of) (JOIN (R biology.pedigreed_animal.breed) m.0kfxfzh)))",
    "topic_entity": {
      "m.0kfxfzh": "Eros Platière"
    }
  },
  {
    "qid": 4302232015000,
    "question": "what conference series focuses on orycon?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.081qw",
        "entity_name": "Worldcon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bh901",
        "entity_name": "Canvention"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference",
          "class": "conferences.conference",
          "friendly_name": "Conference event",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "conferences.conference_subject",
          "class": "conferences.conference_subject",
          "friendly_name": "Conference subject",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.0b4c_1",
          "class": "conferences.conference_series",
          "friendly_name": "OryCon",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "conferences.conference_series.conference",
          "friendly_name": "Conferences"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "conferences.conference.focus",
          "friendly_name": "Focus"
        },
        {
          "start": 3,
          "end": 2,
          "relation": "conferences.conference_series.subject",
          "friendly_name": "Subject"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_series . \n?x1 :type.object.type :conferences.conference . \n?x2 :type.object.type :conferences.conference_subject . \nVALUES ?x3 { :m.0b4c_1 } \n?x0 :conferences.conference_series.conference ?x1 . \n?x1 :conferences.conference.focus ?x2 . \n?x3 :conferences.conference_series.subject ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference_series (JOIN conferences.conference_series.conference (JOIN conferences.conference.focus (JOIN (R conferences.conference_series.subject) m.0b4c_1))))",
    "topic_entity": {
      "m.0b4c_1": "OryCon"
    }
  },
  {
    "qid": 4301766001000,
    "question": "what was the most recent browser released by the creators of bps?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04b32v",
        "entity_name": "Internet Explorer for Mac"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.web_browser",
          "class": "computer.web_browser",
          "friendly_name": "Web browser",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.software_developer",
          "class": "computer.software_developer",
          "friendly_name": "Software Developer",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02l0506",
          "class": "computer.file_format",
          "friendly_name": "Bps",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.datetime",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.software_developer.software",
          "friendly_name": "Software"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "computer.file_format.format_creator",
          "friendly_name": "Format Creator"
        },
        {
          "start": 0,
          "end": 3,
          "relation": "computer.software.first_released",
          "friendly_name": "First Released"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.web_browser . \n?x1 :type.object.type :computer.software_developer . \nVALUES ?x2 { :m.02l0506 } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :computer.web_browser . \n?y1 :type.object.type :computer.software_developer . \nVALUES ?y2 { :m.02l0506 } \n?y1 :computer.software_developer.software ?y0 . \n?y2 :computer.file_format.format_creator ?y1 . \n?y0 :computer.software.first_released ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :computer.software_developer.software ?x0 . \n?x2 :computer.file_format.format_creator ?x1 . \n?x0 :computer.software.first_released ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "compositional",
    "s_expression": "(ARGMAX (AND computer.web_browser (JOIN (R computer.software_developer.software) (JOIN (R computer.file_format.format_creator) m.02l0506))) computer.software.first_released)",
    "topic_entity": {
      "m.02l0506": "Bps"
    }
  },
  {
    "qid": 3205088002000,
    "question": "what unit of power is associated with a measurement system having a magnetic field strength units including ampere per metre?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.09hl5",
        "entity_name": "Watt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1226mnjx",
        "entity_name": "Megawatt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kdm16",
        "entity_name": "Milliwatt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120ylmh4",
        "entity_name": "Kilowatt"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.power_unit",
          "class": "measurement_unit.power_unit",
          "friendly_name": "Unit of Power",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj414",
          "class": "measurement_unit.magnetic_field_strength_unit",
          "friendly_name": "Ampere per metre",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.power_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.magnetic_field_strength_units",
          "friendly_name": "Magnetic Field Strength Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.power_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj414 } \n?x0 :measurement_unit.power_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.magnetic_field_strength_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.power_unit (JOIN measurement_unit.power_unit.measurement_system (JOIN measurement_unit.measurement_system.magnetic_field_strength_units m.02sj414)))",
    "topic_entity": {
      "m.02sj414": "Ampere per metre"
    }
  },
  {
    "qid": 3201324008000,
    "question": "tokyu corporation owns a what locomotive?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03czsms",
        "entity_name": "Tokyu 7000 series"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "rail.locomotive",
          "class": "rail.locomotive",
          "friendly_name": "Locomotive",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "rail.locomotive_ownership",
          "class": "rail.locomotive_ownership",
          "friendly_name": "Locomotive ownership",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.022tp1",
          "class": "rail.locomotive_owner",
          "friendly_name": "Tokyu Corporation",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "rail.locomotive_ownership.locomotive",
          "friendly_name": "Locomotive"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "rail.locomotive_ownership.owner",
          "friendly_name": "Owner"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :rail.locomotive . \n?x1 :type.object.type :rail.locomotive_ownership . \nVALUES ?x2 { :m.022tp1 } \n?x1 :rail.locomotive_ownership.locomotive ?x0 . \n?x1 :rail.locomotive_ownership.owner ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "rail"
    ],
    "level": "zero-shot",
    "s_expression": "(AND rail.locomotive (JOIN (R rail.locomotive_ownership.locomotive) (JOIN rail.locomotive_ownership.owner m.022tp1)))",
    "topic_entity": {
      "m.022tp1": "Tokyu Corporation"
    }
  },
  {
    "qid": 3204476006000,
    "question": "what unit of energy is the same as cumecs?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.1224btsg",
        "entity_name": "Kilojoule"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04570",
        "entity_name": "Joule"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.energy_unit",
          "class": "measurement_unit.energy_unit",
          "friendly_name": "Unit of Energy",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0gbw2l",
          "class": "measurement_unit.unit_of_volumetric_flow_rate",
          "friendly_name": "cumecs",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.energy_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.volumetric_flow_rate_units",
          "friendly_name": "Volumetric Flow Rate Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.energy_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0gbw2l } \n?x0 :measurement_unit.energy_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.volumetric_flow_rate_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.energy_unit (JOIN measurement_unit.energy_unit.measurement_system (JOIN measurement_unit.measurement_system.volumetric_flow_rate_units m.0gbw2l)))",
    "topic_entity": {
      "m.0gbw2l": "Cubic metre per second"
    }
  },
  {
    "qid": 3202626023000,
    "question": "what is the genome of the gene on chromosome 6 (human)?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bsdc",
        "entity_name": "Human genome"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "biology.genome",
          "class": "biology.genome",
          "friendly_name": "Genome",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "biology.gene",
          "class": "biology.gene",
          "friendly_name": "Gene",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02kwghz",
          "class": "biology.chromosome",
          "friendly_name": "Chromosome 6 (human)",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "biology.genome.gene",
          "friendly_name": "Gene"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "biology.chromosome.gene",
          "friendly_name": "Gene"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.genome . \n?x1 :type.object.type :biology.gene . \nVALUES ?x2 { :m.02kwghz } \n?x0 :biology.genome.gene ?x1 . \n?x2 :biology.chromosome.gene ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "biology"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND biology.genome (JOIN biology.genome.gene (JOIN (R biology.chromosome.gene) m.02kwghz)))",
    "topic_entity": {
      "m.02kwghz": "Chromosome 6 (human)"
    }
  },
  {
    "qid": 3202594004000,
    "question": "when describing the measurement system of joule per mole per kelvin, what is used as the unit of volume?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g593rd",
        "entity_name": "Cubic metre"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04lmb",
        "entity_name": "Liter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1211ppz5",
        "entity_name": "Centiliter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121_428n",
        "entity_name": "Deciliter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01x333y",
        "entity_name": "Milliliter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121_4_py",
        "entity_name": "Hectoliter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121g16hn",
        "entity_name": "Cubic kilometer"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.volume_unit",
          "class": "measurement_unit.volume_unit",
          "friendly_name": "Unit Of Volume",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj59n",
          "class": "measurement_unit.molar_heat_capacity_unit",
          "friendly_name": "Joule per mole per kelvin",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.volume_units",
          "friendly_name": "Volume Units"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.molar_heat_capacity_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.volume_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj59n } \n?x1 :measurement_unit.measurement_system.volume_units ?x0 . \n?x2 :measurement_unit.molar_heat_capacity_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.volume_unit (JOIN (R measurement_unit.measurement_system.volume_units) (JOIN (R measurement_unit.molar_heat_capacity_unit.measurement_system) m.02sj59n)))",
    "topic_entity": {
      "m.02sj59n": "Joule per mole per kelvin"
    }
  },
  {
    "qid": 3205699001000,
    "question": "what is the name of the gameplay mode that supports the peripheral dk bongos in the video game?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01z747",
        "entity_name": "Multiplayer video game"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hjn4",
        "entity_name": "Single-player video game"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.gameplay_mode",
          "class": "cvg.gameplay_mode",
          "friendly_name": "Gameplay Mode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_videogame",
          "class": "cvg.computer_videogame",
          "friendly_name": "Video game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04tv3d",
          "class": "computer.computer_peripheral",
          "friendly_name": "DK Bongos",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.gameplay_mode.games_with_this_mode",
          "friendly_name": "Games with this mode"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.peripherals_supported",
          "friendly_name": "Peripherals supported"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.gameplay_mode . \n?x1 :type.object.type :cvg.computer_videogame . \nVALUES ?x2 { :m.04tv3d } \n?x0 :cvg.gameplay_mode.games_with_this_mode ?x1 . \n?x1 :cvg.computer_videogame.peripherals_supported ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.gameplay_mode (JOIN cvg.gameplay_mode.games_with_this_mode (JOIN cvg.computer_videogame.peripherals_supported m.04tv3d)))",
    "topic_entity": {
      "m.04tv3d": "DK Bongos"
    }
  },
  {
    "qid": 3202811011000,
    "question": "which video game developer developed age of empires series?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.058wg9",
        "entity_name": "Bruce Shelley"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027m_m8",
        "entity_name": "Brian Sullivan"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.023lbp",
        "entity_name": "Brian Reynolds"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06jjgl",
        "entity_name": "Rick Goodman"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.11byb66xpc",
        "entity_name": "null"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.cvg_designer",
          "class": "cvg.cvg_designer",
          "friendly_name": "Video Game Designer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_videogame",
          "class": "cvg.computer_videogame",
          "friendly_name": "Video game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0673js",
          "class": "cvg.game_series",
          "friendly_name": "age of empires series",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.computer_videogame.designers",
          "friendly_name": "Designers"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.game_series",
          "friendly_name": "Part of game series"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.cvg_designer . \n?x1 :type.object.type :cvg.computer_videogame . \nVALUES ?x2 { :m.0673js } \n?x1 :cvg.computer_videogame.designers ?x0 . \n?x1 :cvg.computer_videogame.game_series ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.cvg_designer (JOIN (R cvg.computer_videogame.designers) (JOIN cvg.computer_videogame.game_series m.0673js)))",
    "topic_entity": {
      "m.0673js": "Age of Empires"
    }
  },
  {
    "qid": 3200664005000,
    "question": "a branch of millerism performs what practice?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.07_jd",
        "entity_name": "Vegetarianism"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.049m7",
        "entity_name": "Kashrut"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "religion.religious_practice",
          "class": "religion.religious_practice",
          "friendly_name": "Religious Practice",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "religion.religion",
          "class": "religion.religion",
          "friendly_name": "Religion",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.012dl6",
          "class": "religion.religion",
          "friendly_name": "Millerism",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "religion.religion.practices",
          "friendly_name": "Practices"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "religion.religion.branched_from",
          "friendly_name": "Branched From"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.religious_practice . \n?x1 :type.object.type :religion.religion . \nVALUES ?x2 { :m.012dl6 } \n?x1 :religion.religion.practices ?x0 . \n?x1 :religion.religion.branched_from ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "religion"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND religion.religious_practice (JOIN (R religion.religion.practices) (JOIN religion.religion.branched_from m.012dl6)))",
    "topic_entity": {
      "m.012dl6": "Millerism"
    }
  },
  {
    "qid": 3205220010000,
    "question": "what does bassist do for a career?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.039v1",
        "entity_name": "Guitarist"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09jwl",
        "entity_name": "Musician"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "people.profession",
          "class": "people.profession",
          "friendly_name": "Profession",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "people.profession",
          "class": "people.profession",
          "friendly_name": "Profession",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0kpyr6",
          "class": "type.type",
          "friendly_name": "Bassist",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.profession.specializations",
          "friendly_name": "Specializations"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "people.profession.corresponding_type",
          "friendly_name": "Corresponding type"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :people.profession . \n?x1 :type.object.type :people.profession . \nVALUES ?x2 { :m.0kpyr6 } \n?x0 :people.profession.specializations ?x1 . \n?x1 :people.profession.corresponding_type ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "people"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND people.profession (JOIN people.profession.specializations (JOIN people.profession.corresponding_type m.0kpyr6)))",
    "topic_entity": {
      "m.0kpyr6": "Bassist"
    }
  },
  {
    "qid": 3205361011000,
    "question": "what format does the station which broadcasts radio3 scienza use?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ggq0m",
        "entity_name": "Classical music"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "broadcast.radio_format",
          "class": "broadcast.radio_format",
          "friendly_name": "Radio format",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "broadcast.radio_station",
          "class": "broadcast.radio_station",
          "friendly_name": "Radio Station",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04cyh9d",
          "class": "radio.radio_program",
          "friendly_name": "Radio3 Scienza",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "broadcast.radio_station.format",
          "friendly_name": "Format"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "broadcast.broadcast.content",
          "friendly_name": "Content"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.radio_format . \n?x1 :type.object.type :broadcast.radio_station . \nVALUES ?x2 { :m.04cyh9d } \n?x1 :broadcast.radio_station.format ?x0 . \n?x1 :broadcast.broadcast.content ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "broadcast"
    ],
    "level": "compositional",
    "s_expression": "(AND broadcast.radio_format (JOIN (R broadcast.radio_station.format) (JOIN broadcast.broadcast.content m.04cyh9d)))",
    "topic_entity": {
      "m.04cyh9d": "Radio3 Scienza"
    }
  },
  {
    "qid": 3203411008000,
    "question": "comores telecom was registered by which tld registry?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01vbkb",
        "entity_name": "Verisign"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "internet.top_level_domain_registry",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Top Level Domain Registry",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "internet.top_level_domain",
          "class": "internet.top_level_domain",
          "friendly_name": "Top Level Domain",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02hsmt_",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Comores Telecom",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "internet.top_level_domain_registry.domains",
          "friendly_name": "Domains Registered"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "internet.top_level_domain.registry",
          "friendly_name": "Registry"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.top_level_domain_registry . \n?x1 :type.object.type :internet.top_level_domain . \nVALUES ?x2 { :m.02hsmt_ } \n?x0 :internet.top_level_domain_registry.domains ?x1 . \n?x1 :internet.top_level_domain.registry ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "internet"
    ],
    "level": "compositional",
    "s_expression": "(AND internet.top_level_domain_registry (JOIN internet.top_level_domain_registry.domains (JOIN internet.top_level_domain.registry m.02hsmt_)))",
    "topic_entity": {
      "m.02hsmt_": "Comores Telecom"
    }
  },
  {
    "qid": 3204433009000,
    "question": "what other file format(s) belong to the same genre as the pe?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01wgjz",
        "entity_name": "COFF"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01xnvt",
        "entity_name": "XCOFF"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027fr6d",
        "entity_name": "RDOFF"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027g3qb",
        "entity_name": "Relocatable Object Module Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02_5b83",
        "entity_name": "BAS"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02prw",
        "entity_name": "Executable and Linkable Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02s87m",
        "entity_name": ".exe"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02tprd",
        "entity_name": "Fat binary"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02w3nl",
        "entity_name": "COM file"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.033ctm",
        "entity_name": "Mach-O"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.033cwr",
        "entity_name": "Preferred Executable Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06df6b",
        "entity_name": "Universal binary"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06vn7d",
        "entity_name": "CMD file"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.087n4t",
        "entity_name": "New Executable"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0893bm",
        "entity_name": "a.out"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.091s5b",
        "entity_name": "NetWare Loadable Module"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09mr4xm",
        "entity_name": "objectiF Export Import File"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09rznp",
        "entity_name": "DOS MZ executable"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09zzb_",
        "entity_name": "Code signing"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.file_format",
          "class": "computer.file_format",
          "friendly_name": "File Format",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.file_format_genre",
          "class": "computer.file_format_genre",
          "friendly_name": "File Format Genre",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0h9pl",
          "class": "computer.file_format",
          "friendly_name": "pe",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.file_format_genre.file_formats",
          "friendly_name": "File Formats"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "computer.file_format.genre",
          "friendly_name": "Genre"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.file_format . \n?x1 :type.object.type :computer.file_format_genre . \nVALUES ?x2 { :m.0h9pl } \n?x1 :computer.file_format_genre.file_formats ?x0 . \n?x2 :computer.file_format.genre ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "compositional",
    "s_expression": "(AND computer.file_format (JOIN (R computer.file_format_genre.file_formats) (JOIN (R computer.file_format.genre) m.0h9pl)))",
    "topic_entity": {
      "m.0h9pl": "Portable Executable"
    }
  },
  {
    "qid": 3205555003000,
    "question": "the measurement system used by microsiemens includes what unit of frequency?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03nsh",
        "entity_name": "Hertz"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02n9swl",
        "entity_name": "Megahertz"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04j3wb3",
        "entity_name": "Kilohertz"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121lm_nv",
        "entity_name": "Gigahertz"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.unit_of_frequency",
          "class": "measurement_unit.unit_of_frequency",
          "friendly_name": "Unit of frequency",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0gvb8gp",
          "class": "measurement_unit.conductance_unit",
          "friendly_name": "Microsiemens",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.unit_of_frequency.measurement_system",
          "friendly_name": "Measurement system"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.conductance_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.unit_of_frequency . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0gvb8gp } \n?x0 :measurement_unit.unit_of_frequency.measurement_system ?x1 . \n?x2 :measurement_unit.conductance_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.unit_of_frequency (JOIN measurement_unit.unit_of_frequency.measurement_system (JOIN (R measurement_unit.conductance_unit.measurement_system) m.0gvb8gp)))",
    "topic_entity": {
      "m.0gvb8gp": "Microsiemens"
    }
  },
  {
    "qid": 3205699012000,
    "question": "what gameplay mode is used in the video game that supports accelerometers?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hjn4",
        "entity_name": "Single-player video game"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06p47s4",
        "entity_name": "Arcade mode"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hhw3vg",
        "entity_name": "Survival"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.gameplay_mode",
          "class": "cvg.gameplay_mode",
          "friendly_name": "Gameplay Mode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_videogame",
          "class": "cvg.computer_videogame",
          "friendly_name": "Video game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01w0lx",
          "class": "computer.computer_peripheral",
          "friendly_name": "accelerometers",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.gameplay_mode.games_with_this_mode",
          "friendly_name": "Games with this mode"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.peripherals_supported",
          "friendly_name": "Peripherals supported"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.gameplay_mode . \n?x1 :type.object.type :cvg.computer_videogame . \nVALUES ?x2 { :m.01w0lx } \n?x0 :cvg.gameplay_mode.games_with_this_mode ?x1 . \n?x1 :cvg.computer_videogame.peripherals_supported ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.gameplay_mode (JOIN cvg.gameplay_mode.games_with_this_mode (JOIN cvg.computer_videogame.peripherals_supported m.01w0lx)))",
    "topic_entity": {
      "m.01w0lx": "Accelerometer"
    }
  },
  {
    "qid": 3201457009000,
    "question": "what is the name of the exhibition that has the same exhibition curator with venice biennale of architecture taiwan pavillion 2006?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v07pc",
        "entity_name": "Future Pavilion"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "exhibitions.exhibition",
          "class": "exhibitions.exhibition",
          "friendly_name": "Exhibition",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "exhibitions.exhibition_curator",
          "class": "exhibitions.exhibition_curator",
          "friendly_name": "Exhibition curator",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.064dsyn",
          "class": "exhibitions.exhibition",
          "friendly_name": "Venice Biennale of Architecture Taiwan Pavillion 2006",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "exhibitions.exhibition_curator.exhibitions_curated",
          "friendly_name": "Exhibitions curated"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "exhibitions.exhibition_curator.exhibitions_curated",
          "friendly_name": "Exhibitions curated"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :exhibitions.exhibition . \n?x1 :type.object.type :exhibitions.exhibition_curator . \nVALUES ?x2 { :m.064dsyn } \n?x1 :exhibitions.exhibition_curator.exhibitions_curated ?x0 . \n?x1 :exhibitions.exhibition_curator.exhibitions_curated ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "exhibitions"
    ],
    "level": "compositional",
    "s_expression": "(AND exhibitions.exhibition (JOIN (R exhibitions.exhibition_curator.exhibitions_curated) (JOIN exhibitions.exhibition_curator.exhibitions_curated m.064dsyn)))",
    "topic_entity": {
      "m.064dsyn": "Venice Biennale of Architecture Taiwan Pavillion 2006"
    }
  },
  {
    "qid": 3201478003000,
    "question": "frostbite engine was preceded by what video game engine?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gyg3sh",
        "entity_name": "Frostbite 2"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gyg3s6",
        "entity_name": "Frostbite 1.5"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_engine",
          "class": "cvg.computer_game_engine",
          "friendly_name": "Video Game Engine",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_game_engine",
          "class": "cvg.computer_game_engine",
          "friendly_name": "Video Game Engine",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0gyg3rg",
          "class": "cvg.computer_game_engine_family",
          "friendly_name": "frostbite engine",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.computer_game_engine.predecessor_engine",
          "friendly_name": "Predecessor Engine"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "cvg.computer_game_engine_family.engines_in_this_family",
          "friendly_name": "Engines in This Family"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_engine . \n?x1 :type.object.type :cvg.computer_game_engine . \nVALUES ?x2 { :m.0gyg3rg } \n?x0 :cvg.computer_game_engine.predecessor_engine ?x1 . \n?x2 :cvg.computer_game_engine_family.engines_in_this_family ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_engine (JOIN cvg.computer_game_engine.predecessor_engine (JOIN (R cvg.computer_game_engine_family.engines_in_this_family) m.0gyg3rg)))",
    "topic_entity": {
      "m.0gyg3rg": "Frostbite"
    }
  },
  {
    "qid": 3205006003000,
    "question": "what's the unit of energy of the measurement system whose heat capacity unit is joule per kelvin?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.1224btsg",
        "entity_name": "Kilojoule"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04570",
        "entity_name": "Joule"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.energy_unit",
          "class": "measurement_unit.energy_unit",
          "friendly_name": "Unit of Energy",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj4xx",
          "class": "measurement_unit.heat_capacity_unit",
          "friendly_name": "Joule per kelvin",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.energy_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.heat_capacity_units",
          "friendly_name": "Heat Capacity Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.energy_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj4xx } \n?x0 :measurement_unit.energy_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.heat_capacity_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.energy_unit (JOIN measurement_unit.energy_unit.measurement_system (JOIN measurement_unit.measurement_system.heat_capacity_units m.02sj4xx)))",
    "topic_entity": {
      "m.02sj4xx": "Joule per kelvin"
    }
  },
  {
    "qid": 4300898005000,
    "question": "the core text of christanity that is honored by sealing practitioners is called what?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.015j7",
        "entity_name": "The Bible"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "religion.religious_text",
          "class": "religion.religious_text",
          "friendly_name": "Religious Text",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "entity",
          "id": "m.01lp8",
          "class": "religion.religion",
          "friendly_name": "christanity",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "religion.religion",
          "class": "religion.religion",
          "friendly_name": "Religion",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.021skj",
          "class": "religion.religious_practice",
          "friendly_name": "Sealing",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "religion.religion.texts",
          "friendly_name": "Texts"
        },
        {
          "start": 2,
          "end": 0,
          "relation": "religion.religion.texts",
          "friendly_name": "Texts"
        },
        {
          "start": 2,
          "end": 3,
          "relation": "religion.religion.practices",
          "friendly_name": "Practices"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.religious_text . \nVALUES ?x1 { :m.01lp8 } \n?x2 :type.object.type :religion.religion . \nVALUES ?x3 { :m.021skj } \n?x1 :religion.religion.texts ?x0 . \n?x2 :religion.religion.texts ?x0 . \n?x2 :religion.religion.practices ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "religion"
    ],
    "level": "compositional",
    "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.01lp8) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.021skj))))",
    "topic_entity": {
      "m.01lp8": "Christianity",
      "m.021skj": "Sealing"
    }
  },
  {
    "qid": 3201934002000,
    "question": "what observatory has a telescope platform of terrestrial?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lvng",
        "entity_name": "Leiden University"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03y4zr",
        "entity_name": "Paranal Observatory"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "astronomy.astronomical_observatory",
          "class": "astronomy.astronomical_observatory",
          "friendly_name": "Astronomical Observatory",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "astronomy.telescope",
          "class": "astronomy.telescope",
          "friendly_name": "Telescope",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.09tr1rk",
          "class": "astronomy.telescope_platform",
          "friendly_name": "Terrestrial",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "astronomy.astronomical_observatory.telescope_s",
          "friendly_name": "Telescope(s)"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "astronomy.telescope.operational_platform",
          "friendly_name": "Operational platform"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.astronomical_observatory . \n?x1 :type.object.type :astronomy.telescope . \nVALUES ?x2 { :m.09tr1rk } \n?x0 :astronomy.astronomical_observatory.telescope_s ?x1 . \n?x1 :astronomy.telescope.operational_platform ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "astronomy"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND astronomy.astronomical_observatory (JOIN astronomy.astronomical_observatory.telescope_s (JOIN astronomy.telescope.operational_platform m.09tr1rk)))",
    "topic_entity": {
      "m.09tr1rk": "Terrestrial"
    }
  },
  {
    "qid": 3206529001000,
    "question": "what style of wine is produced by domaine ramonet?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.07yf1_z",
        "entity_name": "White Burgundy"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "food.wine_style",
          "class": "food.wine_style",
          "friendly_name": "Wine style",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "wine.wine",
          "class": "wine.wine",
          "friendly_name": "Wine",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03wz5rd",
          "class": "wine.wine_producer",
          "friendly_name": "Domaine Ramonet",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "food.wine_style.wines",
          "friendly_name": "Wines"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "wine.wine.wine_producer",
          "friendly_name": "Wine Producer"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :food.wine_style . \n?x1 :type.object.type :wine.wine . \nVALUES ?x2 { :m.03wz5rd } \n?x0 :food.wine_style.wines ?x1 . \n?x1 :wine.wine.wine_producer ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "food",
      "wine"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND food.wine_style (JOIN food.wine_style.wines (JOIN wine.wine.wine_producer m.03wz5rd)))",
    "topic_entity": {
      "m.03wz5rd": "Domaine Ramonet"
    }
  },
  {
    "qid": 3201324005000,
    "question": "what is the name of the locomotive that is owned by southern pacific railroad",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gywp_4",
        "entity_name": "Southern Pacific 2579"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "rail.locomotive",
          "class": "rail.locomotive",
          "friendly_name": "Locomotive",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "rail.locomotive_ownership",
          "class": "rail.locomotive_ownership",
          "friendly_name": "Locomotive ownership",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.022fbk",
          "class": "rail.locomotive_owner",
          "friendly_name": "southern pacific railroad",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "rail.locomotive_ownership.locomotive",
          "friendly_name": "Locomotive"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "rail.locomotive_ownership.owner",
          "friendly_name": "Owner"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :rail.locomotive . \n?x1 :type.object.type :rail.locomotive_ownership . \nVALUES ?x2 { :m.022fbk } \n?x1 :rail.locomotive_ownership.locomotive ?x0 . \n?x1 :rail.locomotive_ownership.owner ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "rail"
    ],
    "level": "zero-shot",
    "s_expression": "(AND rail.locomotive (JOIN (R rail.locomotive_ownership.locomotive) (JOIN rail.locomotive_ownership.owner m.022fbk)))",
    "topic_entity": {
      "m.022fbk": "Southern Pacific Transportation Company"
    }
  },
  {
    "qid": 3205368023000,
    "question": "what kind unit of length is associated with a measurement system whose mass units include catty?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.025sl9b",
        "entity_name": "Cun"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.055vq1",
        "entity_name": "Li"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.distance_unit",
          "class": "measurement_unit.distance_unit",
          "friendly_name": "Unit of Length",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.075xs_",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Catty",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.distance_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.weight_units",
          "friendly_name": "Mass Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.distance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.075xs_ } \n?x0 :measurement_unit.distance_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.weight_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.distance_unit (JOIN measurement_unit.distance_unit.measurement_system (JOIN measurement_unit.measurement_system.weight_units m.075xs_)))",
    "topic_entity": {
      "m.075xs_": "Catty"
    }
  },
  {
    "qid": 3203002001000,
    "question": "which subjects has jose emmanuel granados directed music videos in?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01vq3",
        "entity_name": "Christmas"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "music.music_video_subject",
          "class": "music.music_video_subject",
          "friendly_name": "Music video subject",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "music.music_video",
          "class": "music.music_video",
          "friendly_name": "Music video",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0lfl3yn",
          "class": "music.music_video_director",
          "friendly_name": "Jose Emmanuel Granados",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "music.music_video.music_video_subject",
          "friendly_name": "Music video subject"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "music.music_video_director.music_videos_directed",
          "friendly_name": "Music videos directed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.music_video_subject . \n?x1 :type.object.type :music.music_video . \nVALUES ?x2 { :m.0lfl3yn } \n?x1 :music.music_video.music_video_subject ?x0 . \n?x2 :music.music_video_director.music_videos_directed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "music"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND music.music_video_subject (JOIN (R music.music_video.music_video_subject) (JOIN (R music.music_video_director.music_videos_directed) m.0lfl3yn)))",
    "topic_entity": {
      "m.0lfl3yn": "Jose Emmanuel Granados"
    }
  },
  {
    "qid": 3204471013000,
    "question": "what live album shares the album content type of beauty and the beast?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01fkfkh",
        "entity_name": "Music as a Weapon II"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01fsyhl",
        "entity_name": "Freddie Mercury Tribute"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09kggsy",
        "entity_name": "Selena Live 2010"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "music.live_album",
          "class": "music.live_album",
          "friendly_name": "Live Album",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "music.album_content_type",
          "class": "music.album_content_type",
          "friendly_name": "Album content type",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02q9sqs",
          "class": "theater.musical_soundtrack",
          "friendly_name": "Beauty and the Beast",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "music.album.album_content_type",
          "friendly_name": "Album content type"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "music.album.album_content_type",
          "friendly_name": "Album content type"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.live_album . \n?x1 :type.object.type :music.album_content_type . \nVALUES ?x2 { :m.02q9sqs } \n?x0 :music.album.album_content_type ?x1 . \n?x2 :music.album.album_content_type ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "music"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND music.live_album (JOIN music.album.album_content_type (JOIN (R music.album.album_content_type) m.02q9sqs)))",
    "topic_entity": {
      "m.02q9sqs": "Beauty and the Beast"
    }
  },
  {
    "qid": 3205441009000,
    "question": "greg beatty contributed to a book edition from what publisher?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.05qjymb",
        "entity_name": "Roc"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "book.publishing_company",
          "class": "book.publishing_company",
          "friendly_name": "Publisher",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "book.book_edition",
          "class": "book.book_edition",
          "friendly_name": "Book Edition",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.027vt9s",
          "class": "book.author",
          "friendly_name": "Greg Beatty",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "book.publishing_company.books_published",
          "friendly_name": "Book editions published"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "book.author.contributing_author_to",
          "friendly_name": "Contributing author to"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.publishing_company . \n?x1 :type.object.type :book.book_edition . \nVALUES ?x2 { :m.027vt9s } \n?x0 :book.publishing_company.books_published ?x1 . \n?x2 :book.author.contributing_author_to ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "book"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND book.publishing_company (JOIN book.publishing_company.books_published (JOIN (R book.author.contributing_author_to) m.027vt9s)))",
    "topic_entity": {
      "m.027vt9s": "Greg Beatty"
    }
  },
  {
    "qid": 3202364003000,
    "question": "what is the tv season with the same rating as rock n' roll stories, season 1?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.012hs0b_",
        "entity_name": "Rock N' Roll Stories, Season 2"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "tv.tv_series_season",
          "class": "tv.tv_series_season",
          "friendly_name": "TV Season",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "tv.tv_rating",
          "class": "tv.tv_rating",
          "friendly_name": "TV Rating",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.012hs05r",
          "class": "tv.tv_series_season",
          "friendly_name": "Rock N' Roll Stories, Season 1",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "tv.tv_series_season.rating",
          "friendly_name": "Rating"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "tv.tv_series_season.rating",
          "friendly_name": "Rating"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :tv.tv_series_season . \n?x1 :type.object.type :tv.tv_rating . \nVALUES ?x2 { :m.012hs05r } \n?x0 :tv.tv_series_season.rating ?x1 . \n?x2 :tv.tv_series_season.rating ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "tv"
    ],
    "level": "compositional",
    "s_expression": "(AND tv.tv_series_season (JOIN tv.tv_series_season.rating (JOIN (R tv.tv_series_season.rating) m.012hs05r)))",
    "topic_entity": {
      "m.012hs05r": "Rock N' Roll Stories, Season 1"
    }
  },
  {
    "qid": 3205169005000,
    "question": "what unit of specific heat capacity share its measurement system with the unit of pressure pounds per square inch?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h13rn6",
        "entity_name": "Btu per pound-mass per degree F"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.specific_heat_capacity_unit",
          "class": "measurement_unit.specific_heat_capacity_unit",
          "friendly_name": "Unit of Specific Heat Capacity",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0661nyk",
          "class": "measurement_unit.pressure_unit",
          "friendly_name": "Pounds per square inch",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.specific_heat_capacity_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.pressure_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.specific_heat_capacity_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0661nyk } \n?x0 :measurement_unit.specific_heat_capacity_unit.measurement_system ?x1 . \n?x2 :measurement_unit.pressure_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.specific_heat_capacity_unit (JOIN measurement_unit.specific_heat_capacity_unit.measurement_system (JOIN (R measurement_unit.pressure_unit.measurement_system) m.0661nyk)))",
    "topic_entity": {
      "m.0661nyk": "Pounds per square inch"
    }
  },
  {
    "qid": 3202187001000,
    "question": "what galatic shape is the pinwheel galaxy classified as?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01dgzv",
        "entity_name": "Spiral galaxy"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "astronomy.galactic_shape",
          "class": "astronomy.galactic_shape",
          "friendly_name": "Galactic shape",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "astronomy.galaxy_classification_code",
          "class": "astronomy.galaxy_classification_code",
          "friendly_name": "Galaxy classification code",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01v8jm",
          "class": "astronomy.galaxy",
          "friendly_name": "Pinwheel Galaxy",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "astronomy.galactic_shape.galaxies_of_this_shape",
          "friendly_name": "Galaxies of this shape"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "astronomy.galaxy.galaxy_classification_hubble",
          "friendly_name": "Classification"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.galactic_shape . \n?x1 :type.object.type :astronomy.galaxy_classification_code . \nVALUES ?x2 { :m.01v8jm } \n?x0 :astronomy.galactic_shape.galaxies_of_this_shape ?x1 . \n?x2 :astronomy.galaxy.galaxy_classification_hubble ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "astronomy"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND astronomy.galactic_shape (JOIN astronomy.galactic_shape.galaxies_of_this_shape (JOIN (R astronomy.galaxy.galaxy_classification_hubble) m.01v8jm)))",
    "topic_entity": {
      "m.01v8jm": "Pinwheel Galaxy"
    }
  },
  {
    "qid": 4301141000000,
    "question": "in what countries is the version developed by razorback developments and distributed through physical media released?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.075g54v",
        "entity_name": "Wii/DS NA"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_region",
          "class": "cvg.computer_game_region",
          "friendly_name": "Video Game Region",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0663y78",
          "class": "cvg.computer_game_distribution_system",
          "friendly_name": "Physical media",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02hkz21",
          "class": "cvg.cvg_developer",
          "friendly_name": "Razorback Developments",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.game_version.regions",
          "friendly_name": "Regions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.game_version.distributed_through",
          "friendly_name": "Distributed through"
        },
        {
          "start": 3,
          "end": 1,
          "relation": "cvg.cvg_developer.game_versions_developed",
          "friendly_name": "Game Versions Developed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_region . \n?x1 :type.object.type :cvg.game_version . \nVALUES ?x2 { :m.0663y78 } \nVALUES ?x3 { :m.02hkz21 } \n?x1 :cvg.game_version.regions ?x0 . \n?x1 :cvg.game_version.distributed_through ?x2 . \n?x3 :cvg.cvg_developer.game_versions_developed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.02hkz21))))",
    "topic_entity": {
      "m.0663y78": "Physical media",
      "m.02hkz21": "Razorback Developments"
    }
  },
  {
    "qid": 4301766013000,
    "question": "the creators of wma's most recently released browser was called what?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04b32v",
        "entity_name": "Internet Explorer for Mac"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.web_browser",
          "class": "computer.web_browser",
          "friendly_name": "Web browser",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.software_developer",
          "class": "computer.software_developer",
          "friendly_name": "Software Developer",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.086t0",
          "class": "computer.file_format",
          "friendly_name": "wma",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.datetime",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.software_developer.software",
          "friendly_name": "Software"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "computer.file_format.format_creator",
          "friendly_name": "Format Creator"
        },
        {
          "start": 0,
          "end": 3,
          "relation": "computer.software.first_released",
          "friendly_name": "First Released"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.web_browser . \n?x1 :type.object.type :computer.software_developer . \nVALUES ?x2 { :m.086t0 } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :computer.web_browser . \n?y1 :type.object.type :computer.software_developer . \nVALUES ?y2 { :m.086t0 } \n?y1 :computer.software_developer.software ?y0 . \n?y2 :computer.file_format.format_creator ?y1 . \n?y0 :computer.software.first_released ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :computer.software_developer.software ?x0 . \n?x2 :computer.file_format.format_creator ?x1 . \n?x0 :computer.software.first_released ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "compositional",
    "s_expression": "(ARGMAX (AND computer.web_browser (JOIN (R computer.software_developer.software) (JOIN (R computer.file_format.format_creator) m.086t0))) computer.software.first_released)",
    "topic_entity": {
      "m.086t0": "Windows Media Audio"
    }
  },
  {
    "qid": 3200528005000,
    "question": "which geographical scope belongs to the conference series which is the subject of qa and testing on embedded systems?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0htqt",
        "entity_name": "Bilbao"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "base.events.geographical_scope",
          "class": "base.events.geographical_scope",
          "friendly_name": "Geographical scope",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.062sw2n",
          "class": "conferences.conference_subject",
          "friendly_name": "QA and Testing on Embedded Systems",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "conferences.conference_series.geographical_scope",
          "friendly_name": "Geographical scope"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "conferences.conference_series.subject",
          "friendly_name": "Subject"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.events.geographical_scope . \n?x1 :type.object.type :conferences.conference_series . \nVALUES ?x2 { :m.062sw2n } \n?x1 :conferences.conference_series.geographical_scope ?x0 . \n?x1 :conferences.conference_series.subject ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND base.events.geographical_scope (JOIN (R conferences.conference_series.geographical_scope) (JOIN conferences.conference_series.subject m.062sw2n)))",
    "topic_entity": {
      "m.062sw2n": "QA and Testing on Embedded Systems"
    }
  },
  {
    "qid": 3203735010000,
    "question": "what is the name of the characters that are on the stepsons?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bxw253",
        "entity_name": "Cyrus, shape-changer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bxj80p",
        "entity_name": "Tempus"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg08q",
        "entity_name": "Randal"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg09y",
        "entity_name": "Agis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg0gg",
        "entity_name": "Gayle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c0mtfn",
        "entity_name": "Simon of Thebes"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg0h8",
        "entity_name": "Chlidon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg042",
        "entity_name": "Charon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c0bp91",
        "entity_name": "Perses, Sacred Bander"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg02s",
        "entity_name": "Critias"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg0fg",
        "entity_name": "Sync"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c2byws",
        "entity_name": "Janni"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bxw5yj",
        "entity_name": "Shamshi"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c1hc_x",
        "entity_name": "Charon, Theban Sacred Bander"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c02ppq",
        "entity_name": "Sciron"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cms8p2",
        "entity_name": "Lysis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpbz4j",
        "entity_name": "Cassander"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg05_",
        "entity_name": "Niko"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dgb8yd",
        "entity_name": "Menander"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bxttn0",
        "entity_name": "Jihan, Froth Daughter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c0b19n",
        "entity_name": "Cime"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cms8kp",
        "entity_name": "Kouras"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg093",
        "entity_name": "Arton"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0by5hyq",
        "entity_name": "Abarsis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cms8mt",
        "entity_name": "Gorgias"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg363",
        "entity_name": "Dolon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c02ppy",
        "entity_name": "Simon of Athens"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg080",
        "entity_name": "Perses"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpbzt7",
        "entity_name": "Iatros"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cms8rt",
        "entity_name": "Deon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg0bb",
        "entity_name": "Archias"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg0cq",
        "entity_name": "Straton"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg04h",
        "entity_name": "Ari"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cms9py",
        "entity_name": "Haram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bxw6mb",
        "entity_name": "Kama, 3rd Commando"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg0f2",
        "entity_name": "Kama"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b_kysq",
        "entity_name": "Simias"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b_kyts",
        "entity_name": "Ari, Sacred Bander"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gtkv_n",
        "entity_name": "Heraclitus"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ccbpkd",
        "entity_name": "Tros Horse"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c0bpb_",
        "entity_name": "Shamshi, Stepson"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c9060w",
        "entity_name": "Tempus's foundation stallion"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cpg0c9",
        "entity_name": "Simon of Thebes"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "fictional_universe.fictional_character",
          "class": "fictional_universe.fictional_character",
          "friendly_name": "Fictional Character",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "fictional_universe.fictional_organization",
          "class": "fictional_universe.fictional_organization",
          "friendly_name": "Organization in fiction",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0c0kzcd",
          "class": "fictional_universe.fictional_organization",
          "friendly_name": "Stepsons",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "fictional_universe.fictional_character.organizations",
          "friendly_name": "Belongs to organizations"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "fictional_universe.fictional_organization.sub_organization_in_fiction",
          "friendly_name": "Sub-organization in fiction"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.fictional_character . \n?x1 :type.object.type :fictional_universe.fictional_organization . \nVALUES ?x2 { :m.0c0kzcd } \n?x0 :fictional_universe.fictional_character.organizations ?x1 . \n?x1 :fictional_universe.fictional_organization.sub_organization_in_fiction ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "fictional_universe"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.organizations (JOIN fictional_universe.fictional_organization.sub_organization_in_fiction m.0c0kzcd)))",
    "topic_entity": {
      "m.0c0kzcd": "Stepsons"
    }
  },
  {
    "qid": 4301746004000,
    "question": "what is the name of the version released in north american continent that supports microsoft xbox 360?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cmynjz",
        "entity_name": "Sonic & Sega All-Stars Racing with Banjo-Kazooie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cn1dzn",
        "entity_name": "Sonic Free Riders"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "entity",
          "id": "m.059g4",
          "class": "cvg.computer_game_region",
          "friendly_name": "north american continent",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "computer.computer_peripheral",
          "class": "computer.computer_peripheral",
          "friendly_name": "Computer Peripheral",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02plp2",
          "class": "business.brand",
          "friendly_name": "microsoft xbox 360",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.computer_game_region.versions_released_in_this_region",
          "friendly_name": "Versions released in this region"
        },
        {
          "start": 2,
          "end": 0,
          "relation": "computer.computer_peripheral.supporting_game_versions",
          "friendly_name": "Supporting game versions"
        },
        {
          "start": 3,
          "end": 2,
          "relation": "business.brand.products",
          "friendly_name": "Products"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :m.059g4 } \n?x2 :type.object.type :computer.computer_peripheral . \nVALUES ?x3 { :m.02plp2 } \n?x1 :cvg.computer_game_region.versions_released_in_this_region ?x0 . \n?x2 :computer.computer_peripheral.supporting_game_versions ?x0 . \n?x3 :business.brand.products ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "business",
      "cvg",
      "computer"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.059g4) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
    "topic_entity": {
      "m.059g4": "North America",
      "m.02plp2": "Xbox 360"
    }
  },
  {
    "qid": 3204498012000,
    "question": "nudity is the description of which video game rating?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8b",
        "entity_name": "Everyone"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl98",
        "entity_name": "Mature"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8x",
        "entity_name": "Everyone 10+"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl9n",
        "entity_name": "Rating Pending"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl92",
        "entity_name": "Adults Only"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8q",
        "entity_name": "Teen"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl9g",
        "entity_name": "Kids to Adults"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8j",
        "entity_name": "Early Childhood"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_rating",
          "class": "cvg.computer_game_rating",
          "friendly_name": "Video Game Rating",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_game_rating_system",
          "class": "cvg.computer_game_rating_system",
          "friendly_name": "Video Game Rating System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.042zlst",
          "class": "cvg.computer_game_content_descriptor",
          "friendly_name": "Nudity",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.computer_game_rating.rating_system",
          "friendly_name": "Rating system"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_game_rating_system.content_descriptors",
          "friendly_name": "Content descriptors"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_rating . \n?x1 :type.object.type :cvg.computer_game_rating_system . \nVALUES ?x2 { :m.042zlst } \n?x0 :cvg.computer_game_rating.rating_system ?x1 . \n?x1 :cvg.computer_game_rating_system.content_descriptors ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_rating (JOIN cvg.computer_game_rating.rating_system (JOIN cvg.computer_game_rating_system.content_descriptors m.042zlst)))",
    "topic_entity": {
      "m.042zlst": "Nudity"
    }
  },
  {
    "qid": 3202105002000,
    "question": "what are the names of species in the zelda universe?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0nb28bk",
        "entity_name": "Zora"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03r8y7",
        "entity_name": "ReDead"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.052m42",
        "entity_name": "Octorok"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "fictional_universe.character_species",
          "class": "fictional_universe.character_species",
          "friendly_name": "Character Species",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "fictional_universe.fictional_creature",
          "class": "fictional_universe.fictional_creature",
          "friendly_name": "Fictional Creature",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.07kt2",
          "class": "fictional_universe.fictional_universe",
          "friendly_name": "zelda universe",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "fictional_universe.fictional_creature.fictional_creature_species",
          "friendly_name": "Fictional Creature Species"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "fictional_universe.fictional_creature.featured_in_fictional_universe",
          "friendly_name": "Featured in Fictional Universe"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.character_species . \n?x1 :type.object.type :fictional_universe.fictional_creature . \nVALUES ?x2 { :m.07kt2 } \n?x1 :fictional_universe.fictional_creature.fictional_creature_species ?x0 . \n?x1 :fictional_universe.fictional_creature.featured_in_fictional_universe ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "fictional_universe"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND fictional_universe.character_species (JOIN (R fictional_universe.fictional_creature.fictional_creature_species) (JOIN fictional_universe.fictional_creature.featured_in_fictional_universe m.07kt2)))",
    "topic_entity": {
      "m.07kt2": "Universe of The Legend of Zelda"
    }
  },
  {
    "qid": 3204115005000,
    "question": "what unit of mass is associated with the measurement system of picofarad?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.07ny7",
        "entity_name": "Tonne"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.047dr",
        "entity_name": "Kilogram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1225dlgf",
        "entity_name": "Milligram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01x32j1",
        "entity_name": "Gram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02p14f_",
        "entity_name": "Microgram"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.mass_unit",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Unit of Mass",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0l4l0",
          "class": "measurement_unit.capacitance_unit",
          "friendly_name": "picofarad",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.mass_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.capacitance_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.mass_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0l4l0 } \n?x0 :measurement_unit.mass_unit.measurement_system ?x1 . \n?x2 :measurement_unit.capacitance_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.mass_unit (JOIN measurement_unit.mass_unit.measurement_system (JOIN (R measurement_unit.capacitance_unit.measurement_system) m.0l4l0)))",
    "topic_entity": {
      "m.0l4l0": "Farad"
    }
  },
  {
    "qid": 3203178013000,
    "question": "can you name the different player positions for the football team of orlando rage?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.05fyy5",
        "entity_name": "End"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02g_6j",
        "entity_name": "Linebacker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02g_6x",
        "entity_name": "Wide receiver"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02qpbqj",
        "entity_name": "Fullback"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06b1q",
        "entity_name": "Quarterback"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.029x6n",
        "entity_name": "Defensive lineman"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04nfpk",
        "entity_name": "Defensive end"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1mj",
        "entity_name": "Middle linebacker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08ns5s",
        "entity_name": "Long snapper"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b13yt",
        "entity_name": "Dimeback"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1mx",
        "entity_name": "Outside linebacker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0wgtxc8",
        "entity_name": "Offensive tackle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01r3hr",
        "entity_name": "Running back"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02g_7z",
        "entity_name": "Tight end"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.121g7ncl",
        "entity_name": "Offensive lineman"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05b3ts",
        "entity_name": "Safety"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05zm34",
        "entity_name": "Punter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.073nm7",
        "entity_name": "Center"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01b8cw",
        "entity_name": "Tackle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0q5dv",
        "entity_name": "Defensive tackle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01_9c1",
        "entity_name": "Defensive back"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02vkdwz",
        "entity_name": "Halfback"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.047g8h",
        "entity_name": "Placekicker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bgv4g",
        "entity_name": "Punt returner"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bgv8y",
        "entity_name": "Kickoff returner"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08k7jn",
        "entity_name": "Guard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01snvb",
        "entity_name": "Lineman"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1p8",
        "entity_name": "Strong safety"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.023wyl",
        "entity_name": "Cornerback"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03h42s4",
        "entity_name": "Return specialist"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05xd0c",
        "entity_name": "Nose guard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0565yw",
        "entity_name": "Nose tackle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b1441",
        "entity_name": "Nickelback"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1l3",
        "entity_name": "Free safety"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026dxxj",
        "entity_name": "Quarterback (Defensive)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03qmmf3",
        "entity_name": "Kickoff specialist"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1l7",
        "entity_name": "Left cornerback"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1lc",
        "entity_name": "Left defensive end"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1lh",
        "entity_name": "Left defensive tackle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1ln",
        "entity_name": "Left guard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1ls",
        "entity_name": "Left inside linebacker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1lx",
        "entity_name": "Left linebacker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1m0",
        "entity_name": "Left outside linebacker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1m4",
        "entity_name": "Left safety"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1m8",
        "entity_name": "Left tackle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1ms",
        "entity_name": "Offensive right tackle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1n0",
        "entity_name": "Right cornerback"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1n4",
        "entity_name": "Right defensive back"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1n8",
        "entity_name": "Right defensive end"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1nd",
        "entity_name": "Right defensive tackle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1nj",
        "entity_name": "Right guard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1nn",
        "entity_name": "Right inside linebacker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1ns",
        "entity_name": "Right linebacker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1nx",
        "entity_name": "Right outside linebacker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1p0",
        "entity_name": "Right safety"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1p4",
        "entity_name": "Right tackle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1pd",
        "entity_name": "Split end"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06v_1pn",
        "entity_name": "Flanker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.084b87",
        "entity_name": "H-back"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08ns1j",
        "entity_name": "Holder"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08pn78",
        "entity_name": "Gunner"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0_fmgpp",
        "entity_name": "Jammer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cy4b4",
        "entity_name": "Middle guard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04ggfnf",
        "entity_name": "Slotback"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "sports.sports_position",
          "class": "sports.sports_position",
          "friendly_name": "Sports position",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "sports.sport",
          "class": "sports.sport",
          "friendly_name": "Sport",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01kk60",
          "class": "american_football.football_team",
          "friendly_name": "Orlando Rage",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "sports.sports_position.sport",
          "friendly_name": "Sport"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "sports.sports_team.sport",
          "friendly_name": "Sport"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.sports_position . \n?x1 :type.object.type :sports.sport . \nVALUES ?x2 { :m.01kk60 } \n?x0 :sports.sports_position.sport ?x1 . \n?x2 :sports.sports_team.sport ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "sports"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND sports.sports_position (JOIN sports.sports_position.sport (JOIN (R sports.sports_team.sport) m.01kk60)))",
    "topic_entity": {
      "m.01kk60": "Orlando Rage"
    }
  },
  {
    "qid": 3200253005000,
    "question": "which adaptation adapted another adaptation which stems from not cool?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0127vgjt",
        "entity_name": "hollidaysburg"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "media_common.adaptation",
          "class": "media_common.adaptation",
          "friendly_name": "Adaptation",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "media_common.adapted_work",
          "class": "media_common.adapted_work",
          "friendly_name": "Adapted Work",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0114qwty",
          "class": "media_common.adaptation",
          "friendly_name": "Not Cool",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "media_common.adaptation.adapted_from",
          "friendly_name": "Adapted From"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "media_common.adapted_work.adaptations",
          "friendly_name": "Adaptations"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :media_common.adaptation . \n?x1 :type.object.type :media_common.adapted_work . \nVALUES ?x2 { :m.0114qwty } \n?x0 :media_common.adaptation.adapted_from ?x1 . \n?x1 :media_common.adapted_work.adaptations ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "media_common"
    ],
    "level": "compositional",
    "s_expression": "(AND media_common.adaptation (JOIN media_common.adaptation.adapted_from (JOIN media_common.adapted_work.adaptations m.0114qwty)))",
    "topic_entity": {
      "m.0114qwty": "Not Cool"
    }
  },
  {
    "qid": 3203410003000,
    "question": "what ship designer designed a ship that is designed by joshua humphreys?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.049vm6",
        "entity_name": "William Doughty"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026ym07",
        "entity_name": "Josiah Fox"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "boats.ship_designer",
          "class": "boats.ship_designer",
          "friendly_name": "Ship Designer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "boats.ship",
          "class": "boats.ship",
          "friendly_name": "Ship",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.043s9f",
          "class": "boats.ship_designer",
          "friendly_name": "Joshua Humphreys",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "boats.ship_designer.boats_designed",
          "friendly_name": "Boats Designed"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "boats.ship.designer",
          "friendly_name": "Designer"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :boats.ship_designer . \n?x1 :type.object.type :boats.ship . \nVALUES ?x2 { :m.043s9f } \n?x0 :boats.ship_designer.boats_designed ?x1 . \n?x1 :boats.ship.designer ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "boats"
    ],
    "level": "compositional",
    "s_expression": "(AND boats.ship_designer (JOIN boats.ship_designer.boats_designed (JOIN boats.ship.designer m.043s9f)))",
    "topic_entity": {
      "m.043s9f": "Joshua Humphreys"
    }
  },
  {
    "qid": 3204153008000,
    "question": "what type of activity would be associated with collecting a mr. potato head?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fpnhpz",
        "entity_name": "Toy collecting"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "interests.collection_activity",
          "class": "interests.collection_activity",
          "friendly_name": "Collection activity",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "interests.collection_category",
          "class": "interests.collection_category",
          "friendly_name": "Collection category",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01l5bh",
          "class": "interests.collection_category",
          "friendly_name": "Mr. Potato Head",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "interests.collection_activity.type_of_thing_collected",
          "friendly_name": "Type of thing collected"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "interests.collection_category.parent_category",
          "friendly_name": "Parent category"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :interests.collection_activity . \n?x1 :type.object.type :interests.collection_category . \nVALUES ?x2 { :m.01l5bh } \n?x0 :interests.collection_activity.type_of_thing_collected ?x1 . \n?x2 :interests.collection_category.parent_category ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "interests"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND interests.collection_activity (JOIN interests.collection_activity.type_of_thing_collected (JOIN (R interests.collection_category.parent_category) m.01l5bh)))",
    "topic_entity": {
      "m.01l5bh": "Mr. Potato Head"
    }
  },
  {
    "qid": 3203329005000,
    "question": "what is the unit of charge in the measurement system that uses lumens for luminous flux units?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ctyj",
        "entity_name": "Coulomb"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.charge_unit",
          "class": "measurement_unit.charge_unit",
          "friendly_name": "Unit of Charge",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04ckf7",
          "class": "measurement_unit.luminous_flux_unit",
          "friendly_name": "lumens",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.charge_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.luminous_flux_units",
          "friendly_name": "Luminous Flux Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.charge_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.04ckf7 } \n?x0 :measurement_unit.charge_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.luminous_flux_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.charge_unit (JOIN measurement_unit.charge_unit.measurement_system (JOIN measurement_unit.measurement_system.luminous_flux_units m.04ckf7)))",
    "topic_entity": {
      "m.04ckf7": "Lumen"
    }
  },
  {
    "qid": 3204762001000,
    "question": "what type of job does the character with gun shoot wound have?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.011__xll",
        "entity_name": "Consulting Detective"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "fictional_universe.character_occupation",
          "class": "fictional_universe.character_occupation",
          "friendly_name": "Character Occupation",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "theater.theater_character",
          "class": "theater.theater_character",
          "friendly_name": "Theater Character",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.063dqgy",
          "class": "fictional_universe.medical_condition_in_fiction",
          "friendly_name": "Gun Shoot Wound",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "fictional_universe.fictional_character.occupation",
          "friendly_name": "Occupation"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "fictional_universe.medical_condition_in_fiction.characters_with_this_condition",
          "friendly_name": "Characters with this condition"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.character_occupation . \n?x1 :type.object.type :theater.theater_character . \nVALUES ?x2 { :m.063dqgy } \n?x1 :fictional_universe.fictional_character.occupation ?x0 . \n?x2 :fictional_universe.medical_condition_in_fiction.characters_with_this_condition ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "fictional_universe"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND fictional_universe.character_occupation (JOIN (R fictional_universe.fictional_character.occupation) (JOIN (R fictional_universe.medical_condition_in_fiction.characters_with_this_condition) m.063dqgy)))",
    "topic_entity": {
      "m.063dqgy": "Gun Shoot Wound"
    }
  },
  {
    "qid": 3205675002000,
    "question": "the measurement system that has gauss unit has what unit of luminance?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04csv72",
        "entity_name": "Stilb"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.luminance_unit",
          "class": "measurement_unit.luminance_unit",
          "friendly_name": "Unit of Luminance",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.038jg",
          "class": "measurement_unit.magnetic_flux_density_unit",
          "friendly_name": "Gauss",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.luminance_units",
          "friendly_name": "Luminance Units"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.magnetic_flux_density_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.luminance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.038jg } \n?x1 :measurement_unit.measurement_system.luminance_units ?x0 . \n?x2 :measurement_unit.magnetic_flux_density_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.luminance_unit (JOIN (R measurement_unit.measurement_system.luminance_units) (JOIN (R measurement_unit.magnetic_flux_density_unit.measurement_system) m.038jg)))",
    "topic_entity": {
      "m.038jg": "Gauss"
    }
  },
  {
    "qid": 3205368016000,
    "question": "which unit of length is affiliated with a measurement system whose mass units include cental?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vb3",
        "entity_name": "Mile"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01crvy",
        "entity_name": "Foot"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03th6",
        "entity_name": "Inch"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02mr9z",
        "entity_name": "Rod"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0355rq",
        "entity_name": "Chain"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05gwxt",
        "entity_name": "Link"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.087tz",
        "entity_name": "Yard"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.distance_unit",
          "class": "measurement_unit.distance_unit",
          "friendly_name": "Unit of Length",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02xh69r",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Cental",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.distance_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.weight_units",
          "friendly_name": "Mass Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.distance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02xh69r } \n?x0 :measurement_unit.distance_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.weight_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.distance_unit (JOIN measurement_unit.distance_unit.measurement_system (JOIN measurement_unit.measurement_system.weight_units m.02xh69r)))",
    "topic_entity": {
      "m.02xh69r": "Cental"
    }
  },
  {
    "qid": 3205234003000,
    "question": "what is the conference series that belongs to the same conference event as radisson muehlebach hotel?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.081qw",
        "entity_name": "Worldcon"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference",
          "class": "conferences.conference",
          "friendly_name": "Conference event",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0gyhpjv",
          "class": "conferences.conference_venue",
          "friendly_name": "Radisson Muehlebach Hotel",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "conferences.conference_series.conference",
          "friendly_name": "Conferences"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "conferences.conference_venue.conferences",
          "friendly_name": "Conferences"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_series . \n?x1 :type.object.type :conferences.conference . \nVALUES ?x2 { :m.0gyhpjv } \n?x0 :conferences.conference_series.conference ?x1 . \n?x2 :conferences.conference_venue.conferences ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference_series (JOIN conferences.conference_series.conference (JOIN (R conferences.conference_venue.conferences) m.0gyhpjv)))",
    "topic_entity": {
      "m.0gyhpjv": "Radisson Muehlebach Hotel"
    }
  },
  {
    "qid": 4302232001000,
    "question": "what conference series is focused on the game developers' conference?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j6l6",
        "entity_name": "Electronic Entertainment Expo"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference",
          "class": "conferences.conference",
          "friendly_name": "Conference event",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "conferences.conference_subject",
          "class": "conferences.conference_subject",
          "friendly_name": "Conference subject",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02d9m9",
          "class": "conferences.conference_series",
          "friendly_name": "game developers' conference",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "conferences.conference_series.conference",
          "friendly_name": "Conferences"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "conferences.conference.focus",
          "friendly_name": "Focus"
        },
        {
          "start": 3,
          "end": 2,
          "relation": "conferences.conference_series.subject",
          "friendly_name": "Subject"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_series . \n?x1 :type.object.type :conferences.conference . \n?x2 :type.object.type :conferences.conference_subject . \nVALUES ?x3 { :m.02d9m9 } \n?x0 :conferences.conference_series.conference ?x1 . \n?x1 :conferences.conference.focus ?x2 . \n?x3 :conferences.conference_series.subject ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference_series (JOIN conferences.conference_series.conference (JOIN conferences.conference.focus (JOIN (R conferences.conference_series.subject) m.02d9m9))))",
    "topic_entity": {
      "m.02d9m9": "Game Developers Conference"
    }
  },
  {
    "qid": 4301069005000,
    "question": "rb2 added what song after 2008-05-01?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.048cbj",
        "entity_name": "More Than a Feeling"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04csrvd",
        "entity_name": "Hard to Handle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.010x7g2",
        "entity_name": "Gimme Three Steps"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lfg_q",
        "entity_name": "N.I.B."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bb4dch",
        "entity_name": "Blackened"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0y6lj4",
        "entity_name": "March of the Pigs"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04kdx3",
        "entity_name": "Paperback Writer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0q43m_",
        "entity_name": "Juke Box Hero"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02r0fml",
        "entity_name": "China Cat Sunflower"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0x4kw6",
        "entity_name": "The Hellion / Electric Eye"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n9251",
        "entity_name": "Rockaway Beach"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n5hd",
        "entity_name": "All the Small Things"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04rpmd",
        "entity_name": "Paranoid"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01b7v8x",
        "entity_name": "Action"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122y5frt",
        "entity_name": "Wonderwall"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.090kp1",
        "entity_name": "\"Heroes\""
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05fh61",
        "entity_name": "Buddy Holly"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0m1r77",
        "entity_name": "Pain and Pleasure"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0m1d6v",
        "entity_name": "Ever Fallen In Love (With Someone You Shouldn’t’ve)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0797q51",
        "entity_name": "Shockwave"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0np8sh",
        "entity_name": "Moonage Daydream"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0t2003",
        "entity_name": "My Iron Lung"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.010p6mc",
        "entity_name": "Little Sister"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lccwf",
        "entity_name": "Blinded By Fear"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h0h7h",
        "entity_name": "Brass in Pocket"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01cwb0d",
        "entity_name": "Ride the Lightning"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lncs_",
        "entity_name": "Live Forever"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lfk2f",
        "entity_name": "Fortunate Son"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0142135",
        "entity_name": "Move Along"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.014jj63",
        "entity_name": "Ten Speed (of God's Blood & Burial)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0187z4j",
        "entity_name": "Red Tandy"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01drs3m",
        "entity_name": "Attack"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01drs3v",
        "entity_name": "A Beautiful Lie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.025t7rk",
        "entity_name": "Sex Type Thing"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026p0xj",
        "entity_name": "Roam"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02760qj",
        "entity_name": "Can't Stand Losing You"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027hx6b",
        "entity_name": "Synchronicity II"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02pq819",
        "entity_name": "Joker & the Thief"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02r14hc",
        "entity_name": "3's & 7's"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03b_hdy",
        "entity_name": "crushcrushcrush"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03cj6hh",
        "entity_name": "Song With A Mission"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03nlw9g",
        "entity_name": "Peace of Mind"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.048cw1",
        "entity_name": "Roxanne"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04qbjgv",
        "entity_name": "Cat Scratch Fever"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05c98v2",
        "entity_name": "Saints of Los Angeles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.075vptj",
        "entity_name": "Beethoven's Cunt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.075zcnv",
        "entity_name": "Still Alive"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07n64g",
        "entity_name": "Don't Look Back in Anger"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.092h3b",
        "entity_name": "Complete Control"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09rs__",
        "entity_name": "Dirty Little Secret"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c5mq1",
        "entity_name": "Message in a Bottle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dl0qt",
        "entity_name": "Die, All Right!"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dxcmt",
        "entity_name": "You've Got Another Thing Comin'"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g75kfj",
        "entity_name": "Siva"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h61r1",
        "entity_name": "Calling Dr. Love"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0l1f7f",
        "entity_name": "Zero"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ldkcv",
        "entity_name": "We Care a Lot"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lftjc",
        "entity_name": "El Scorcho"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ljr08",
        "entity_name": "Sugar Magnolia"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lldjn",
        "entity_name": "I Need A Miracle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0llym2",
        "entity_name": "Devil's Child"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0m79qt",
        "entity_name": "The Perfect Drug"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0mgh_6",
        "entity_name": "(Take These) Chains"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pfv52",
        "entity_name": "Cherry Bomb"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0q_3ys",
        "entity_name": "Franklin's Tower"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0qn5_r",
        "entity_name": "Hitch a Ride"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0r41vt",
        "entity_name": "Bloodstone"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0r6nlx",
        "entity_name": "D.O.A."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0rv03c",
        "entity_name": "Super-Sprøde"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0vtnkk",
        "entity_name": "Screaming for Vengeance"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0yf_8b",
        "entity_name": "Simple Man"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01bmk_n",
        "entity_name": "Sweet Leaf"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04hh2h",
        "entity_name": "Can't Buy Me Love"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g27kd",
        "entity_name": "...And Justice for All"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0_9tk5",
        "entity_name": "I Fought the Law"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03hkyk6",
        "entity_name": "Casey Jones"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lrx58",
        "entity_name": "Truth Hits Everybody"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.010v81m",
        "entity_name": "The Collector"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lmhk9",
        "entity_name": "Smokin'"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lllkt",
        "entity_name": "Interstate Love Song"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0p8qnt",
        "entity_name": "Something About You"
      }
    ],
    "function": "<=",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.musical_game_song",
          "class": "cvg.musical_game_song",
          "friendly_name": "Musical Game Song",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.musical_game_song_relationship",
          "class": "cvg.musical_game_song_relationship",
          "friendly_name": "Musical game/song relationship",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04kbkd1",
          "class": "cvg.musical_game",
          "friendly_name": "rb2",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "2008-05-01^^http://www.w3.org/2001/XMLSchema#date",
          "class": "type.datetime",
          "friendly_name": "2008-05-01",
          "question_node": 0,
          "function": "<="
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.musical_game_song.games",
          "friendly_name": "Games"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.musical_game_song_relationship.game",
          "friendly_name": "Game"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "cvg.musical_game_song_relationship.release_date",
          "friendly_name": "Release date"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.musical_game_song . \n?x1 :type.object.type :cvg.musical_game_song_relationship . \nVALUES ?x2 { :m.04kbkd1 } \nFILTER (?x3 <= \"2008-05-01-08:00\"^^<http://www.w3.org/2001/XMLSchema#date>)\n?x0 :cvg.musical_game_song.games ?x1 . \n?x1 :cvg.musical_game_song_relationship.game ?x2 . \n?x1 :cvg.musical_game_song_relationship.release_date ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.musical_game_song (JOIN cvg.musical_game_song.games (AND (JOIN cvg.musical_game_song_relationship.game m.04kbkd1) (le cvg.musical_game_song_relationship.release_date 2008-05-01^^http://www.w3.org/2001/XMLSchema#date))))",
    "topic_entity": {
      "m.04kbkd1": "Rock Band 2"
    }
  },
  {
    "qid": 3203952001000,
    "question": "which cyclists speak a language that philip lynott speaks?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.027tm9b",
        "entity_name": "Geraint Thomas"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04gkhjq",
        "entity_name": "Peter Kennaugh"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fxksg",
        "entity_name": "Tyler Farrar"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02x22b6",
        "entity_name": "Taylor Phinney"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.066p_g",
        "entity_name": "Amber Neben"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06jpgd",
        "entity_name": "Chris Horner"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "sports.cyclist",
          "class": "sports.cyclist",
          "friendly_name": "Cyclist",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "language.human_language",
          "class": "language.human_language",
          "friendly_name": "Human Language",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01r6c92",
          "class": "music.bassist",
          "friendly_name": "philip lynott",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.languages",
          "friendly_name": "Languages"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "people.person.languages",
          "friendly_name": "Languages"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.cyclist . \n?x1 :type.object.type :language.human_language . \nVALUES ?x2 { :m.01r6c92 } \n?x0 :people.person.languages ?x1 . \n?x2 :people.person.languages ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "people"
    ],
    "level": "compositional",
    "s_expression": "(AND sports.cyclist (JOIN people.person.languages (JOIN (R people.person.languages) m.01r6c92)))",
    "topic_entity": {
      "m.01r6c92": "Phil Lynott"
    }
  },
  {
    "qid": 3204660011000,
    "question": "melvin van peebles was the same ethnicity of which astronaut ?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.026yqy",
        "entity_name": "Robert Henry Lawrence, Jr."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0304rd",
        "entity_name": "Winston E. Scott"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02j2mf",
        "entity_name": "Charles Bolden"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ftr66",
        "entity_name": "Leland D. Melvin"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02vqrg",
        "entity_name": "Bernard A. Harris, Jr."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01835d",
        "entity_name": "Michael P. Anderson"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026yht",
        "entity_name": "Guion Bluford"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0183qt",
        "entity_name": "Ronald McNair"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01cmn5",
        "entity_name": "Mae Jemison"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0731dh",
        "entity_name": "Stephanie Wilson"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02k83s",
        "entity_name": "Robert Curbeam"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g20js",
        "entity_name": "Yvonne Cagle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gxc8m",
        "entity_name": "Robert Satcher"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02v1vc",
        "entity_name": "Frederick D. Gregory"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b5zb6",
        "entity_name": "Joan Higginbotham"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gxd82",
        "entity_name": "Alvin Drew"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "spaceflight.astronaut",
          "class": "spaceflight.astronaut",
          "friendly_name": "Astronaut",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "people.ethnicity",
          "class": "people.ethnicity",
          "friendly_name": "Ethnicity",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01z0lb",
          "class": "tv.tv_director",
          "friendly_name": "Melvin Van Peebles",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.ethnicity",
          "friendly_name": "Ethnicity"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "people.person.ethnicity",
          "friendly_name": "Ethnicity"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.astronaut . \n?x1 :type.object.type :people.ethnicity . \nVALUES ?x2 { :m.01z0lb } \n?x0 :people.person.ethnicity ?x1 . \n?x2 :people.person.ethnicity ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "people"
    ],
    "level": "compositional",
    "s_expression": "(AND spaceflight.astronaut (JOIN people.person.ethnicity (JOIN (R people.person.ethnicity) m.01z0lb)))",
    "topic_entity": {
      "m.01z0lb": "Melvin Van Peebles"
    }
  },
  {
    "qid": 4302314001000,
    "question": "which medical trial designed using cocaine effects in humans: physiology and behavior – 1 has the lowest expected total enrollment?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03zbgdy",
        "entity_name": "Treatment"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "medicine.medical_trial_design",
          "class": "medicine.medical_trial_design",
          "friendly_name": "Medical trial design",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "medicine.medical_trial",
          "class": "medicine.medical_trial",
          "friendly_name": "Medical trial",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03zbbw1",
          "class": "medicine.medical_trial",
          "friendly_name": "Cocaine Effects in Humans: Physiology and Behavior – 1",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.int",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "medicine.medical_trial.design",
          "friendly_name": "Design"
        },
        {
          "start": 0,
          "end": 2,
          "relation": "medicine.medical_trial_design.trials",
          "friendly_name": "Trials"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "medicine.medical_trial.expected_total_enrollment",
          "friendly_name": "Expected total enrollment"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_design . \n?x1 :type.object.type :medicine.medical_trial . \nVALUES ?x2 { :m.03zbbw1 } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :medicine.medical_trial_design . \n?y1 :type.object.type :medicine.medical_trial . \nVALUES ?y2 { :m.03zbbw1 } \n?y1 :medicine.medical_trial.design ?y0 . \n?y0 :medicine.medical_trial_design.trials ?y2 . \n?y1 :medicine.medical_trial.expected_total_enrollment ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :medicine.medical_trial.design ?x0 . \n?x0 :medicine.medical_trial_design.trials ?x2 . \n?x1 :medicine.medical_trial.expected_total_enrollment ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "medicine"
    ],
    "level": "compositional",
    "s_expression": "(ARGMAX (AND medicine.medical_trial_design (JOIN medicine.medical_trial_design.trials m.03zbbw1)) (JOIN (R medicine.medical_trial.design) medicine.medical_trial.expected_total_enrollment))",
    "topic_entity": {
      "m.03zbbw1": "Cocaine Effects in Humans: Physiology and Behavior – 1"
    }
  },
  {
    "qid": 3204500015000,
    "question": "what is the gameplay mode of the musical game that has the version of ultimate band?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01z747",
        "entity_name": "Multiplayer video game"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hjn4",
        "entity_name": "Single-player video game"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.gameplay_mode",
          "class": "cvg.gameplay_mode",
          "friendly_name": "Gameplay Mode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.musical_game",
          "class": "cvg.musical_game",
          "friendly_name": "Musical Game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0460bg_",
          "class": "cvg.game_version",
          "friendly_name": "Ultimate Band",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.gameplay_mode.games_with_this_mode",
          "friendly_name": "Games with this mode"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.versions",
          "friendly_name": "Versions"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.gameplay_mode . \n?x1 :type.object.type :cvg.musical_game . \nVALUES ?x2 { :m.0460bg_ } \n?x0 :cvg.gameplay_mode.games_with_this_mode ?x1 . \n?x1 :cvg.computer_videogame.versions ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.gameplay_mode (JOIN cvg.gameplay_mode.games_with_this_mode (JOIN cvg.computer_videogame.versions m.0460bg_)))",
    "topic_entity": {
      "m.0460bg_": "Ultimate Band"
    }
  },
  {
    "qid": 4302314010000,
    "question": "which medical trial designed using a multi-center clinical trial to evaluate azidothymidine (azt) in the treatment of human immunodeficiency virus (hiv) infection in patients with aids post first episode pcp has the lowest expected total enrollment?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.040ftnw",
        "entity_name": "Parallel Assignment"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03zbgdy",
        "entity_name": "Treatment"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "medicine.medical_trial_design",
          "class": "medicine.medical_trial_design",
          "friendly_name": "Medical trial design",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "medicine.medical_trial",
          "class": "medicine.medical_trial",
          "friendly_name": "Medical trial",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03zbbxs",
          "class": "medicine.medical_trial",
          "friendly_name": "A Multi-Center Clinical Trial to Evaluate Azidothymidine (AZT) in the Treatment of Human Immunodeficiency Virus (HIV) Infection in Patients with AIDS Post First Episode PCP",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.int",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "medicine.medical_trial.design",
          "friendly_name": "Design"
        },
        {
          "start": 0,
          "end": 2,
          "relation": "medicine.medical_trial_design.trials",
          "friendly_name": "Trials"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "medicine.medical_trial.expected_total_enrollment",
          "friendly_name": "Expected total enrollment"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_design . \n?x1 :type.object.type :medicine.medical_trial . \nVALUES ?x2 { :m.03zbbxs } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :medicine.medical_trial_design . \n?y1 :type.object.type :medicine.medical_trial . \nVALUES ?y2 { :m.03zbbxs } \n?y1 :medicine.medical_trial.design ?y0 . \n?y0 :medicine.medical_trial_design.trials ?y2 . \n?y1 :medicine.medical_trial.expected_total_enrollment ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :medicine.medical_trial.design ?x0 . \n?x0 :medicine.medical_trial_design.trials ?x2 . \n?x1 :medicine.medical_trial.expected_total_enrollment ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "medicine"
    ],
    "level": "compositional",
    "s_expression": "(ARGMAX (AND medicine.medical_trial_design (JOIN medicine.medical_trial_design.trials m.03zbbxs)) (JOIN (R medicine.medical_trial.design) medicine.medical_trial.expected_total_enrollment))",
    "topic_entity": {
      "m.03zbbxs": "A Multi-Center Clinical Trial to Evaluate Azidothymidine (AZT) in the Treatment of Human Immunodeficiency Virus (HIV) Infection in Patients with AIDS Post First Episode PCP"
    }
  },
  {
    "qid": 3205686004000,
    "question": "which unit of area does the measurement system have that has an electric field strength of volt per metre contain?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jljd",
        "entity_name": "Square kilometer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bshsw",
        "entity_name": "Square meter"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.area_unit",
          "class": "measurement_unit.area_unit",
          "friendly_name": "Unit of Area",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj52k",
          "class": "measurement_unit.electric_field_strength_unit",
          "friendly_name": "Volt per metre",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.area_units",
          "friendly_name": "Area Units"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.electric_field_strength_units",
          "friendly_name": "Electric Field Strength Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.area_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj52k } \n?x1 :measurement_unit.measurement_system.area_units ?x0 . \n?x1 :measurement_unit.measurement_system.electric_field_strength_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.area_unit (JOIN (R measurement_unit.measurement_system.area_units) (JOIN measurement_unit.measurement_system.electric_field_strength_units m.02sj52k)))",
    "topic_entity": {
      "m.02sj52k": "Volt per metre"
    }
  },
  {
    "qid": 4303841011000,
    "question": "which region did atari inc publish the latest released version of its game?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.075g54v",
        "entity_name": "Wii/DS NA"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_region",
          "class": "cvg.computer_game_region",
          "friendly_name": "Video Game Region",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.datetime",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.0xwj",
          "class": "cvg.cvg_publisher",
          "friendly_name": "atari inc",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.game_version.regions",
          "friendly_name": "Regions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.game_version.release_date",
          "friendly_name": "Release Date"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "cvg.game_version.publisher",
          "friendly_name": "Publisher"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_region . \n?x1 :type.object.type :cvg.game_version . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :cvg.computer_game_region . \n?y1 :type.object.type :cvg.game_version . \nVALUES ?y3 { :m.0xwj } \n?y1 :cvg.game_version.regions ?y0 . \n?y1 :cvg.game_version.release_date ?y2 . \n?y1 :cvg.game_version.publisher ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x3 { :m.0xwj } \n?x1 :cvg.game_version.regions ?x0 . \n?x1 :cvg.game_version.release_date ?x2 . \n?x1 :cvg.game_version.publisher ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(ARGMAX (AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (JOIN cvg.game_version.publisher m.0xwj))) (JOIN (R cvg.game_version.regions) cvg.game_version.release_date))",
    "topic_entity": {
      "m.0xwj": "Atari"
    }
  },
  {
    "qid": 3202811010000,
    "question": "which video game designer helped design video games that are a part of the parasite eve series?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.085656",
        "entity_name": "Yoshinori Kitase"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01g59w",
        "entity_name": "Yōko Shimomura"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03z_qh",
        "entity_name": "Naoshi Mizuta"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01nmfd",
        "entity_name": "Hironobu Sakaguchi"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.068dpk",
        "entity_name": "Tetsuya Nomura"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027g93c",
        "entity_name": "Takashi Tokita"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cv74q",
        "entity_name": "Motomu Toriyama"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.cvg_designer",
          "class": "cvg.cvg_designer",
          "friendly_name": "Video Game Designer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_videogame",
          "class": "cvg.computer_videogame",
          "friendly_name": "Video game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04mmqqp",
          "class": "cvg.game_series",
          "friendly_name": "Parasite Eve",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.computer_videogame.designers",
          "friendly_name": "Designers"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.game_series",
          "friendly_name": "Part of game series"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.cvg_designer . \n?x1 :type.object.type :cvg.computer_videogame . \nVALUES ?x2 { :m.04mmqqp } \n?x1 :cvg.computer_videogame.designers ?x0 . \n?x1 :cvg.computer_videogame.game_series ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.cvg_designer (JOIN (R cvg.computer_videogame.designers) (JOIN cvg.computer_videogame.game_series m.04mmqqp)))",
    "topic_entity": {
      "m.04mmqqp": "Parasite Eve"
    }
  },
  {
    "qid": 3200796003000,
    "question": "what type of fictional setting is the setting type of who dares defy...the demi-men?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cbrvwy",
        "entity_name": "Lemurian windows into any place or time"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dc60vr",
        "entity_name": "Lemuria"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "fictional_universe.type_of_fictional_setting",
          "class": "fictional_universe.type_of_fictional_setting",
          "friendly_name": "Type of fictional setting",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "fictional_universe.fictional_setting",
          "class": "fictional_universe.fictional_setting",
          "friendly_name": "Fictional Setting",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0gwb_fc",
          "class": "comic_books.comic_book_story",
          "friendly_name": "Who Dares Defy...the Demi-Men",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "fictional_universe.fictional_setting.setting_type",
          "friendly_name": "Setting type"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "fictional_universe.fictional_setting.works_set_here",
          "friendly_name": "Fictional Works Set Here"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.type_of_fictional_setting . \n?x1 :type.object.type :fictional_universe.fictional_setting . \nVALUES ?x2 { :m.0gwb_fc } \n?x1 :fictional_universe.fictional_setting.setting_type ?x0 . \n?x1 :fictional_universe.fictional_setting.works_set_here ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "fictional_universe"
    ],
    "level": "compositional",
    "s_expression": "(AND fictional_universe.type_of_fictional_setting (JOIN (R fictional_universe.fictional_setting.setting_type) (JOIN fictional_universe.fictional_setting.works_set_here m.0gwb_fc)))",
    "topic_entity": {
      "m.0gwb_fc": "Who Dares Defy...the Demi-Men"
    }
  },
  {
    "qid": 3204027000000,
    "question": "what is the unit of energy used in the same measurement system as becquerels for measure of radioactivity?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.1224btsg",
        "entity_name": "Kilojoule"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04570",
        "entity_name": "Joule"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.energy_unit",
          "class": "measurement_unit.energy_unit",
          "friendly_name": "Unit of Energy",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.014fcr",
          "class": "measurement_unit.radioactivity_unit",
          "friendly_name": "becquerels",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.energy_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.radioactivity_units",
          "friendly_name": "Radioactivity Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.energy_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.014fcr } \n?x0 :measurement_unit.energy_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.radioactivity_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.energy_unit (JOIN measurement_unit.energy_unit.measurement_system (JOIN measurement_unit.measurement_system.radioactivity_units m.014fcr)))",
    "topic_entity": {
      "m.014fcr": "Becquerel"
    }
  },
  {
    "qid": 3204476001000,
    "question": "cubic meters per second is the same measurement system as which unit of energy?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.1224btsg",
        "entity_name": "Kilojoule"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04570",
        "entity_name": "Joule"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.energy_unit",
          "class": "measurement_unit.energy_unit",
          "friendly_name": "Unit of Energy",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0gbw2l",
          "class": "measurement_unit.unit_of_volumetric_flow_rate",
          "friendly_name": "cubic meters per second",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.energy_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.volumetric_flow_rate_units",
          "friendly_name": "Volumetric Flow Rate Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.energy_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0gbw2l } \n?x0 :measurement_unit.energy_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.volumetric_flow_rate_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.energy_unit (JOIN measurement_unit.energy_unit.measurement_system (JOIN measurement_unit.measurement_system.volumetric_flow_rate_units m.0gbw2l)))",
    "topic_entity": {
      "m.0gbw2l": "Cubic metre per second"
    }
  },
  {
    "qid": 4301766014000,
    "question": "what is the name of what was the most recent browser released by the creators of compilation error?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04b32v",
        "entity_name": "Internet Explorer for Mac"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.web_browser",
          "class": "computer.web_browser",
          "friendly_name": "Web browser",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.software_developer",
          "class": "computer.software_developer",
          "friendly_name": "Software Developer",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02l0cqj",
          "class": "computer.file_format",
          "friendly_name": "Compilation Error",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.datetime",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.software_developer.software",
          "friendly_name": "Software"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "computer.file_format.format_creator",
          "friendly_name": "Format Creator"
        },
        {
          "start": 0,
          "end": 3,
          "relation": "computer.software.first_released",
          "friendly_name": "First Released"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.web_browser . \n?x1 :type.object.type :computer.software_developer . \nVALUES ?x2 { :m.02l0cqj } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :computer.web_browser . \n?y1 :type.object.type :computer.software_developer . \nVALUES ?y2 { :m.02l0cqj } \n?y1 :computer.software_developer.software ?y0 . \n?y2 :computer.file_format.format_creator ?y1 . \n?y0 :computer.software.first_released ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :computer.software_developer.software ?x0 . \n?x2 :computer.file_format.format_creator ?x1 . \n?x0 :computer.software.first_released ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "compositional",
    "s_expression": "(ARGMAX (AND computer.web_browser (JOIN (R computer.software_developer.software) (JOIN (R computer.file_format.format_creator) m.02l0cqj))) computer.software.first_released)",
    "topic_entity": {
      "m.02l0cqj": "Compilation Error"
    }
  },
  {
    "qid": 3203681006000,
    "question": "the religion which practices fasting associates with which religious text?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.096tx",
        "entity_name": "Quran"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vyhl",
        "entity_name": "Al-Ala"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.052nbg",
        "entity_name": "Sahih al-Bukhari"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vyn3",
        "entity_name": "Al-Inshirah"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.074jc",
        "entity_name": "Sunnah"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vyms",
        "entity_name": "Ad-Dhuha"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vpfj",
        "entity_name": "Ar-Rahman"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0482d5",
        "entity_name": "Al-Kawthar"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vm51",
        "entity_name": "At-Takathur"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04b29y",
        "entity_name": "Al-Kafirun"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vpdh",
        "entity_name": "An-Najm"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vm29",
        "entity_name": "Al-Qadr"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vy82",
        "entity_name": "An-Naba"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vqkh",
        "entity_name": "Al-Jumua"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vy9w",
        "entity_name": "Abasa"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04b297",
        "entity_name": "An-Nasr"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.045_sj",
        "entity_name": "Al-Fatiha"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04g0_k",
        "entity_name": "Quraysh"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05jlpz",
        "entity_name": "Al-Baqara 255"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04b3hq",
        "entity_name": "Fardh"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vm2n",
        "entity_name": "Al-Bayyina"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02q8xdw",
        "entity_name": "Sword Verse"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vm2_",
        "entity_name": "Az-Zalzala"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03hf62",
        "entity_name": "Al-Isra"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04b286",
        "entity_name": "Al-Masadd"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "religion.religious_text",
          "class": "religion.religious_text",
          "friendly_name": "Religious Text",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "religion.religion",
          "class": "religion.religion",
          "friendly_name": "Religion",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05701w",
          "class": "religion.religious_practice",
          "friendly_name": "fasting",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "religion.religion.texts",
          "friendly_name": "Texts"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "religion.religious_practice.practice_of",
          "friendly_name": "Religious practice of"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.religious_text . \n?x1 :type.object.type :religion.religion . \nVALUES ?x2 { :m.05701w } \n?x1 :religion.religion.texts ?x0 . \n?x2 :religion.religious_practice.practice_of ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "religion"
    ],
    "level": "compositional",
    "s_expression": "(AND religion.religious_text (JOIN (R religion.religion.texts) (JOIN (R religion.religious_practice.practice_of) m.05701w)))",
    "topic_entity": {
      "m.05701w": "Sawm"
    }
  },
  {
    "qid": 3205486003000,
    "question": "which unit of time is in a measurement system with illuminance units lux?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.05qqsx",
        "entity_name": "Centisecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08_86",
        "entity_name": "Nanosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2ddx",
        "entity_name": "petasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06nxt",
        "entity_name": "Second"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dfy",
        "entity_name": "zeptosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2ddm",
        "entity_name": "yottasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dd_",
        "entity_name": "terasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08_rq",
        "entity_name": "Kilosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08_p2",
        "entity_name": "Gigasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dfc",
        "entity_name": "hectosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0kbm8",
        "entity_name": "Picosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08_wc",
        "entity_name": "Microsecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2ddt",
        "entity_name": "exasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2ddq",
        "entity_name": "zettasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dg0",
        "entity_name": "yoctosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0kbjz",
        "entity_name": "Femtosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0kbjk",
        "entity_name": "Attosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08_qd",
        "entity_name": "Megasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dfg",
        "entity_name": "decasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2cvz",
        "entity_name": "Millisecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dfk",
        "entity_name": "decisecond"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.time_unit",
          "class": "measurement_unit.time_unit",
          "friendly_name": "Unit of Time",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.014fpz",
          "class": "measurement_unit.illuminance_unit",
          "friendly_name": "Lux",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.time_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.illuminance_units",
          "friendly_name": "Illuminance Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.time_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.014fpz } \n?x0 :measurement_unit.time_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.illuminance_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.time_unit (JOIN measurement_unit.time_unit.measurement_system (JOIN measurement_unit.measurement_system.illuminance_units m.014fpz)))",
    "topic_entity": {
      "m.014fpz": "Lux"
    }
  },
  {
    "qid": 3201066001000,
    "question": "defrag uses what type of video game engine?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02rq8_0",
        "entity_name": "id Tech"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_engine_family",
          "class": "cvg.computer_game_engine_family",
          "friendly_name": "Video Game Engine Family",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_game_engine",
          "class": "cvg.computer_game_engine",
          "friendly_name": "Video Game Engine",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0269kvj",
          "class": "cvg.computer_game_mod",
          "friendly_name": "DeFRaG",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.computer_game_engine_family.engines_in_this_family",
          "friendly_name": "Engines in This Family"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "cvg.computer_videogame.uses_game_engine",
          "friendly_name": "Uses game engine"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_engine_family . \n?x1 :type.object.type :cvg.computer_game_engine . \nVALUES ?x2 { :m.0269kvj } \n?x0 :cvg.computer_game_engine_family.engines_in_this_family ?x1 . \n?x2 :cvg.computer_videogame.uses_game_engine ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_engine_family (JOIN cvg.computer_game_engine_family.engines_in_this_family (JOIN (R cvg.computer_videogame.uses_game_engine) m.0269kvj)))",
    "topic_entity": {
      "m.0269kvj": "DeFRaG"
    }
  },
  {
    "qid": 3204498014000,
    "question": "what is the video game rating whose rating system includes the content descriptor of use of drugs?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8b",
        "entity_name": "Everyone"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl98",
        "entity_name": "Mature"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8x",
        "entity_name": "Everyone 10+"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl9n",
        "entity_name": "Rating Pending"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl92",
        "entity_name": "Adults Only"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8q",
        "entity_name": "Teen"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl9g",
        "entity_name": "Kids to Adults"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8j",
        "entity_name": "Early Childhood"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_rating",
          "class": "cvg.computer_game_rating",
          "friendly_name": "Video Game Rating",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_game_rating_system",
          "class": "cvg.computer_game_rating_system",
          "friendly_name": "Video Game Rating System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.042zlvw",
          "class": "cvg.computer_game_content_descriptor",
          "friendly_name": "Use of Drugs",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.computer_game_rating.rating_system",
          "friendly_name": "Rating system"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_game_rating_system.content_descriptors",
          "friendly_name": "Content descriptors"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_rating . \n?x1 :type.object.type :cvg.computer_game_rating_system . \nVALUES ?x2 { :m.042zlvw } \n?x0 :cvg.computer_game_rating.rating_system ?x1 . \n?x1 :cvg.computer_game_rating_system.content_descriptors ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_rating (JOIN cvg.computer_game_rating.rating_system (JOIN cvg.computer_game_rating_system.content_descriptors m.042zlvw)))",
    "topic_entity": {
      "m.042zlvw": "Use of Drugs"
    }
  },
  {
    "qid": 3201457012000,
    "question": "what is the exhibition which has the same exhibition curator as future pavilion?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.064dsyn",
        "entity_name": "Venice Biennale of Architecture Taiwan Pavillion 2006"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "exhibitions.exhibition",
          "class": "exhibitions.exhibition",
          "friendly_name": "Exhibition",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "exhibitions.exhibition_curator",
          "class": "exhibitions.exhibition_curator",
          "friendly_name": "Exhibition curator",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05v07pc",
          "class": "exhibitions.exhibition",
          "friendly_name": "Future Pavilion",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "exhibitions.exhibition_curator.exhibitions_curated",
          "friendly_name": "Exhibitions curated"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "exhibitions.exhibition_curator.exhibitions_curated",
          "friendly_name": "Exhibitions curated"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :exhibitions.exhibition . \n?x1 :type.object.type :exhibitions.exhibition_curator . \nVALUES ?x2 { :m.05v07pc } \n?x1 :exhibitions.exhibition_curator.exhibitions_curated ?x0 . \n?x1 :exhibitions.exhibition_curator.exhibitions_curated ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "exhibitions"
    ],
    "level": "compositional",
    "s_expression": "(AND exhibitions.exhibition (JOIN (R exhibitions.exhibition_curator.exhibitions_curated) (JOIN exhibitions.exhibition_curator.exhibitions_curated m.05v07pc)))",
    "topic_entity": {
      "m.05v07pc": "Future Pavilion"
    }
  },
  {
    "qid": 3202569015000,
    "question": "can you tell me a type of ship whose clas has sydney cheverton as a designer?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.062z98q",
        "entity_name": "Sailing Dinghy"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "boats.ship_type",
          "class": "boats.ship_type",
          "friendly_name": "Ship type",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "boats.ship_class",
          "class": "boats.ship_class",
          "friendly_name": "Ship class",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.062zb2m",
          "class": "boats.ship_designer",
          "friendly_name": "Sydney Cheverton",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "boats.ship_class.ship_type",
          "friendly_name": "Ship type (ex: oil tanker, destroyer)"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "boats.ship_class.designer",
          "friendly_name": "Designer"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :boats.ship_type . \n?x1 :type.object.type :boats.ship_class . \nVALUES ?x2 { :m.062zb2m } \n?x1 :boats.ship_class.ship_type ?x0 . \n?x1 :boats.ship_class.designer ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "boats"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND boats.ship_type (JOIN (R boats.ship_class.ship_type) (JOIN boats.ship_class.designer m.062zb2m)))",
    "topic_entity": {
      "m.062zb2m": "Sydney Cheverton"
    }
  },
  {
    "qid": 3204636002000,
    "question": "where is william clinton published?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02_286",
        "entity_name": "New York City"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "travel.travel_destination",
          "class": "travel.travel_destination",
          "friendly_name": "Travel destination",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "book.book_edition",
          "class": "book.book_edition",
          "friendly_name": "Book Edition",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0157m",
          "class": "book.audio_book_reader",
          "friendly_name": "william clinton",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "book.book_edition.place_of_publication",
          "friendly_name": "Place of publication"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "book.audio_book_reader.audio_books_read",
          "friendly_name": "Audio books read"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :travel.travel_destination . \n?x1 :type.object.type :book.book_edition . \nVALUES ?x2 { :m.0157m } \n?x1 :book.book_edition.place_of_publication ?x0 . \n?x2 :book.audio_book_reader.audio_books_read ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "book"
    ],
    "level": "compositional",
    "s_expression": "(AND travel.travel_destination (JOIN (R book.book_edition.place_of_publication) (JOIN (R book.audio_book_reader.audio_books_read) m.0157m)))",
    "topic_entity": {
      "m.0157m": "Bill Clinton"
    }
  },
  {
    "qid": 3203766011000,
    "question": "which chromosome has the genomic locus of human cytogenetic band 1p32.1?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.099hmk",
        "entity_name": "Chromosome 1 (human)"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "biology.chromosome",
          "class": "biology.chromosome",
          "friendly_name": "Chromosome",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "biology.genomic_locus",
          "class": "biology.genomic_locus",
          "friendly_name": "Genomic Locus",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02kwgzv",
          "class": "biology.cytogenetic_band",
          "friendly_name": "Human Cytogenetic Band 1p32.1",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "biology.genomic_locus.chromosome",
          "friendly_name": "Chromosome"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "biology.cytogenetic_band.locus",
          "friendly_name": "Locus"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.chromosome . \n?x1 :type.object.type :biology.genomic_locus . \nVALUES ?x2 { :m.02kwgzv } \n?x1 :biology.genomic_locus.chromosome ?x0 . \n?x2 :biology.cytogenetic_band.locus ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "biology"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND biology.chromosome (JOIN (R biology.genomic_locus.chromosome) (JOIN (R biology.cytogenetic_band.locus) m.02kwgzv)))",
    "topic_entity": {
      "m.02kwgzv": "Human Cytogenetic Band 1p32.1"
    }
  },
  {
    "qid": 3204676000000,
    "question": "what unit of time belongs to the same measurement system with ampere per metre?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.05qqsx",
        "entity_name": "Centisecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08_86",
        "entity_name": "Nanosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2ddx",
        "entity_name": "petasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06nxt",
        "entity_name": "Second"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dfy",
        "entity_name": "zeptosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2ddm",
        "entity_name": "yottasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dd_",
        "entity_name": "terasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08_rq",
        "entity_name": "Kilosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08_p2",
        "entity_name": "Gigasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dfc",
        "entity_name": "hectosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0kbm8",
        "entity_name": "Picosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08_wc",
        "entity_name": "Microsecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2ddt",
        "entity_name": "exasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2ddq",
        "entity_name": "zettasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dg0",
        "entity_name": "yoctosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0kbjz",
        "entity_name": "Femtosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0kbjk",
        "entity_name": "Attosecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08_qd",
        "entity_name": "Megasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dfg",
        "entity_name": "decasecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2cvz",
        "entity_name": "Millisecond"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v2dfk",
        "entity_name": "decisecond"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.time_unit",
          "class": "measurement_unit.time_unit",
          "friendly_name": "Unit of Time",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj414",
          "class": "measurement_unit.magnetic_field_strength_unit",
          "friendly_name": "Ampere per metre",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.time_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.magnetic_field_strength_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.time_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj414 } \n?x0 :measurement_unit.time_unit.measurement_system ?x1 . \n?x2 :measurement_unit.magnetic_field_strength_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.time_unit (JOIN measurement_unit.time_unit.measurement_system (JOIN (R measurement_unit.magnetic_field_strength_unit.measurement_system) m.02sj414)))",
    "topic_entity": {
      "m.02sj414": "Ampere per metre"
    }
  },
  {
    "qid": 3204168008000,
    "question": "what is the name of the family of a computer processor that is also a variant of atmega164pa?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pk4w",
        "entity_name": "Atmel AVR"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.computer_processor",
          "class": "computer.computer_processor",
          "friendly_name": "Computer Processor",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.computer_processor",
          "class": "computer.computer_processor",
          "friendly_name": "Computer Processor",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.06qjv04",
          "class": "computer.computer_processor",
          "friendly_name": "ATmega164PA",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.computer_processor.processor_family",
          "friendly_name": "Processor Family"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "computer.computer_processor.variants",
          "friendly_name": "Variants"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.computer_processor . \n?x1 :type.object.type :computer.computer_processor . \nVALUES ?x2 { :m.06qjv04 } \n?x1 :computer.computer_processor.processor_family ?x0 . \n?x1 :computer.computer_processor.variants ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "compositional",
    "s_expression": "(AND computer.computer_processor (JOIN (R computer.computer_processor.processor_family) (JOIN computer.computer_processor.variants m.06qjv04)))",
    "topic_entity": {
      "m.06qjv04": "ATmega164PA"
    }
  },
  {
    "qid": 3200464007000,
    "question": "what is the name of the coaching positions that oakland raiders has?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02pwg4z",
        "entity_name": "Defensive Backs Coach"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "sports.coaching_position",
          "class": "sports.coaching_position",
          "friendly_name": "Coaching position",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "sports.sports_team_coach_tenure",
          "class": "sports.sports_team_coach_tenure",
          "friendly_name": "Sports team coach tenure",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05l71",
          "class": "american_football.football_team",
          "friendly_name": "Oakland Raiders",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "sports.sports_team_coach_tenure.position",
          "friendly_name": "Position"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "sports.sports_team_coach_tenure.team",
          "friendly_name": "Team"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.coaching_position . \n?x1 :type.object.type :sports.sports_team_coach_tenure . \nVALUES ?x2 { :m.05l71 } \n?x1 :sports.sports_team_coach_tenure.position ?x0 . \n?x1 :sports.sports_team_coach_tenure.team ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "sports"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND sports.coaching_position (JOIN (R sports.sports_team_coach_tenure.position) (JOIN sports.sports_team_coach_tenure.team m.05l71)))",
    "topic_entity": {
      "m.05l71": "Oakland Raiders"
    }
  },
  {
    "qid": 3203411019000,
    "question": "united states general services administration was registered by which tld registry?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hsn10",
        "entity_name": "ZoneEdit"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "internet.top_level_domain_registry",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Top Level Domain Registry",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "internet.top_level_domain",
          "class": "internet.top_level_domain",
          "friendly_name": "Top Level Domain",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.026vq4",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "united states general services administration",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "internet.top_level_domain_registry.domains",
          "friendly_name": "Domains Registered"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "internet.top_level_domain.registry",
          "friendly_name": "Registry"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.top_level_domain_registry . \n?x1 :type.object.type :internet.top_level_domain . \nVALUES ?x2 { :m.026vq4 } \n?x0 :internet.top_level_domain_registry.domains ?x1 . \n?x1 :internet.top_level_domain.registry ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "internet"
    ],
    "level": "compositional",
    "s_expression": "(AND internet.top_level_domain_registry (JOIN internet.top_level_domain_registry.domains (JOIN internet.top_level_domain.registry m.026vq4)))",
    "topic_entity": {
      "m.026vq4": "General Services Administration"
    }
  },
  {
    "qid": 3205210012000,
    "question": "in bethel home, what are the religious practices?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0687y",
        "entity_name": "Prayer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05gd62",
        "entity_name": "Bible study"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01j2d8",
        "entity_name": "Proselytism"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01cvx",
        "entity_name": "Baptism"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "religion.religious_practice",
          "class": "religion.religious_practice",
          "friendly_name": "Religious Practice",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "religion.religion",
          "class": "religion.religion",
          "friendly_name": "Religion",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04b3gw1",
          "class": "religion.type_of_place_of_worship",
          "friendly_name": "Bethel Home",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "religion.religion.practices",
          "friendly_name": "Practices"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "religion.type_of_place_of_worship.religion",
          "friendly_name": "Religion"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.religious_practice . \n?x1 :type.object.type :religion.religion . \nVALUES ?x2 { :m.04b3gw1 } \n?x1 :religion.religion.practices ?x0 . \n?x2 :religion.type_of_place_of_worship.religion ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "religion"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND religion.religious_practice (JOIN (R religion.religion.practices) (JOIN (R religion.type_of_place_of_worship.religion) m.04b3gw1)))",
    "topic_entity": {
      "m.04b3gw1": "Bethel Home"
    }
  },
  {
    "qid": 3203957003000,
    "question": "which unit of energy uses the same measurement system as kilograms per cubic meter?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.1224btsg",
        "entity_name": "Kilojoule"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04570",
        "entity_name": "Joule"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.energy_unit",
          "class": "measurement_unit.energy_unit",
          "friendly_name": "Unit of Energy",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0d1kg",
          "class": "measurement_unit.unit_of_density",
          "friendly_name": "kilograms per cubic meter",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.energy_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.unit_of_density.measurement_system",
          "friendly_name": "Measurement system"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.energy_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0d1kg } \n?x0 :measurement_unit.energy_unit.measurement_system ?x1 . \n?x2 :measurement_unit.unit_of_density.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.energy_unit (JOIN measurement_unit.energy_unit.measurement_system (JOIN (R measurement_unit.unit_of_density.measurement_system) m.0d1kg)))",
    "topic_entity": {
      "m.0d1kg": "Kilogram per cubic metre"
    }
  },
  {
    "qid": 3205361010000,
    "question": "what is the radio format for the station that broadcasts the prairie was quiet?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ggq0m",
        "entity_name": "Classical music"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.018d7s",
        "entity_name": "Public broadcasting"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "broadcast.radio_format",
          "class": "broadcast.radio_format",
          "friendly_name": "Radio format",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "broadcast.radio_station",
          "class": "broadcast.radio_station",
          "friendly_name": "Radio Station",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05v0w76",
          "class": "radio.radio_program",
          "friendly_name": "The Prairie was Quiet",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "broadcast.radio_station.format",
          "friendly_name": "Format"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "broadcast.broadcast.content",
          "friendly_name": "Content"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.radio_format . \n?x1 :type.object.type :broadcast.radio_station . \nVALUES ?x2 { :m.05v0w76 } \n?x1 :broadcast.radio_station.format ?x0 . \n?x1 :broadcast.broadcast.content ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "broadcast"
    ],
    "level": "compositional",
    "s_expression": "(AND broadcast.radio_format (JOIN (R broadcast.radio_station.format) (JOIN broadcast.broadcast.content m.05v0w76)))",
    "topic_entity": {
      "m.05v0w76": "The Prairie was Quiet"
    }
  },
  {
    "qid": 4301069006000,
    "question": "after the date of 03/29/2009, which song was added to guitar hero iii?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nc41y",
        "entity_name": "Tina"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ncthq",
        "entity_name": "Stay Clean"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0crrmn",
        "entity_name": "Rock of Ages"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0d0xd3",
        "entity_name": "Supermassive Black Hole"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01f34k7",
        "entity_name": "My Curse"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0m4f02",
        "entity_name": "Cities on Flame With Rock 'n' Roll"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c9my1",
        "entity_name": "Miss Murder"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07k62t",
        "entity_name": "For the Love of God"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.071x8b",
        "entity_name": "All My Life"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dyqww",
        "entity_name": "Stricken"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nbvkk",
        "entity_name": "Nothing for Me Here"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nct6_",
        "entity_name": "Exo-Politics"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h3dtn",
        "entity_name": "Photograph"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09dyxz",
        "entity_name": "Slow Ride"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07npl0j",
        "entity_name": "Putting Holes In Happiness"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n02s1",
        "entity_name": "God Put a Smile Upon Your Face"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0_hy5cl",
        "entity_name": "No More Sorrow"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03gpc5",
        "entity_name": "Taxman"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ncsn7",
        "entity_name": "Sleeping Giant"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02702w6",
        "entity_name": "Operation Ground and Pound"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cszsh",
        "entity_name": "The Number of the Beast"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n9c75",
        "entity_name": "Guitar Battle vs. Slash"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cr_wt",
        "entity_name": "La Grange"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.069lq1",
        "entity_name": "Reptilia"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0416__g",
        "entity_name": "Violet Hill"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ncsdg",
        "entity_name": "So Payaso"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06y3rd",
        "entity_name": "Motorhead"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02z56_k",
        "entity_name": "Almost Easy"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cc4r4",
        "entity_name": "School's Out"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.059w87",
        "entity_name": "Sunshine of Your Love"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c2rk6",
        "entity_name": "Barracuda"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04rpmd",
        "entity_name": "Paranoid"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02qccf",
        "entity_name": "Holiday in Cambodia"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fm7g9",
        "entity_name": "Helicopter"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02871qq",
        "entity_name": "Same Old Song and Dance"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04_p_d",
        "entity_name": "Welcome to the Jungle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026sf4s",
        "entity_name": "Through the Fire and Flames"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n9cbf",
        "entity_name": "Guitar Battle vs. Tom Morello"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026l86h",
        "entity_name": "The Seeker"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fd3k5",
        "entity_name": "When You Were Young"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n9l1l",
        "entity_name": "Avalancha"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05n9p7g",
        "entity_name": "Don't Hold Back"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0270knw",
        "entity_name": "F.C.P.R.E.M.I.X."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nbltm",
        "entity_name": "Impulse"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nbm9y",
        "entity_name": "Minus Celsius"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027646y",
        "entity_name": "Ruby"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03d8xhc",
        "entity_name": "Carcinogen Crush"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02w1spk",
        "entity_name": "The Pretender"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06vw9m",
        "entity_name": "Slither"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nc432",
        "entity_name": "Messages"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ncsbs",
        "entity_name": "Ernten Was Wir Säen"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02qhv49",
        "entity_name": "Antisocial"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03nlw9g",
        "entity_name": "Peace of Mind"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.098bqv",
        "entity_name": "Any Way You Want It"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0816cq",
        "entity_name": "Dream On"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0263041",
        "entity_name": "Excuse Me Mr."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.025sd6q",
        "entity_name": "Sunday Morning"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ncst7",
        "entity_name": "The Arsonist"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h03jz",
        "entity_name": "Hole in the Earth"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ncswb",
        "entity_name": "Famous For Nothing"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ds2d7",
        "entity_name": "Stockholm Syndrome"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nctfn",
        "entity_name": "(We Are) The Road Crew"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gm5h7",
        "entity_name": "Shoot the Runner"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08nzqt",
        "entity_name": "I Predict a Riot"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nctmk",
        "entity_name": "Problems (Live at Brixton)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05p4g__",
        "entity_name": "Surfing with the Alien"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ncv9s",
        "entity_name": "Heroes of Our Time"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05nctxh",
        "entity_name": "Soothsayer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05mtfsj",
        "entity_name": "Revolution Deathsquad"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07n6949",
        "entity_name": "Flannigan's Ball"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06hb7x",
        "entity_name": "Call Me"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0q43m_",
        "entity_name": "Juke Box Hero"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01cw9x7",
        "entity_name": "One"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07t5_1_",
        "entity_name": "Original Composition"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.082dr7",
        "entity_name": "Sabotage"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02r4z9_",
        "entity_name": "She Builds Quick Machines"
      }
    ],
    "function": "<=",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.musical_game_song",
          "class": "cvg.musical_game_song",
          "friendly_name": "Musical Game Song",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.musical_game_song_relationship",
          "class": "cvg.musical_game_song_relationship",
          "friendly_name": "Musical game/song relationship",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.025vn5m",
          "class": "cvg.musical_game",
          "friendly_name": "guitar hero iii",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "2009-03-29^^http://www.w3.org/2001/XMLSchema#date",
          "class": "type.datetime",
          "friendly_name": "03/29/2009",
          "question_node": 0,
          "function": "<="
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.musical_game_song.games",
          "friendly_name": "Games"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.musical_game_song_relationship.game",
          "friendly_name": "Game"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "cvg.musical_game_song_relationship.release_date",
          "friendly_name": "Release date"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.musical_game_song . \n?x1 :type.object.type :cvg.musical_game_song_relationship . \nVALUES ?x2 { :m.025vn5m } \nFILTER (?x3 <= \"2009-03-29-08:00\"^^<http://www.w3.org/2001/XMLSchema#date>)\n?x0 :cvg.musical_game_song.games ?x1 . \n?x1 :cvg.musical_game_song_relationship.game ?x2 . \n?x1 :cvg.musical_game_song_relationship.release_date ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.musical_game_song (JOIN cvg.musical_game_song.games (AND (JOIN cvg.musical_game_song_relationship.game m.025vn5m) (le cvg.musical_game_song_relationship.release_date 2009-03-29^^http://www.w3.org/2001/XMLSchema#date))))",
    "topic_entity": {
      "m.025vn5m": "Guitar Hero III: Legends of Rock"
    }
  },
  {
    "qid": 3200480013000,
    "question": "what status has been assigned to silent cal productions, llc websites?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hsn4g",
        "entity_name": "Active"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "internet.website_status",
          "class": "internet.website_status",
          "friendly_name": "Website Status",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "internet.website",
          "class": "internet.website",
          "friendly_name": "Website",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0h38l5w",
          "class": "internet.website_owner",
          "friendly_name": "Silent Cal Productions, LLC",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "internet.website_status.sites",
          "friendly_name": "Sites"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "internet.website.owner",
          "friendly_name": "Website owner"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.website_status . \n?x1 :type.object.type :internet.website . \nVALUES ?x2 { :m.0h38l5w } \n?x0 :internet.website_status.sites ?x1 . \n?x1 :internet.website.owner ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "internet"
    ],
    "level": "compositional",
    "s_expression": "(AND internet.website_status (JOIN internet.website_status.sites (JOIN internet.website.owner m.0h38l5w)))",
    "topic_entity": {
      "m.0h38l5w": "Silent Cal Productions, LLC"
    }
  },
  {
    "qid": 3204665010000,
    "question": "what automobile make has the parent company founded by raymond mays?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0x2x2dj",
        "entity_name": "ERA"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "automotive.make",
          "class": "automotive.make",
          "friendly_name": "Automobile Make",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "automotive.company",
          "class": "automotive.company",
          "friendly_name": "Automobile Company",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.08wnbp",
          "class": "organization.organization_founder",
          "friendly_name": "Raymond Mays",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "automotive.make.parent_company",
          "friendly_name": "Parent Company"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "organization.organization_founder.organizations_founded",
          "friendly_name": "Organizations founded"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :automotive.make . \n?x1 :type.object.type :automotive.company . \nVALUES ?x2 { :m.08wnbp } \n?x0 :automotive.make.parent_company ?x1 . \n?x2 :organization.organization_founder.organizations_founded ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "automotive",
      "organization"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND automotive.make (JOIN automotive.make.parent_company (JOIN (R organization.organization_founder.organizations_founded) m.08wnbp)))",
    "topic_entity": {
      "m.08wnbp": "Raymond Mays"
    }
  },
  {
    "qid": 3200570003000,
    "question": "which conference sponsor also sponsored the conference series with google inc?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.047mlyn",
        "entity_name": "Media Temple"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04sv4",
        "entity_name": "Microsoft Corporation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05b5c",
        "entity_name": "Nokia"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hmyfsv",
        "entity_name": "Facebook, Inc."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05p4tqt",
        "entity_name": "BELNET"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cm87w_",
        "entity_name": "OpenStack"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02x3kph",
        "entity_name": "Rackspace"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03mnk",
        "entity_name": "Hewlett-Packard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03sc8",
        "entity_name": "IBM"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dmtp",
        "entity_name": "Cisco Systems, Inc."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0mgkg",
        "entity_name": "Amazon.com"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0177br",
        "entity_name": "Geeknet, Inc."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01m1xf",
        "entity_name": "Qualcomm"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05njw",
        "entity_name": "Oracle Corporation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0225ty",
        "entity_name": "Université libre de Bruxelles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0py9b",
        "entity_name": "Dell"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02jnnn",
        "entity_name": "Linux Magazine"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01fr9b",
        "entity_name": "O'Reilly Media"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01cp2l",
        "entity_name": "Linux Professional Institute"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0d6yqz",
        "entity_name": "CodePlex"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g5kw77",
        "entity_name": "Cercle Informatique ULB"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01t9k5",
        "entity_name": "VMware"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h3rcbt",
        "entity_name": "SoftLayer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gyv7_f",
        "entity_name": "MongoDB Inc."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02h5b_x",
        "entity_name": "Red Hat Software"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b76t3s",
        "entity_name": "Neo4j"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c3xj3p",
        "entity_name": "Bluehost"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j9pqc0",
        "entity_name": "OpenShift"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027pmws",
        "entity_name": "ActiveState"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04tnv6",
        "entity_name": "Rentrak"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cqj_dy",
        "entity_name": "Trifork"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b3h9w",
        "entity_name": "Atlassian"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06tx4z",
        "entity_name": "Ubuntu Foundation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h55dn3",
        "entity_name": "AppDynamics"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hhsfhv",
        "entity_name": "New Relic"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0l8my_1",
        "entity_name": "Puppet Labs"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.080796x",
        "entity_name": "SpringSource"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference_sponsor",
          "class": "conferences.conference_sponsor",
          "friendly_name": "Conference sponsor",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.045c7b",
          "class": "conferences.conference_sponsor",
          "friendly_name": "google inc",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "conferences.conference_series.sponsoring_organization",
          "friendly_name": "Sponsoring organization"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "conferences.conference_series.sponsoring_organization",
          "friendly_name": "Sponsoring organization"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_sponsor . \n?x1 :type.object.type :conferences.conference_series . \nVALUES ?x2 { :m.045c7b } \n?x1 :conferences.conference_series.sponsoring_organization ?x0 . \n?x1 :conferences.conference_series.sponsoring_organization ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference_sponsor (JOIN (R conferences.conference_series.sponsoring_organization) (JOIN conferences.conference_series.sponsoring_organization m.045c7b)))",
    "topic_entity": {
      "m.045c7b": "Google"
    }
  },
  {
    "qid": 3205699016000,
    "question": "what gameplay mode is the video game that supports the peripheral r.o.b.?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hjn4",
        "entity_name": "Single-player video game"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.gameplay_mode",
          "class": "cvg.gameplay_mode",
          "friendly_name": "Gameplay Mode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_videogame",
          "class": "cvg.computer_videogame",
          "friendly_name": "Video game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01vtzg",
          "class": "computer.computer_peripheral",
          "friendly_name": "R.O.B.",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.gameplay_mode.games_with_this_mode",
          "friendly_name": "Games with this mode"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.peripherals_supported",
          "friendly_name": "Peripherals supported"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.gameplay_mode . \n?x1 :type.object.type :cvg.computer_videogame . \nVALUES ?x2 { :m.01vtzg } \n?x0 :cvg.gameplay_mode.games_with_this_mode ?x1 . \n?x1 :cvg.computer_videogame.peripherals_supported ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.gameplay_mode (JOIN cvg.gameplay_mode.games_with_this_mode (JOIN cvg.computer_videogame.peripherals_supported m.01vtzg)))",
    "topic_entity": {
      "m.01vtzg": "R.O.B."
    }
  },
  {
    "qid": 3205234005000,
    "question": "what is the conference series that belongs to the same conference event as joseph b. martin conference center?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.011xdkfz",
        "entity_name": "GET Conference"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference",
          "class": "conferences.conference",
          "friendly_name": "Conference event",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.011xdnxm",
          "class": "conferences.conference_venue",
          "friendly_name": "Joseph B. Martin Conference Center",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "conferences.conference_series.conference",
          "friendly_name": "Conferences"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "conferences.conference_venue.conferences",
          "friendly_name": "Conferences"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_series . \n?x1 :type.object.type :conferences.conference . \nVALUES ?x2 { :m.011xdnxm } \n?x0 :conferences.conference_series.conference ?x1 . \n?x2 :conferences.conference_venue.conferences ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference_series (JOIN conferences.conference_series.conference (JOIN (R conferences.conference_venue.conferences) m.011xdnxm)))",
    "topic_entity": {
      "m.011xdnxm": "Joseph B. Martin Conference Center"
    }
  },
  {
    "qid": 3201651003000,
    "question": "alpha-ketoglutaric acid is used as the active ingredient in which category of drug formulation?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hqyt6b",
        "entity_name": "Homeopathic"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "medicine.drug_formulation_category",
          "class": "medicine.drug_formulation_category",
          "friendly_name": "Drug formulation category",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "medicine.drug_formulation",
          "class": "medicine.drug_formulation",
          "friendly_name": "Drug formulation",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04f03",
          "class": "medicine.drug_ingredient",
          "friendly_name": "alpha-Ketoglutaric acid",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "medicine.drug_formulation_category.drug_formulations",
          "friendly_name": "Drug formulations in this category"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "medicine.drug_ingredient.active_ingredient_of_formulation",
          "friendly_name": "Active ingredient of formulation"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.drug_formulation_category . \n?x1 :type.object.type :medicine.drug_formulation . \nVALUES ?x2 { :m.04f03 } \n?x0 :medicine.drug_formulation_category.drug_formulations ?x1 . \n?x2 :medicine.drug_ingredient.active_ingredient_of_formulation ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "medicine"
    ],
    "level": "compositional",
    "s_expression": "(AND medicine.drug_formulation_category (JOIN medicine.drug_formulation_category.drug_formulations (JOIN (R medicine.drug_ingredient.active_ingredient_of_formulation) m.04f03)))",
    "topic_entity": {
      "m.04f03": "alpha-Ketoglutaric acid"
    }
  },
  {
    "qid": 3203411000000,
    "question": "which tld registry registered dotfm?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hsmhj",
        "entity_name": "BRS Media Inc."
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "internet.top_level_domain_registry",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Top Level Domain Registry",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "internet.top_level_domain",
          "class": "internet.top_level_domain",
          "friendly_name": "Top Level Domain",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02hsmn1",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "DotFM",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "internet.top_level_domain_registry.domains",
          "friendly_name": "Domains Registered"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "internet.top_level_domain.registry",
          "friendly_name": "Registry"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.top_level_domain_registry . \n?x1 :type.object.type :internet.top_level_domain . \nVALUES ?x2 { :m.02hsmn1 } \n?x0 :internet.top_level_domain_registry.domains ?x1 . \n?x1 :internet.top_level_domain.registry ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "internet"
    ],
    "level": "compositional",
    "s_expression": "(AND internet.top_level_domain_registry (JOIN internet.top_level_domain_registry.domains (JOIN internet.top_level_domain.registry m.02hsmn1)))",
    "topic_entity": {
      "m.02hsmn1": "DotFM"
    }
  },
  {
    "qid": 3202880003000,
    "question": "compressed format jpeg (exif 2.2) digital cameras use what type of color filter array?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02r8js",
        "entity_name": "Bayer filter"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "digicams.camera_color_filter_array_type",
          "class": "digicams.camera_color_filter_array_type",
          "friendly_name": "Camera Color Filter Array Type",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "digicams.digital_camera",
          "class": "digicams.digital_camera",
          "friendly_name": "Digital Camera",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03q44xr",
          "class": "digicams.camera_compressed_format",
          "friendly_name": "JPEG (EXIF 2.2)",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "digicams.digital_camera.color_filter_array_type",
          "friendly_name": "Color filter array type"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "digicams.camera_compressed_format.cameras",
          "friendly_name": "Cameras"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.camera_color_filter_array_type . \n?x1 :type.object.type :digicams.digital_camera . \nVALUES ?x2 { :m.03q44xr } \n?x1 :digicams.digital_camera.color_filter_array_type ?x0 . \n?x2 :digicams.camera_compressed_format.cameras ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "digicams"
    ],
    "level": "compositional",
    "s_expression": "(AND digicams.camera_color_filter_array_type (JOIN (R digicams.digital_camera.color_filter_array_type) (JOIN (R digicams.camera_compressed_format.cameras) m.03q44xr)))",
    "topic_entity": {
      "m.03q44xr": "JPEG (EXIF 2.2)"
    }
  },
  {
    "qid": 3206434004000,
    "question": "in the measurement system katal, what is the unit of luminance used?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02sj43m",
        "entity_name": "Candela per square metre"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.luminance_unit",
          "class": "measurement_unit.luminance_unit",
          "friendly_name": "Unit of Luminance",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04cph",
          "class": "measurement_unit.catalytic_activity_unit",
          "friendly_name": "Katal",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.luminance_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.catalytic_activity_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.luminance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.04cph } \n?x0 :measurement_unit.luminance_unit.measurement_system ?x1 . \n?x2 :measurement_unit.catalytic_activity_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.luminance_unit (JOIN measurement_unit.luminance_unit.measurement_system (JOIN (R measurement_unit.catalytic_activity_unit.measurement_system) m.04cph)))",
    "topic_entity": {
      "m.04cph": "Katal"
    }
  },
  {
    "qid": 4301886001000,
    "question": "what comic book publisher has published comic book series in the martial art genre?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03pnvq",
        "entity_name": "Shueisha"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "comic_books.comic_book_publisher",
          "class": "comic_books.comic_book_publisher",
          "friendly_name": "Comic Book Publisher",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "comic_books.comic_book_series",
          "class": "comic_books.comic_book_series",
          "friendly_name": "Comic Book Series",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "comic_books.comic_book_genre",
          "class": "comic_books.comic_book_genre",
          "friendly_name": "Comic Book Genre",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.04xsv",
          "class": "media_common.media_genre_equivalent_topic",
          "friendly_name": "martial art",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "comic_books.comic_book_publisher.comic_book_series_published",
          "friendly_name": "Comic Book Series Published"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "comic_books.comic_book_series.genre",
          "friendly_name": "Genre"
        },
        {
          "start": 2,
          "end": 3,
          "relation": "media_common.media_genre.equivalent_topic",
          "friendly_name": "Equivalent topic"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_publisher . \n?x1 :type.object.type :comic_books.comic_book_series . \n?x2 :type.object.type :comic_books.comic_book_genre . \nVALUES ?x3 { :m.04xsv } \n?x0 :comic_books.comic_book_publisher.comic_book_series_published ?x1 . \n?x1 :comic_books.comic_book_series.genre ?x2 . \n?x2 :media_common.media_genre.equivalent_topic ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "media_common",
      "comic_books"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND comic_books.comic_book_publisher (JOIN comic_books.comic_book_publisher.comic_book_series_published (JOIN comic_books.comic_book_series.genre (JOIN media_common.media_genre.equivalent_topic m.04xsv))))",
    "topic_entity": {
      "m.04xsv": "Martial arts"
    }
  },
  {
    "qid": 3204469016000,
    "question": "what music video performer's performances are portrayed in clowns?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01whqx7",
        "entity_name": "Marco Pirroni"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "music.music_video_performer",
          "class": "music.music_video_performer",
          "friendly_name": "Music video performer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "music.music_video_performance",
          "class": "music.music_video_performance",
          "friendly_name": "Music video performance",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01sfl",
          "class": "music.music_video_character",
          "friendly_name": "clowns",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "music.music_video_performer.music_video_performances",
          "friendly_name": "Music video performances"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "music.music_video_character.portrayed_in_music_videos",
          "friendly_name": "Portrayed in music videos"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.music_video_performer . \n?x1 :type.object.type :music.music_video_performance . \nVALUES ?x2 { :m.01sfl } \n?x0 :music.music_video_performer.music_video_performances ?x1 . \n?x2 :music.music_video_character.portrayed_in_music_videos ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "music"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND music.music_video_performer (JOIN music.music_video_performer.music_video_performances (JOIN (R music.music_video_character.portrayed_in_music_videos) m.01sfl)))",
    "topic_entity": {
      "m.01sfl": "Clown"
    }
  },
  {
    "qid": 3204660006000,
    "question": "steve buscemi was the same ethnicity of which astronaut ?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01vmsb",
        "entity_name": "James Irwin"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "spaceflight.astronaut",
          "class": "spaceflight.astronaut",
          "friendly_name": "Astronaut",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "people.ethnicity",
          "class": "people.ethnicity",
          "friendly_name": "Ethnicity",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01wbg84",
          "class": "tv.tv_director",
          "friendly_name": "Steve Buscemi",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.ethnicity",
          "friendly_name": "Ethnicity"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "people.person.ethnicity",
          "friendly_name": "Ethnicity"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.astronaut . \n?x1 :type.object.type :people.ethnicity . \nVALUES ?x2 { :m.01wbg84 } \n?x0 :people.person.ethnicity ?x1 . \n?x2 :people.person.ethnicity ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "people"
    ],
    "level": "compositional",
    "s_expression": "(AND spaceflight.astronaut (JOIN people.person.ethnicity (JOIN (R people.person.ethnicity) m.01wbg84)))",
    "topic_entity": {
      "m.01wbg84": "Steve Buscemi"
    }
  },
  {
    "qid": 3203279012000,
    "question": "lehmann is one of the leaders of which wine producer?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.06b7hjh",
        "entity_name": "Peter Lehmann Wines"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "wine.wine_producer",
          "class": "wine.wine_producer",
          "friendly_name": "Wine Producer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "organization.leadership",
          "class": "organization.leadership",
          "friendly_name": "Organization leadership",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.017x71",
          "class": "business.board_member",
          "friendly_name": "lehmann",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "organization.leadership.organization",
          "friendly_name": "Organization"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "organization.leadership.person",
          "friendly_name": "Person"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :wine.wine_producer . \n?x1 :type.object.type :organization.leadership . \nVALUES ?x2 { :m.017x71 } \n?x1 :organization.leadership.organization ?x0 . \n?x1 :organization.leadership.person ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "organization"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND wine.wine_producer (JOIN (R organization.leadership.organization) (JOIN organization.leadership.person m.017x71)))",
    "topic_entity": {
      "m.017x71": "Peter Lehmann"
    }
  },
  {
    "qid": 3204500005000,
    "question": "what is the gameplay mode of the musical game that has the version of wacky worlds?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hjn4",
        "entity_name": "Single-player video game"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.gameplay_mode",
          "class": "cvg.gameplay_mode",
          "friendly_name": "Gameplay Mode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.musical_game",
          "class": "cvg.musical_game",
          "friendly_name": "Musical Game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02hm7kg",
          "class": "cvg.game_version",
          "friendly_name": "Wacky Worlds",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.gameplay_mode.games_with_this_mode",
          "friendly_name": "Games with this mode"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.versions",
          "friendly_name": "Versions"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.gameplay_mode . \n?x1 :type.object.type :cvg.musical_game . \nVALUES ?x2 { :m.02hm7kg } \n?x0 :cvg.gameplay_mode.games_with_this_mode ?x1 . \n?x1 :cvg.computer_videogame.versions ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.gameplay_mode (JOIN cvg.gameplay_mode.games_with_this_mode (JOIN cvg.computer_videogame.versions m.02hm7kg)))",
    "topic_entity": {
      "m.02hm7kg": "Wacky Worlds"
    }
  },
  {
    "qid": 3205234004000,
    "question": "what is the conference series that belongs to the same conference event as omni providence hotel?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fcglc",
        "entity_name": "SIGMOD"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference",
          "class": "conferences.conference",
          "friendly_name": "Conference event",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01xmg_t",
          "class": "conferences.conference_venue",
          "friendly_name": "Omni Providence Hotel",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "conferences.conference_series.conference",
          "friendly_name": "Conferences"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "conferences.conference_venue.conferences",
          "friendly_name": "Conferences"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_series . \n?x1 :type.object.type :conferences.conference . \nVALUES ?x2 { :m.01xmg_t } \n?x0 :conferences.conference_series.conference ?x1 . \n?x2 :conferences.conference_venue.conferences ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference_series (JOIN conferences.conference_series.conference (JOIN (R conferences.conference_venue.conferences) m.01xmg_t)))",
    "topic_entity": {
      "m.01xmg_t": "Omni Providence Hotel"
    }
  },
  {
    "qid": 3201416009000,
    "question": "in the competition women race at 2012 sutki begom ultramarathon, what sport medal do you win?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lpp7",
        "entity_name": "Gold medal"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq5w",
        "entity_name": "Silver medal"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02lq67",
        "entity_name": "Bronze medal"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "sports.sport_medal",
          "class": "sports.sport_medal",
          "friendly_name": "Sport Medal",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "sports.competitor_competition_relationship",
          "class": "sports.competitor_competition_relationship",
          "friendly_name": "Competitor/competition relationship",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0p63lsg",
          "class": "sports.tournament_event_competition",
          "friendly_name": "Women race at 2012 Sutki Begom ultramarathon",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "sports.sport_medal.medal_winners",
          "friendly_name": "Medal winners"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "sports.competitor_competition_relationship.competition",
          "friendly_name": "Competition"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.sport_medal . \n?x1 :type.object.type :sports.competitor_competition_relationship . \nVALUES ?x2 { :m.0p63lsg } \n?x0 :sports.sport_medal.medal_winners ?x1 . \n?x1 :sports.competitor_competition_relationship.competition ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "sports"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND sports.sport_medal (JOIN sports.sport_medal.medal_winners (JOIN sports.competitor_competition_relationship.competition m.0p63lsg)))",
    "topic_entity": {
      "m.0p63lsg": "Women race at 2012 Sutki Begom ultramarathon"
    }
  },
  {
    "qid": 4300337004000,
    "question": "john oliver la gorce was the editor on the editor for what journal?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01hddb",
        "entity_name": "National Geographic"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "book.journal",
          "class": "book.journal",
          "friendly_name": "Journal",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "book.editorial_tenure",
          "class": "book.editorial_tenure",
          "friendly_name": "Editorial tenure",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.012z2ncg",
          "class": "book.periodical_editor",
          "friendly_name": "John Oliver La Gorce",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02h6676",
          "class": "book.editor_title",
          "friendly_name": "Editor",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "book.periodical.editorial_staff",
          "friendly_name": "Editorial staff"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "book.editorial_tenure.editor",
          "friendly_name": "Editor"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "book.editorial_tenure.title",
          "friendly_name": "Title"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.journal . \n?x1 :type.object.type :book.editorial_tenure . \nVALUES ?x2 { :m.012z2ncg } \nVALUES ?x3 { :m.02h6676 } \n?x0 :book.periodical.editorial_staff ?x1 . \n?x1 :book.editorial_tenure.editor ?x2 . \n?x1 :book.editorial_tenure.title ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "book"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND book.journal (JOIN book.periodical.editorial_staff (AND (JOIN book.editorial_tenure.editor m.012z2ncg) (JOIN book.editorial_tenure.title m.02h6676))))",
    "topic_entity": {
      "m.012z2ncg": "John Oliver La Gorce",
      "m.02h6676": "Editor"
    }
  },
  {
    "qid": 3203478009000,
    "question": "name the basketball player who majors in marketing.",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.05k1d_",
        "entity_name": "John Calipari"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "basketball.basketball_player",
          "class": "basketball.basketball_player",
          "friendly_name": "Basketball Player",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "education.education",
          "class": "education.education",
          "friendly_name": "Education",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0g4gr",
          "class": "education.field_of_study",
          "friendly_name": "Marketing",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "education.education.student",
          "friendly_name": "Student"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "education.field_of_study.students_majoring",
          "friendly_name": "Students majoring in this field"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :basketball.basketball_player . \n?x1 :type.object.type :education.education . \nVALUES ?x2 { :m.0g4gr } \n?x1 :education.education.student ?x0 . \n?x2 :education.field_of_study.students_majoring ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "education"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND basketball.basketball_player (JOIN (R education.education.student) (JOIN (R education.field_of_study.students_majoring) m.0g4gr)))",
    "topic_entity": {
      "m.0g4gr": "Marketing"
    }
  },
  {
    "qid": 3204476005000,
    "question": "what unit of energy is of the same measurement system as cubic meters per second?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.1224btsg",
        "entity_name": "Kilojoule"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04570",
        "entity_name": "Joule"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.energy_unit",
          "class": "measurement_unit.energy_unit",
          "friendly_name": "Unit of Energy",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0gbw2l",
          "class": "measurement_unit.unit_of_volumetric_flow_rate",
          "friendly_name": "cubic meters per second",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.energy_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.volumetric_flow_rate_units",
          "friendly_name": "Volumetric Flow Rate Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.energy_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0gbw2l } \n?x0 :measurement_unit.energy_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.volumetric_flow_rate_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.energy_unit (JOIN measurement_unit.energy_unit.measurement_system (JOIN measurement_unit.measurement_system.volumetric_flow_rate_units m.0gbw2l)))",
    "topic_entity": {
      "m.0gbw2l": "Cubic metre per second"
    }
  },
  {
    "qid": 4302099003000,
    "question": "what storage type is supported by eos 5d mark ii and those with color filter array of bayer?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01rlj7",
        "entity_name": "CompactFlash"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01xrg0v",
        "entity_name": "Compact Flash (Type I)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01xrg67",
        "entity_name": "Compact Flash (Type II)"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "digicams.camera_storage_type",
          "class": "digicams.camera_storage_type",
          "friendly_name": "Camera Storage Type",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "entity",
          "id": "m.04n7l7q",
          "class": "digicams.digital_camera",
          "friendly_name": "eos 5d mark ii",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "digicams.digital_camera",
          "class": "digicams.digital_camera",
          "friendly_name": "Digital Camera",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02r8js",
          "class": "digicams.camera_color_filter_array_type",
          "friendly_name": "bayer",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "digicams.camera_storage_type.compatible_cameras",
          "friendly_name": "Compatible cameras"
        },
        {
          "start": 2,
          "end": 0,
          "relation": "digicams.digital_camera.supported_storage_types",
          "friendly_name": "Supported Storage Types"
        },
        {
          "start": 2,
          "end": 3,
          "relation": "digicams.digital_camera.color_filter_array_type",
          "friendly_name": "Color filter array type"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.camera_storage_type . \nVALUES ?x1 { :m.04n7l7q } \n?x2 :type.object.type :digicams.digital_camera . \nVALUES ?x3 { :m.02r8js } \n?x0 :digicams.camera_storage_type.compatible_cameras ?x1 . \n?x2 :digicams.digital_camera.supported_storage_types ?x0 . \n?x2 :digicams.digital_camera.color_filter_array_type ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "digicams"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.04n7l7q) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
    "topic_entity": {
      "m.04n7l7q": "Canon EOS 5D Mark II",
      "m.02r8js": "Bayer filter"
    }
  },
  {
    "qid": 3200796004000,
    "question": "which type of fictional setting is the setting type of a fictional setting of a death in the family, part one?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01n32",
        "entity_name": "City"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "fictional_universe.type_of_fictional_setting",
          "class": "fictional_universe.type_of_fictional_setting",
          "friendly_name": "Type of fictional setting",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "fictional_universe.fictional_setting",
          "class": "fictional_universe.fictional_setting",
          "friendly_name": "Fictional Setting",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.036kdkt",
          "class": "comic_books.comic_book_story",
          "friendly_name": "A Death in the Family, Part One",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "fictional_universe.fictional_setting.setting_type",
          "friendly_name": "Setting type"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "fictional_universe.fictional_setting.works_set_here",
          "friendly_name": "Fictional Works Set Here"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.type_of_fictional_setting . \n?x1 :type.object.type :fictional_universe.fictional_setting . \nVALUES ?x2 { :m.036kdkt } \n?x1 :fictional_universe.fictional_setting.setting_type ?x0 . \n?x1 :fictional_universe.fictional_setting.works_set_here ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "fictional_universe"
    ],
    "level": "compositional",
    "s_expression": "(AND fictional_universe.type_of_fictional_setting (JOIN (R fictional_universe.fictional_setting.setting_type) (JOIN fictional_universe.fictional_setting.works_set_here m.036kdkt)))",
    "topic_entity": {
      "m.036kdkt": "A Death in the Family, Part One"
    }
  },
  {
    "qid": 3200528000000,
    "question": "what geographical scope belongs to the conference series that is the subject of qa and testing on embedded systems?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0htqt",
        "entity_name": "Bilbao"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "base.events.geographical_scope",
          "class": "base.events.geographical_scope",
          "friendly_name": "Geographical scope",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.062sw2n",
          "class": "conferences.conference_subject",
          "friendly_name": "QA and Testing on Embedded Systems",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "conferences.conference_series.geographical_scope",
          "friendly_name": "Geographical scope"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "conferences.conference_series.subject",
          "friendly_name": "Subject"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.events.geographical_scope . \n?x1 :type.object.type :conferences.conference_series . \nVALUES ?x2 { :m.062sw2n } \n?x1 :conferences.conference_series.geographical_scope ?x0 . \n?x1 :conferences.conference_series.subject ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND base.events.geographical_scope (JOIN (R conferences.conference_series.geographical_scope) (JOIN conferences.conference_series.subject m.062sw2n)))",
    "topic_entity": {
      "m.062sw2n": "QA and Testing on Embedded Systems"
    }
  },
  {
    "qid": 4301766003000,
    "question": "what is the name of what was the most recent browser released by the creators of cv?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04b32v",
        "entity_name": "Internet Explorer for Mac"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.web_browser",
          "class": "computer.web_browser",
          "friendly_name": "Web browser",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.software_developer",
          "class": "computer.software_developer",
          "friendly_name": "Software Developer",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02l0fc1",
          "class": "computer.file_format",
          "friendly_name": "Cv",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.datetime",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.software_developer.software",
          "friendly_name": "Software"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "computer.file_format.format_creator",
          "friendly_name": "Format Creator"
        },
        {
          "start": 0,
          "end": 3,
          "relation": "computer.software.first_released",
          "friendly_name": "First Released"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.web_browser . \n?x1 :type.object.type :computer.software_developer . \nVALUES ?x2 { :m.02l0fc1 } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :computer.web_browser . \n?y1 :type.object.type :computer.software_developer . \nVALUES ?y2 { :m.02l0fc1 } \n?y1 :computer.software_developer.software ?y0 . \n?y2 :computer.file_format.format_creator ?y1 . \n?y0 :computer.software.first_released ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :computer.software_developer.software ?x0 . \n?x2 :computer.file_format.format_creator ?x1 . \n?x0 :computer.software.first_released ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "compositional",
    "s_expression": "(ARGMAX (AND computer.web_browser (JOIN (R computer.software_developer.software) (JOIN (R computer.file_format.format_creator) m.02l0fc1))) computer.software.first_released)",
    "topic_entity": {
      "m.02l0fc1": "Cv"
    }
  },
  {
    "qid": 3206530005000,
    "question": "what dimension is measured by a measuring instrument with a subclass of integrated electronic piezoelectric accelerometer?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03qccrf",
        "entity_name": "Proper acceleration"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.dimension",
          "class": "measurement_unit.dimension",
          "friendly_name": "Dimension",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measuring_instrument",
          "class": "measurement_unit.measuring_instrument",
          "friendly_name": "Measuring Instrument",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.063y7wn",
          "class": "measurement_unit.measuring_instrument",
          "friendly_name": "Integrated electronic piezoelectric accelerometer",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measuring_instrument.dimension_measured",
          "friendly_name": "Dimension measured"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measuring_instrument.subclasses",
          "friendly_name": "Subclasses"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.dimension . \n?x1 :type.object.type :measurement_unit.measuring_instrument . \nVALUES ?x2 { :m.063y7wn } \n?x1 :measurement_unit.measuring_instrument.dimension_measured ?x0 . \n?x1 :measurement_unit.measuring_instrument.subclasses ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.dimension (JOIN (R measurement_unit.measuring_instrument.dimension_measured) (JOIN measurement_unit.measuring_instrument.subclasses m.063y7wn)))",
    "topic_entity": {
      "m.063y7wn": "Integrated electronic piezoelectric accelerometer"
    }
  },
  {
    "qid": 3204636001000,
    "question": "what is the name of the travel destination where mircea cărtărescu is published?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.096gm",
        "entity_name": "Bucharest"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "travel.travel_destination",
          "class": "travel.travel_destination",
          "friendly_name": "Travel destination",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "book.book_edition",
          "class": "book.book_edition",
          "friendly_name": "Book Edition",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.09qbn3",
          "class": "book.audio_book_reader",
          "friendly_name": "Mircea Cărtărescu",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "book.book_edition.place_of_publication",
          "friendly_name": "Place of publication"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "book.audio_book_reader.audio_books_read",
          "friendly_name": "Audio books read"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :travel.travel_destination . \n?x1 :type.object.type :book.book_edition . \nVALUES ?x2 { :m.09qbn3 } \n?x1 :book.book_edition.place_of_publication ?x0 . \n?x2 :book.audio_book_reader.audio_books_read ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "book"
    ],
    "level": "compositional",
    "s_expression": "(AND travel.travel_destination (JOIN (R book.book_edition.place_of_publication) (JOIN (R book.audio_book_reader.audio_books_read) m.09qbn3)))",
    "topic_entity": {
      "m.09qbn3": "Mircea Cărtărescu"
    }
  },
  {
    "qid": 3205368000000,
    "question": "what kind unit of length is associated with a measurement system whose mass units include atomic mass unit?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n0_",
        "entity_name": "Astronomical unit"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.distance_unit",
          "class": "measurement_unit.distance_unit",
          "friendly_name": "Unit of Length",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0bn2l",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Atomic mass unit",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.distance_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.weight_units",
          "friendly_name": "Mass Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.distance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0bn2l } \n?x0 :measurement_unit.distance_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.weight_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.distance_unit (JOIN measurement_unit.distance_unit.measurement_system (JOIN measurement_unit.measurement_system.weight_units m.0bn2l)))",
    "topic_entity": {
      "m.0bn2l": "Atomic mass unit"
    }
  },
  {
    "qid": 3205327011000,
    "question": "what is broadcast genre of radio programs that have subject of great sichuan earthquake?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.052j8s",
        "entity_name": "Breaking news"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05jhg",
        "entity_name": "News"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "broadcast.genre",
          "class": "broadcast.genre",
          "friendly_name": "Broadcast Genre",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "radio.radio_program",
          "class": "radio.radio_program",
          "friendly_name": "Radio program",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.043ptpq",
          "class": "radio.radio_subject",
          "friendly_name": "great sichuan earthquake",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "broadcast.content.genre",
          "friendly_name": "Genres"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "radio.radio_program.subjects",
          "friendly_name": "Subject"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.genre . \n?x1 :type.object.type :radio.radio_program . \nVALUES ?x2 { :m.043ptpq } \n?x1 :broadcast.content.genre ?x0 . \n?x1 :radio.radio_program.subjects ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "radio",
      "broadcast"
    ],
    "level": "zero-shot",
    "s_expression": "(AND broadcast.genre (JOIN (R broadcast.content.genre) (JOIN radio.radio_program.subjects m.043ptpq)))",
    "topic_entity": {
      "m.043ptpq": "2008 Sichuan earthquake"
    }
  },
  {
    "qid": 3203410001000,
    "question": "what is the name of the ship designer who designed a ship that was designed by angus primrose?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.120vzx04",
        "entity_name": "John Illingworth"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "boats.ship_designer",
          "class": "boats.ship_designer",
          "friendly_name": "Ship Designer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "boats.ship",
          "class": "boats.ship",
          "friendly_name": "Ship",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03h4lgs",
          "class": "boats.ship_designer",
          "friendly_name": "Angus Primrose",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "boats.ship_designer.boats_designed",
          "friendly_name": "Boats Designed"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "boats.ship.designer",
          "friendly_name": "Designer"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :boats.ship_designer . \n?x1 :type.object.type :boats.ship . \nVALUES ?x2 { :m.03h4lgs } \n?x0 :boats.ship_designer.boats_designed ?x1 . \n?x1 :boats.ship.designer ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "boats"
    ],
    "level": "compositional",
    "s_expression": "(AND boats.ship_designer (JOIN boats.ship_designer.boats_designed (JOIN boats.ship.designer m.03h4lgs)))",
    "topic_entity": {
      "m.03h4lgs": "Angus Primrose"
    }
  },
  {
    "qid": 3201324004000,
    "question": "amtrak rail owns a what locomotive?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h3qwfr",
        "entity_name": "Chesapeake"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "rail.locomotive",
          "class": "rail.locomotive",
          "friendly_name": "Locomotive",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "rail.locomotive_ownership",
          "class": "rail.locomotive_ownership",
          "friendly_name": "Locomotive ownership",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0dn_w",
          "class": "rail.locomotive_owner",
          "friendly_name": "amtrak rail",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "rail.locomotive_ownership.locomotive",
          "friendly_name": "Locomotive"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "rail.locomotive_ownership.owner",
          "friendly_name": "Owner"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :rail.locomotive . \n?x1 :type.object.type :rail.locomotive_ownership . \nVALUES ?x2 { :m.0dn_w } \n?x1 :rail.locomotive_ownership.locomotive ?x0 . \n?x1 :rail.locomotive_ownership.owner ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "rail"
    ],
    "level": "zero-shot",
    "s_expression": "(AND rail.locomotive (JOIN (R rail.locomotive_ownership.locomotive) (JOIN rail.locomotive_ownership.owner m.0dn_w)))",
    "topic_entity": {
      "m.0dn_w": "Amtrak"
    }
  },
  {
    "qid": 3204498009000,
    "question": "which video game rating includes the content descriptor of language?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8b",
        "entity_name": "Everyone"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl98",
        "entity_name": "Mature"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8x",
        "entity_name": "Everyone 10+"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl9n",
        "entity_name": "Rating Pending"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl92",
        "entity_name": "Adults Only"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8q",
        "entity_name": "Teen"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl9g",
        "entity_name": "Kids to Adults"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.042zl8j",
        "entity_name": "Early Childhood"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_rating",
          "class": "cvg.computer_game_rating",
          "friendly_name": "Video Game Rating",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_game_rating_system",
          "class": "cvg.computer_game_rating_system",
          "friendly_name": "Video Game Rating System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.042zls7",
          "class": "cvg.computer_game_content_descriptor",
          "friendly_name": "Language",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.computer_game_rating.rating_system",
          "friendly_name": "Rating system"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_game_rating_system.content_descriptors",
          "friendly_name": "Content descriptors"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_rating . \n?x1 :type.object.type :cvg.computer_game_rating_system . \nVALUES ?x2 { :m.042zls7 } \n?x0 :cvg.computer_game_rating.rating_system ?x1 . \n?x1 :cvg.computer_game_rating_system.content_descriptors ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_rating (JOIN cvg.computer_game_rating.rating_system (JOIN cvg.computer_game_rating_system.content_descriptors m.042zls7)))",
    "topic_entity": {
      "m.042zls7": "Language"
    }
  },
  {
    "qid": 3200371000000,
    "question": "what conference event has a conference venue that is associated with a conference e3 2011?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j9lvpx",
        "entity_name": "Electronic Entertainment Expo 2012"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0vpt98m",
        "entity_name": "Electronic Entertainment Expo 2013"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05zkqyz",
        "entity_name": "Electronic Entertainment Expo 2009"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09v7jkb",
        "entity_name": "Electronic Entertainment Expo 2010"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.010fchkz",
        "entity_name": "Electronic Entertainment Expo 2014"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference",
          "class": "conferences.conference",
          "friendly_name": "Conference event",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference_venue",
          "class": "conferences.conference_venue",
          "friendly_name": "Conference venue",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0gmghqr",
          "class": "conferences.conference",
          "friendly_name": "e3 2011",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "conferences.conference.venue",
          "friendly_name": "Venue"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "conferences.conference_venue.conferences",
          "friendly_name": "Conferences"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference . \n?x1 :type.object.type :conferences.conference_venue . \nVALUES ?x2 { :m.0gmghqr } \n?x0 :conferences.conference.venue ?x1 . \n?x1 :conferences.conference_venue.conferences ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference (JOIN conferences.conference.venue (JOIN conferences.conference_venue.conferences m.0gmghqr)))",
    "topic_entity": {
      "m.0gmghqr": "Electronic Entertainment Expo 2011"
    }
  },
  {
    "qid": 3201311014000,
    "question": "what government agency is founded by someone who founded us special forces? ",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.019574",
        "entity_name": "Peace Corps"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.011hwh",
        "entity_name": "United States Agency for International Development"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04gp8px",
        "entity_name": "Federal Executive Boards"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09_gb8",
        "entity_name": "Arms Control and Disarmament Agency"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "government.government_agency",
          "class": "government.government_agency",
          "friendly_name": "Government Agency",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "organization.organization_founder",
          "class": "organization.organization_founder",
          "friendly_name": "Organization founder",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01vf1h",
          "class": "military.armed_force",
          "friendly_name": "us special forces",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "organization.organization.founders",
          "friendly_name": "Founders"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "organization.organization.founders",
          "friendly_name": "Founders"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :government.government_agency . \n?x1 :type.object.type :organization.organization_founder . \nVALUES ?x2 { :m.01vf1h } \n?x0 :organization.organization.founders ?x1 . \n?x2 :organization.organization.founders ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "organization"
    ],
    "level": "compositional",
    "s_expression": "(AND government.government_agency (JOIN organization.organization.founders (JOIN (R organization.organization.founders) m.01vf1h)))",
    "topic_entity": {
      "m.01vf1h": "Special Forces"
    }
  },
  {
    "qid": 3205686005000,
    "question": "an electric field strength units of volt per metre has what unit of area measurement system?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jljd",
        "entity_name": "Square kilometer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bshsw",
        "entity_name": "Square meter"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.area_unit",
          "class": "measurement_unit.area_unit",
          "friendly_name": "Unit of Area",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj52k",
          "class": "measurement_unit.electric_field_strength_unit",
          "friendly_name": "Volt per metre",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.area_units",
          "friendly_name": "Area Units"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.electric_field_strength_units",
          "friendly_name": "Electric Field Strength Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.area_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj52k } \n?x1 :measurement_unit.measurement_system.area_units ?x0 . \n?x1 :measurement_unit.measurement_system.electric_field_strength_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.area_unit (JOIN (R measurement_unit.measurement_system.area_units) (JOIN measurement_unit.measurement_system.electric_field_strength_units m.02sj52k)))",
    "topic_entity": {
      "m.02sj52k": "Volt per metre"
    }
  },
  {
    "qid": 3206507006000,
    "question": "what is the name of the programming language that inspired the language developed by dennis macalistair ritchie?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01kbt7",
        "entity_name": "D"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09gbxjr",
        "entity_name": "Go"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02jnyh",
        "entity_name": "Draco"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02wz_qj",
        "entity_name": "Vala"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08yy56",
        "entity_name": "ColdC"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07sbkfb",
        "entity_name": "Java"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05zrn",
        "entity_name": "Perl"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07657k",
        "entity_name": "C#"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jgqg",
        "entity_name": "C++"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02p97",
        "entity_name": "JavaScript"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05q31",
        "entity_name": "Objective-C"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.060kv",
        "entity_name": "PHP"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lxk7",
        "entity_name": "Pike"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0zc0qfm",
        "entity_name": "P*"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0q2c",
        "entity_name": "AWK"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01j9gq",
        "entity_name": "Limbo"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dsbpg6",
        "entity_name": "Rust"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0k3n166",
        "entity_name": "Seed7"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0508gj",
        "entity_name": "C--"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04yf9ks",
        "entity_name": "Kaya"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05gb7t",
        "entity_name": "AMPL"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.067916",
        "entity_name": "Alef"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0340d7",
        "entity_name": "Game Maker Language"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09sj9r",
        "entity_name": "BitC"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.063yy4c",
        "entity_name": "CLACL"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09gdqsb",
        "entity_name": "Newsqueak"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0vshxf6",
        "entity_name": "BAIL"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06svrt",
        "entity_name": "SAC programming language"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05c2cjz",
        "entity_name": "Vim script"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.019syg",
        "entity_name": "ECMAScript"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02npry",
        "entity_name": "Processing"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02r51yv",
        "entity_name": "Aikido Programming Language"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03nk21",
        "entity_name": "LPC"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03pxm2",
        "entity_name": "S"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03r1wd",
        "entity_name": "Claire"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06mmmy",
        "entity_name": "Ferite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06z3b2",
        "entity_name": "Yoix"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gh50t7",
        "entity_name": "Alpoca"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gh8h6w",
        "entity_name": "Monkey X"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gsfll",
        "entity_name": "Extensible Embeddable Language"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j3djl7",
        "entity_name": "Julia"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.047r16w",
        "entity_name": "PCASTL"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01zzd8",
        "entity_name": "S-Lang"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03m5s2",
        "entity_name": "ZPL"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ddg_p_",
        "entity_name": "Cilk Plus"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dndhc",
        "entity_name": "Split-C"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05tthtg",
        "entity_name": "Corba IDL"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0521z",
        "entity_name": "MOO"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0y51ypv",
        "entity_name": "Hoon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03h9tz",
        "entity_name": "NWScript"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.069g7",
        "entity_name": "QuakeC"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09kns0",
        "entity_name": "VisSim"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.033jmv",
        "entity_name": "Joy"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.120ldz4j",
        "entity_name": "null"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bgnn8",
        "entity_name": "Nickle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0x21wvz",
        "entity_name": "Potion"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03gxzs",
        "entity_name": "MIVA Script"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03s8dh",
        "entity_name": "Cilk"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fs5n",
        "entity_name": "SISAL"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06ds0_",
        "entity_name": "Stackless Python"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0wyrdhm",
        "entity_name": "Nemo"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h3vb",
        "entity_name": "Verilog"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0428xx",
        "entity_name": "Unified Parallel C"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.programming_language",
          "class": "computer.programming_language",
          "friendly_name": "Programming Language",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.programming_language",
          "class": "computer.programming_language",
          "friendly_name": "Programming Language",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02933",
          "class": "computer.programming_language_designer",
          "friendly_name": "dennis macalistair ritchie",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.programming_language.influenced",
          "friendly_name": "Influenced"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "computer.programming_language_designer.languages_designed",
          "friendly_name": "Languages Designed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.programming_language . \n?x1 :type.object.type :computer.programming_language . \nVALUES ?x2 { :m.02933 } \n?x1 :computer.programming_language.influenced ?x0 . \n?x2 :computer.programming_language_designer.languages_designed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_designer.languages_designed) m.02933)))",
    "topic_entity": {
      "m.02933": "Dennis Ritchie"
    }
  },
  {
    "qid": 3204433014000,
    "question": "what is the name of the file format that has the same genre as the aixm?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0310tv",
        "entity_name": "Digital raster graphic"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01cxlb",
        "entity_name": "Geography Markup Language"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02519n",
        "entity_name": "USGS DEM"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02692r4",
        "entity_name": "NavPix"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027vnyf",
        "entity_name": "Esri grid"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.030p9c",
        "entity_name": "Spatial Data Transfer Standard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.030vrw",
        "entity_name": "GeoTIFF"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.032vq2",
        "entity_name": "Topologically Integrated Geographic Encoding and Referencing"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03qk2d",
        "entity_name": "Geographic Data Files"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04_5tp",
        "entity_name": "National Transfer Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04zw5n",
        "entity_name": "Geodatabase"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.051fhm",
        "entity_name": "Geotagged photograph"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0675jp",
        "entity_name": "MapInfo Interchange Format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06pqd9",
        "entity_name": "Keyhole Markup Language"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0871pw",
        "entity_name": "MrSID"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08kg7v",
        "entity_name": "Controlled image base"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08kg97",
        "entity_name": "DTED"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0910mb",
        "entity_name": "ECW"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ftkwj",
        "entity_name": "Well-known text"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g3dzx",
        "entity_name": "MapInfo TAB format"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h85c",
        "entity_name": "World file"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.081nyr",
        "entity_name": "Shapefile"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0db5pk",
        "entity_name": "GDAL"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.file_format",
          "class": "computer.file_format",
          "friendly_name": "File Format",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.file_format_genre",
          "class": "computer.file_format_genre",
          "friendly_name": "File Format Genre",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0277l4_",
          "class": "computer.file_format",
          "friendly_name": "AIXM",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.file_format_genre.file_formats",
          "friendly_name": "File Formats"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "computer.file_format.genre",
          "friendly_name": "Genre"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.file_format . \n?x1 :type.object.type :computer.file_format_genre . \nVALUES ?x2 { :m.0277l4_ } \n?x1 :computer.file_format_genre.file_formats ?x0 . \n?x2 :computer.file_format.genre ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "compositional",
    "s_expression": "(AND computer.file_format (JOIN (R computer.file_format_genre.file_formats) (JOIN (R computer.file_format.genre) m.0277l4_)))",
    "topic_entity": {
      "m.0277l4_": "AIXM"
    }
  },
  {
    "qid": 3201487001000,
    "question": "what kinds of amusement rides can be found in galaxyland?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.010l12",
        "entity_name": "Roller coaster"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.017rgb",
        "entity_name": "Ferris wheel"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06y4xh",
        "entity_name": "Simulator ride"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "amusement_parks.ride_type",
          "class": "amusement_parks.ride_type",
          "friendly_name": "Amusement Ride Type",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "amusement_parks.ride",
          "class": "amusement_parks.ride",
          "friendly_name": "Amusement Ride",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05sb9f",
          "class": "amusement_parks.park",
          "friendly_name": "Galaxyland",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "amusement_parks.ride.ride_type",
          "friendly_name": "Ride Type"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "amusement_parks.ride.park",
          "friendly_name": "Park"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride_type . \n?x1 :type.object.type :amusement_parks.ride . \nVALUES ?x2 { :m.05sb9f } \n?x1 :amusement_parks.ride.ride_type ?x0 . \n?x1 :amusement_parks.ride.park ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "amusement_parks"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND amusement_parks.ride_type (JOIN (R amusement_parks.ride.ride_type) (JOIN amusement_parks.ride.park m.05sb9f)))",
    "topic_entity": {
      "m.05sb9f": "Galaxyland"
    }
  },
  {
    "qid": 3203081003000,
    "question": "harvard provides what type of education?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02ptsy",
        "entity_name": "Jeffrey A. Hoffman"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03l6_",
        "entity_name": "Harrison Schmitt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01vm5r",
        "entity_name": "Jerome Apt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02wtcv",
        "entity_name": "Richard M. Linnehan"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0731dh",
        "entity_name": "Stephanie Wilson"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gxc8m",
        "entity_name": "Robert Satcher"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02d1lg",
        "entity_name": "Michael López-Alegría"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "spaceflight.astronaut",
          "class": "spaceflight.astronaut",
          "friendly_name": "Astronaut",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "education.education",
          "class": "education.education",
          "friendly_name": "Education",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03ksy",
          "class": "education.university",
          "friendly_name": "harvard",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.education",
          "friendly_name": "Education"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "education.education.institution",
          "friendly_name": "Institution"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.astronaut . \n?x1 :type.object.type :education.education . \nVALUES ?x2 { :m.03ksy } \n?x0 :people.person.education ?x1 . \n?x1 :education.education.institution ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "education",
      "people"
    ],
    "level": "compositional",
    "s_expression": "(AND spaceflight.astronaut (JOIN people.person.education (JOIN education.education.institution m.03ksy)))",
    "topic_entity": {
      "m.03ksy": "Harvard University"
    }
  },
  {
    "qid": 3200253001000,
    "question": "the adaption from man hunt is what adaption from adapted work?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.027x69k",
        "entity_name": "Rogue Male"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gz0kv",
        "entity_name": "First Blood"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "media_common.adaptation",
          "class": "media_common.adaptation",
          "friendly_name": "Adaptation",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "media_common.adapted_work",
          "class": "media_common.adapted_work",
          "friendly_name": "Adapted Work",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02qfy5l",
          "class": "media_common.adaptation",
          "friendly_name": "Man Hunt",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "media_common.adaptation.adapted_from",
          "friendly_name": "Adapted From"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "media_common.adapted_work.adaptations",
          "friendly_name": "Adaptations"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :media_common.adaptation . \n?x1 :type.object.type :media_common.adapted_work . \nVALUES ?x2 { :m.02qfy5l } \n?x0 :media_common.adaptation.adapted_from ?x1 . \n?x1 :media_common.adapted_work.adaptations ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "media_common"
    ],
    "level": "compositional",
    "s_expression": "(AND media_common.adaptation (JOIN media_common.adaptation.adapted_from (JOIN media_common.adapted_work.adaptations m.02qfy5l)))",
    "topic_entity": {
      "m.02qfy5l": "Man Hunt"
    }
  },
  {
    "qid": 4302314005000,
    "question": "what medical trial design using rapid evaluation of amantadine for treatment of cocaine abuse/dependence – 4 has the lowest number of expected total enrollment?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03zbgdy",
        "entity_name": "Treatment"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "medicine.medical_trial_design",
          "class": "medicine.medical_trial_design",
          "friendly_name": "Medical trial design",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "medicine.medical_trial",
          "class": "medicine.medical_trial",
          "friendly_name": "Medical trial",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03zbbw6",
          "class": "medicine.medical_trial",
          "friendly_name": "Rapid Evaluation of Amantadine for Treatment of Cocaine Abuse/Dependence – 4",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.int",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "medicine.medical_trial.design",
          "friendly_name": "Design"
        },
        {
          "start": 0,
          "end": 2,
          "relation": "medicine.medical_trial_design.trials",
          "friendly_name": "Trials"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "medicine.medical_trial.expected_total_enrollment",
          "friendly_name": "Expected total enrollment"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_design . \n?x1 :type.object.type :medicine.medical_trial . \nVALUES ?x2 { :m.03zbbw6 } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :medicine.medical_trial_design . \n?y1 :type.object.type :medicine.medical_trial . \nVALUES ?y2 { :m.03zbbw6 } \n?y1 :medicine.medical_trial.design ?y0 . \n?y0 :medicine.medical_trial_design.trials ?y2 . \n?y1 :medicine.medical_trial.expected_total_enrollment ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :medicine.medical_trial.design ?x0 . \n?x0 :medicine.medical_trial_design.trials ?x2 . \n?x1 :medicine.medical_trial.expected_total_enrollment ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "medicine"
    ],
    "level": "compositional",
    "s_expression": "(ARGMAX (AND medicine.medical_trial_design (JOIN medicine.medical_trial_design.trials m.03zbbw6)) (JOIN (R medicine.medical_trial.design) medicine.medical_trial.expected_total_enrollment))",
    "topic_entity": {
      "m.03zbbw6": "Rapid Evaluation of Amantadine for Treatment of Cocaine Abuse/Dependence – 4"
    }
  },
  {
    "qid": 3204277005000,
    "question": "the printer interface peripheral is compatible with which computer?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.089b9",
        "entity_name": "ZX Spectrum"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.computer",
          "class": "computer.computer",
          "friendly_name": "Computer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.computer_peripheral",
          "class": "computer.computer_peripheral",
          "friendly_name": "Computer Peripheral",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0g4nd0b",
          "class": "computer.computer_peripheral_class",
          "friendly_name": "Printer interface",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.computer_peripheral.compatible_computers",
          "friendly_name": "Compatible computers"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "computer.computer_peripheral.peripheral_class",
          "friendly_name": "Peripheral Class"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.computer . \n?x1 :type.object.type :computer.computer_peripheral . \nVALUES ?x2 { :m.0g4nd0b } \n?x1 :computer.computer_peripheral.compatible_computers ?x0 . \n?x1 :computer.computer_peripheral.peripheral_class ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND computer.computer (JOIN (R computer.computer_peripheral.compatible_computers) (JOIN computer.computer_peripheral.peripheral_class m.0g4nd0b)))",
    "topic_entity": {
      "m.0g4nd0b": "Printer interface"
    }
  },
  {
    "qid": 4301650000000,
    "question": "what treatment medically is contraindication for hydroxyzine pamoate?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hb2r",
        "entity_name": "Breastfeeding"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "medicine.contraindication",
          "class": "medicine.contraindication",
          "friendly_name": "Contraindication",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "medicine.medical_treatment",
          "class": "medicine.medical_treatment",
          "friendly_name": "Medical Treatment",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "medicine.contraindication",
          "class": "medicine.contraindication",
          "friendly_name": "Contraindication",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.036pyy",
          "class": "medicine.medical_treatment",
          "friendly_name": "hydroxyzine pamoate",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "medicine.medical_treatment.contraindications",
          "friendly_name": "Contraindications"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "medicine.contraindication.contraindication_for",
          "friendly_name": "Contraindication for"
        },
        {
          "start": 2,
          "end": 3,
          "relation": "medicine.contraindication.contraindication_for",
          "friendly_name": "Contraindication for"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.contraindication . \n?x1 :type.object.type :medicine.medical_treatment . \n?x2 :type.object.type :medicine.contraindication . \nVALUES ?x3 { :m.036pyy } \n?x1 :medicine.medical_treatment.contraindications ?x0 . \n?x2 :medicine.contraindication.contraindication_for ?x1 . \n?x2 :medicine.contraindication.contraindication_for ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "medicine"
    ],
    "level": "compositional",
    "s_expression": "(AND medicine.contraindication (JOIN (R medicine.medical_treatment.contraindications) (JOIN (R medicine.contraindication.contraindication_for) (JOIN medicine.contraindication.contraindication_for m.036pyy))))",
    "topic_entity": {
      "m.036pyy": "Hydroxyzine"
    }
  },
  {
    "qid": 3200253007000,
    "question": "which adaptation is adapted from adapted work which is an adaptation from kujibiki unbalance?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0lmtmq1",
        "entity_name": "Kujibiki Unbalance"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "media_common.adaptation",
          "class": "media_common.adaptation",
          "friendly_name": "Adaptation",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "media_common.adapted_work",
          "class": "media_common.adapted_work",
          "friendly_name": "Adapted Work",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0lmtmlt",
          "class": "media_common.adaptation",
          "friendly_name": "Kujibiki Unbalance",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "media_common.adaptation.adapted_from",
          "friendly_name": "Adapted From"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "media_common.adapted_work.adaptations",
          "friendly_name": "Adaptations"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :media_common.adaptation . \n?x1 :type.object.type :media_common.adapted_work . \nVALUES ?x2 { :m.0lmtmlt } \n?x0 :media_common.adaptation.adapted_from ?x1 . \n?x1 :media_common.adapted_work.adaptations ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "media_common"
    ],
    "level": "compositional",
    "s_expression": "(AND media_common.adaptation (JOIN media_common.adaptation.adapted_from (JOIN media_common.adapted_work.adaptations m.0lmtmlt)))",
    "topic_entity": {
      "m.0lmtmlt": "Kujibiki Unbalance"
    }
  },
  {
    "qid": 3200435000000,
    "question": "j is part of what unit profile?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.120hhsxf",
        "entity_name": "Kiloton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1224btsg",
        "entity_name": "Kilojoule"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122jqjdq",
        "entity_name": "Megaton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.017mjn",
        "entity_name": "Hartree"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.018lqb",
        "entity_name": "Kilowatt hour"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01fr3",
        "entity_name": "British thermal unit"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01wv2",
        "entity_name": "Calorie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02m68",
        "entity_name": "Electronvolt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02phk",
        "entity_name": "Erg"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02qdq0",
        "entity_name": "Barrel of oil equivalent"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03r93c",
        "entity_name": "Tonne of oil equivalent"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04g9275",
        "entity_name": "Kilocalorie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04n4r_n",
        "entity_name": "Cubic mile of oil"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05cdmtb",
        "entity_name": "Ton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05cpvgm",
        "entity_name": "Milliton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05cpvh4",
        "entity_name": "Microton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05pxqc7",
        "entity_name": "Megaelectronvolt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cz9j60",
        "entity_name": "Kilogram oil equivalent"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "freebase.unit_profile",
          "class": "freebase.unit_profile",
          "friendly_name": "Unit Profile",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.common_dimension",
          "class": "measurement_unit.common_dimension",
          "friendly_name": "Common Dimension",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04570",
          "class": "measurement_unit.energy_unit",
          "friendly_name": "j",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.dimension.units",
          "friendly_name": "Units"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.dimension.si_base_unit",
          "friendly_name": "SI Base Unit"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :freebase.unit_profile . \n?x1 :type.object.type :measurement_unit.common_dimension . \nVALUES ?x2 { :m.04570 } \n?x1 :measurement_unit.dimension.units ?x0 . \n?x1 :measurement_unit.dimension.si_base_unit ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND freebase.unit_profile (JOIN (R measurement_unit.dimension.units) (JOIN measurement_unit.dimension.si_base_unit m.04570)))",
    "topic_entity": {
      "m.04570": "Joule"
    }
  },
  {
    "qid": 3204269007000,
    "question": "what's the legal status of drug formulations for which pinus palustris pollen is an active ingredient?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01_7r6",
        "entity_name": "Prescription drug"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "medicine.drug_legal_status",
          "class": "medicine.drug_legal_status",
          "friendly_name": "Drug legal status",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "medicine.drug_formulation",
          "class": "medicine.drug_formulation",
          "friendly_name": "Drug formulation",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0hqvnfp",
          "class": "medicine.drug_ingredient",
          "friendly_name": "Pinus palustris pollen",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "medicine.drug_formulation.legal_status",
          "friendly_name": "Legal status"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "medicine.drug_formulation.active_ingredients",
          "friendly_name": "Active ingredients"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.drug_legal_status . \n?x1 :type.object.type :medicine.drug_formulation . \nVALUES ?x2 { :m.0hqvnfp } \n?x1 :medicine.drug_formulation.legal_status ?x0 . \n?x1 :medicine.drug_formulation.active_ingredients ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "medicine"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND medicine.drug_legal_status (JOIN (R medicine.drug_formulation.legal_status) (JOIN medicine.drug_formulation.active_ingredients m.0hqvnfp)))",
    "topic_entity": {
      "m.0hqvnfp": "Pinus palustris pollen"
    }
  },
  {
    "qid": 3201651005000,
    "question": "when l-isoleucine is an active ingredient which drug formulation category is this?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kjb_",
        "entity_name": "Drug"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hqyt6b",
        "entity_name": "Homeopathic"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "medicine.drug_formulation_category",
          "class": "medicine.drug_formulation_category",
          "friendly_name": "Drug formulation category",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "medicine.drug_formulation",
          "class": "medicine.drug_formulation",
          "friendly_name": "Drug formulation",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0h1vg",
          "class": "medicine.drug_ingredient",
          "friendly_name": "l-isoleucine",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "medicine.drug_formulation_category.drug_formulations",
          "friendly_name": "Drug formulations in this category"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "medicine.drug_ingredient.active_ingredient_of_formulation",
          "friendly_name": "Active ingredient of formulation"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.drug_formulation_category . \n?x1 :type.object.type :medicine.drug_formulation . \nVALUES ?x2 { :m.0h1vg } \n?x0 :medicine.drug_formulation_category.drug_formulations ?x1 . \n?x2 :medicine.drug_ingredient.active_ingredient_of_formulation ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "medicine"
    ],
    "level": "compositional",
    "s_expression": "(AND medicine.drug_formulation_category (JOIN medicine.drug_formulation_category.drug_formulations (JOIN (R medicine.drug_ingredient.active_ingredient_of_formulation) m.0h1vg)))",
    "topic_entity": {
      "m.0h1vg": "Isoleucine"
    }
  },
  {
    "qid": 3205347013000,
    "question": "what is the episode of a radio program whose artist is glenn?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01tf4f7",
        "entity_name": "Bob and Ray"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06bflm5",
        "entity_name": "Glenn Gould"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06bflmk",
        "entity_name": "Tapiola Choir"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06bfll_",
        "entity_name": "Rod MacLeish"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "radio.radio_program_episode",
          "class": "radio.radio_program_episode",
          "friendly_name": "Radio program episode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "radio.radio_program",
          "class": "radio.radio_program",
          "friendly_name": "Radio program",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0hcpk",
          "class": "broadcast.artist",
          "friendly_name": "glenn",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "radio.radio_program.episodes",
          "friendly_name": "Episodes"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "broadcast.content.artist",
          "friendly_name": "Artists"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program_episode . \n?x1 :type.object.type :radio.radio_program . \nVALUES ?x2 { :m.0hcpk } \n?x1 :radio.radio_program.episodes ?x0 . \n?x1 :broadcast.content.artist ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "broadcast",
      "radio"
    ],
    "level": "zero-shot",
    "s_expression": "(AND radio.radio_program_episode (JOIN (R radio.radio_program.episodes) (JOIN broadcast.content.artist m.0hcpk)))",
    "topic_entity": {
      "m.0hcpk": "Glenn Gould"
    }
  },
  {
    "qid": 4302232008000,
    "question": "what is the conference series that focuses on vericon?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.081qw",
        "entity_name": "Worldcon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bh901",
        "entity_name": "Canvention"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference",
          "class": "conferences.conference",
          "friendly_name": "Conference event",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "class",
          "id": "conferences.conference_subject",
          "class": "conferences.conference_subject",
          "friendly_name": "Conference subject",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02cns3",
          "class": "conferences.conference_series",
          "friendly_name": "Vericon",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "conferences.conference_series.conference",
          "friendly_name": "Conferences"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "conferences.conference.focus",
          "friendly_name": "Focus"
        },
        {
          "start": 3,
          "end": 2,
          "relation": "conferences.conference_series.subject",
          "friendly_name": "Subject"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_series . \n?x1 :type.object.type :conferences.conference . \n?x2 :type.object.type :conferences.conference_subject . \nVALUES ?x3 { :m.02cns3 } \n?x0 :conferences.conference_series.conference ?x1 . \n?x1 :conferences.conference.focus ?x2 . \n?x3 :conferences.conference_series.subject ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference_series (JOIN conferences.conference_series.conference (JOIN conferences.conference.focus (JOIN (R conferences.conference_series.subject) m.02cns3))))",
    "topic_entity": {
      "m.02cns3": "Vericon"
    }
  },
  {
    "qid": 3202145001000,
    "question": "gray per second is used by what unit of pressure?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0455v08",
        "entity_name": "Gigapascal"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hh0v",
        "entity_name": "Pascal"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03jdsnw",
        "entity_name": "Megapascal"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h5qxr7",
        "entity_name": "Kilopascal"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.pressure_unit",
          "class": "measurement_unit.pressure_unit",
          "friendly_name": "Unit of Pressure",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj5d4",
          "class": "measurement_unit.absorbed_dose_rate_unit",
          "friendly_name": "Gray per second",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.pressure_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.absorbed_dose_rate_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.pressure_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj5d4 } \n?x0 :measurement_unit.pressure_unit.measurement_system ?x1 . \n?x2 :measurement_unit.absorbed_dose_rate_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.pressure_unit (JOIN measurement_unit.pressure_unit.measurement_system (JOIN (R measurement_unit.absorbed_dose_rate_unit.measurement_system) m.02sj5d4)))",
    "topic_entity": {
      "m.02sj5d4": "Gray per second"
    }
  },
  {
    "qid": 3206395000000,
    "question": "name the function of the rocket manufactured by chrysler llc.",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cspd",
        "entity_name": "Low Earth orbit"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01lz4c",
        "entity_name": "Sounding rocket"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04rkwz",
        "entity_name": "Launch vehicle"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "spaceflight.rocket_function",
          "class": "spaceflight.rocket_function",
          "friendly_name": "Rocket Function",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "spaceflight.rocket",
          "class": "spaceflight.rocket",
          "friendly_name": "Rocket",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01_bp",
          "class": "spaceflight.rocket_manufacturer",
          "friendly_name": "chrysler llc",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "spaceflight.rocket.rocket_function",
          "friendly_name": "Rocket Function"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "spaceflight.rocket.manufacturer",
          "friendly_name": "Manufacturer"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_function . \n?x1 :type.object.type :spaceflight.rocket . \nVALUES ?x2 { :m.01_bp } \n?x1 :spaceflight.rocket.rocket_function ?x0 . \n?x1 :spaceflight.rocket.manufacturer ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "spaceflight"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND spaceflight.rocket_function (JOIN (R spaceflight.rocket.rocket_function) (JOIN spaceflight.rocket.manufacturer m.01_bp)))",
    "topic_entity": {
      "m.01_bp": "Chrysler Group LLC"
    }
  },
  {
    "qid": 3204660014000,
    "question": "nelson and which astronaut have the same ethnicity?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01c05z",
        "entity_name": "Boris Volynov"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "spaceflight.astronaut",
          "class": "spaceflight.astronaut",
          "friendly_name": "Astronaut",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "people.ethnicity",
          "class": "people.ethnicity",
          "friendly_name": "Ethnicity",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0jdhp",
          "class": "tv.tv_director",
          "friendly_name": "nelson",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.ethnicity",
          "friendly_name": "Ethnicity"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "people.person.ethnicity",
          "friendly_name": "Ethnicity"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.astronaut . \n?x1 :type.object.type :people.ethnicity . \nVALUES ?x2 { :m.0jdhp } \n?x0 :people.person.ethnicity ?x1 . \n?x2 :people.person.ethnicity ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "people"
    ],
    "level": "compositional",
    "s_expression": "(AND spaceflight.astronaut (JOIN people.person.ethnicity (JOIN (R people.person.ethnicity) m.0jdhp)))",
    "topic_entity": {
      "m.0jdhp": "Tim Blake Nelson"
    }
  },
  {
    "qid": 3203952007000,
    "question": "which cyclists speak a language that kevin rutmanis speaks?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.027tm9b",
        "entity_name": "Geraint Thomas"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04gkhjq",
        "entity_name": "Peter Kennaugh"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fxksg",
        "entity_name": "Tyler Farrar"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02x22b6",
        "entity_name": "Taylor Phinney"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.066p_g",
        "entity_name": "Amber Neben"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06jpgd",
        "entity_name": "Chris Horner"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "sports.cyclist",
          "class": "sports.cyclist",
          "friendly_name": "Cyclist",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "language.human_language",
          "class": "language.human_language",
          "friendly_name": "Human Language",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.045r1l",
          "class": "music.bassist",
          "friendly_name": "Kevin Rutmanis",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.languages",
          "friendly_name": "Languages"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "people.person.languages",
          "friendly_name": "Languages"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.cyclist . \n?x1 :type.object.type :language.human_language . \nVALUES ?x2 { :m.045r1l } \n?x0 :people.person.languages ?x1 . \n?x2 :people.person.languages ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "people"
    ],
    "level": "compositional",
    "s_expression": "(AND sports.cyclist (JOIN people.person.languages (JOIN (R people.person.languages) m.045r1l)))",
    "topic_entity": {
      "m.045r1l": "Kevin Rutmanis"
    }
  },
  {
    "qid": 3203411022000,
    "question": "which tld registry registered global domains international?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hsmn6",
        "entity_name": "Computer Services Ltd. Samoa"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hsmj4",
        "entity_name": "SamoaNIC"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "internet.top_level_domain_registry",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Top Level Domain Registry",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "internet.top_level_domain",
          "class": "internet.top_level_domain",
          "friendly_name": "Top Level Domain",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02hsmd7",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Global Domains International",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "internet.top_level_domain_registry.domains",
          "friendly_name": "Domains Registered"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "internet.top_level_domain.registry",
          "friendly_name": "Registry"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.top_level_domain_registry . \n?x1 :type.object.type :internet.top_level_domain . \nVALUES ?x2 { :m.02hsmd7 } \n?x0 :internet.top_level_domain_registry.domains ?x1 . \n?x1 :internet.top_level_domain.registry ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "internet"
    ],
    "level": "compositional",
    "s_expression": "(AND internet.top_level_domain_registry (JOIN internet.top_level_domain_registry.domains (JOIN internet.top_level_domain.registry m.02hsmd7)))",
    "topic_entity": {
      "m.02hsmd7": "Global Domains International"
    }
  },
  {
    "qid": 3205147009000,
    "question": "the amusement ride dumbo the flying elephant has the same theme as which other amusement park ride?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02693xq",
        "entity_name": "Dumbo the Flying Elephant"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j1gyx8",
        "entity_name": "Dumbo the Flying Elephant"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j1gyyl",
        "entity_name": "Dumbo the Flying Elephant"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j1gz1h",
        "entity_name": "Dumbo the Flying Elephant"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "amusement_parks.ride",
          "class": "amusement_parks.ride",
          "friendly_name": "Amusement Ride",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "amusement_parks.ride_theme",
          "class": "amusement_parks.ride_theme",
          "friendly_name": "Amusement Ride Theme",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0j1gz9_",
          "class": "amusement_parks.ride",
          "friendly_name": "Dumbo the Flying Elephant",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "amusement_parks.ride.theme",
          "friendly_name": "Theme"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "amusement_parks.ride_theme.rides",
          "friendly_name": "Rides"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride . \n?x1 :type.object.type :amusement_parks.ride_theme . \nVALUES ?x2 { :m.0j1gz9_ } \n?x0 :amusement_parks.ride.theme ?x1 . \n?x1 :amusement_parks.ride_theme.rides ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "amusement_parks"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND amusement_parks.ride (JOIN amusement_parks.ride.theme (JOIN amusement_parks.ride_theme.rides m.0j1gz9_)))",
    "topic_entity": {
      "m.0j1gz9_": "Dumbo the Flying Elephant"
    }
  },
  {
    "qid": 3204817013000,
    "question": "which is the video game series that includes a video game expansion designed by mike darga?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03mh0vs",
        "entity_name": "The Sims"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.game_series",
          "class": "cvg.game_series",
          "friendly_name": "Video Game Series",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_game_expansion",
          "class": "cvg.computer_game_expansion",
          "friendly_name": "Video Game Expansion",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02hptzw",
          "class": "cvg.cvg_designer",
          "friendly_name": "Mike Darga",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.computer_videogame.game_series",
          "friendly_name": "Part of game series"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.designers",
          "friendly_name": "Designers"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_series . \n?x1 :type.object.type :cvg.computer_game_expansion . \nVALUES ?x2 { :m.02hptzw } \n?x1 :cvg.computer_videogame.game_series ?x0 . \n?x1 :cvg.computer_videogame.designers ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.game_series (JOIN (R cvg.computer_videogame.game_series) (JOIN cvg.computer_videogame.designers m.02hptzw)))",
    "topic_entity": {
      "m.02hptzw": "Mike Darga"
    }
  },
  {
    "qid": 3204660005000,
    "question": "what astronaut has the same ethnicity as john ford ?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01vmsb",
        "entity_name": "James Irwin"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "spaceflight.astronaut",
          "class": "spaceflight.astronaut",
          "friendly_name": "Astronaut",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "people.ethnicity",
          "class": "people.ethnicity",
          "friendly_name": "Ethnicity",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01pp3p",
          "class": "tv.tv_director",
          "friendly_name": "John Ford",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.ethnicity",
          "friendly_name": "Ethnicity"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "people.person.ethnicity",
          "friendly_name": "Ethnicity"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.astronaut . \n?x1 :type.object.type :people.ethnicity . \nVALUES ?x2 { :m.01pp3p } \n?x0 :people.person.ethnicity ?x1 . \n?x2 :people.person.ethnicity ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "people"
    ],
    "level": "compositional",
    "s_expression": "(AND spaceflight.astronaut (JOIN people.person.ethnicity (JOIN (R people.person.ethnicity) m.01pp3p)))",
    "topic_entity": {
      "m.01pp3p": "John Ford"
    }
  },
  {
    "qid": 3200783012000,
    "question": "an ingredient usually present in focaccia is incompatible with what dietary restriction?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.034n2g",
        "entity_name": "Gluten-free diet"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "food.dietary_restriction",
          "class": "food.dietary_restriction",
          "friendly_name": "Dietary restriction",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "food.ingredient",
          "class": "food.ingredient",
          "friendly_name": "Ingredient",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02w9q6",
          "class": "food.dish",
          "friendly_name": "Focaccia",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "food.ingredient.incompatible_with_dietary_restrictions",
          "friendly_name": "Incompatible with dietary restrictions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "food.ingredient.dishes",
          "friendly_name": "Typically used in dishes"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :food.dietary_restriction . \n?x1 :type.object.type :food.ingredient . \nVALUES ?x2 { :m.02w9q6 } \n?x1 :food.ingredient.incompatible_with_dietary_restrictions ?x0 . \n?x1 :food.ingredient.dishes ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "food"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND food.dietary_restriction (JOIN (R food.ingredient.incompatible_with_dietary_restrictions) (JOIN food.ingredient.dishes m.02w9q6)))",
    "topic_entity": {
      "m.02w9q6": "Focaccia"
    }
  },
  {
    "qid": 3204629011000,
    "question": "what subatomic particle is in the same family as the charm antiquark?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01jzrd",
        "entity_name": "Down quark"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01jzrv",
        "entity_name": "Charm quark"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01jzs8",
        "entity_name": "Top quark"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01jzsn",
        "entity_name": "Bottom quark"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.093bryn",
        "entity_name": "Down antiquark"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.094cvt5",
        "entity_name": "Strange antiquark"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.094nrqp",
        "entity_name": "Top antiquark"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.094ntzy",
        "entity_name": "Bottom antiquark"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0qdpn",
        "entity_name": "Strange quark"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01jzqz",
        "entity_name": "Up quark"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.093bvm7",
        "entity_name": "Up antiquark"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "physics.particle",
          "class": "physics.particle",
          "friendly_name": "Subatomic particle",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "physics.particle_family",
          "class": "physics.particle_family",
          "friendly_name": "Subatomic particle family",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.093vy16",
          "class": "physics.quark",
          "friendly_name": "Charm antiquark",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "physics.particle.family",
          "friendly_name": "Family"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "physics.particle_family.particles",
          "friendly_name": "Particles"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :physics.particle . \n?x1 :type.object.type :physics.particle_family . \nVALUES ?x2 { :m.093vy16 } \n?x0 :physics.particle.family ?x1 . \n?x1 :physics.particle_family.particles ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "physics"
    ],
    "level": "compositional",
    "s_expression": "(AND physics.particle (JOIN physics.particle.family (JOIN physics.particle_family.particles m.093vy16)))",
    "topic_entity": {
      "m.093vy16": "Charm antiquark"
    }
  },
  {
    "qid": 3204115004000,
    "question": "what is the name of the unit of mass that is associated with a measurement system that is the measurement system of microfarad?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.07ny7",
        "entity_name": "Tonne"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.047dr",
        "entity_name": "Kilogram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1225dlgf",
        "entity_name": "Milligram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01x32j1",
        "entity_name": "Gram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02p14f_",
        "entity_name": "Microgram"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.mass_unit",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Unit of Mass",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0l4l0",
          "class": "measurement_unit.capacitance_unit",
          "friendly_name": "microfarad",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.mass_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.capacitance_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.mass_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0l4l0 } \n?x0 :measurement_unit.mass_unit.measurement_system ?x1 . \n?x2 :measurement_unit.capacitance_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.mass_unit (JOIN measurement_unit.mass_unit.measurement_system (JOIN (R measurement_unit.capacitance_unit.measurement_system) m.0l4l0)))",
    "topic_entity": {
      "m.0l4l0": "Farad"
    }
  },
  {
    "qid": 3204168014000,
    "question": "which family of computer processor is a variant of the atmega325?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pk4w",
        "entity_name": "Atmel AVR"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "computer.computer_processor",
          "class": "computer.computer_processor",
          "friendly_name": "Computer Processor",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "computer.computer_processor",
          "class": "computer.computer_processor",
          "friendly_name": "Computer Processor",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.06qjv0t",
          "class": "computer.computer_processor",
          "friendly_name": "ATmega325",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "computer.computer_processor.processor_family",
          "friendly_name": "Processor Family"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "computer.computer_processor.variants",
          "friendly_name": "Variants"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.computer_processor . \n?x1 :type.object.type :computer.computer_processor . \nVALUES ?x2 { :m.06qjv0t } \n?x1 :computer.computer_processor.processor_family ?x0 . \n?x1 :computer.computer_processor.variants ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "computer"
    ],
    "level": "compositional",
    "s_expression": "(AND computer.computer_processor (JOIN (R computer.computer_processor.processor_family) (JOIN computer.computer_processor.variants m.06qjv0t)))",
    "topic_entity": {
      "m.06qjv0t": "ATmega325"
    }
  },
  {
    "qid": 4300337006000,
    "question": "with which journal did don slater serve as editor on the editor in chief?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02q77ts",
        "entity_name": "British Journal of Sociology"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "book.journal",
          "class": "book.journal",
          "friendly_name": "Journal",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "book.editorial_tenure",
          "class": "book.editorial_tenure",
          "friendly_name": "Editorial tenure",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05ws_t6",
          "class": "book.periodical_editor",
          "friendly_name": "Don Slater",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02wk2cy",
          "class": "book.editor_title",
          "friendly_name": "Editor in Chief",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "book.periodical.editorial_staff",
          "friendly_name": "Editorial staff"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "book.editorial_tenure.editor",
          "friendly_name": "Editor"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "book.editorial_tenure.title",
          "friendly_name": "Title"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.journal . \n?x1 :type.object.type :book.editorial_tenure . \nVALUES ?x2 { :m.05ws_t6 } \nVALUES ?x3 { :m.02wk2cy } \n?x0 :book.periodical.editorial_staff ?x1 . \n?x1 :book.editorial_tenure.editor ?x2 . \n?x1 :book.editorial_tenure.title ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "book"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND book.journal (JOIN book.periodical.editorial_staff (AND (JOIN book.editorial_tenure.editor m.05ws_t6) (JOIN book.editorial_tenure.title m.02wk2cy))))",
    "topic_entity": {
      "m.05ws_t6": "Don Slater",
      "m.02wk2cy": "Editor in Chief"
    }
  },
  {
    "qid": 3203195005000,
    "question": "which cuisine contains more smoked salt than others?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02gk3h",
        "entity_name": "Danish cuisine"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "dining.cuisine",
          "class": "dining.cuisine",
          "friendly_name": "Cuisine",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "food.ingredient",
          "class": "food.ingredient",
          "friendly_name": "Ingredient",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05nn3t",
          "class": "food.ingredient",
          "friendly_name": "Smoked salt",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "dining.cuisine.ingredients",
          "friendly_name": "Ingredients"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "food.ingredient.more_general_ingredient",
          "friendly_name": "More general ingredient"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :dining.cuisine . \n?x1 :type.object.type :food.ingredient . \nVALUES ?x2 { :m.05nn3t } \n?x0 :dining.cuisine.ingredients ?x1 . \n?x1 :food.ingredient.more_general_ingredient ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "dining",
      "food"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND dining.cuisine (JOIN dining.cuisine.ingredients (JOIN food.ingredient.more_general_ingredient m.05nn3t)))",
    "topic_entity": {
      "m.05nn3t": "Smoked salt"
    }
  },
  {
    "qid": 3205368012000,
    "question": "what kind unit of length is associated with a measurement system whose mass units include pound?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04vb3",
        "entity_name": "Mile"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01crvy",
        "entity_name": "Foot"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03th6",
        "entity_name": "Inch"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05b1y1",
        "entity_name": "Ell"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.018xnw",
        "entity_name": "Cubit"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01g8lv",
        "entity_name": "Hand"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01464h",
        "entity_name": "Fathom"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02mr9z",
        "entity_name": "Rod"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05b1qt",
        "entity_name": "Digit"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0355rq",
        "entity_name": "Chain"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.018cl3",
        "entity_name": "Cable length"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05bl8",
        "entity_name": "Nautical mile"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05gwxt",
        "entity_name": "Link"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.087tz",
        "entity_name": "Yard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05b1sy",
        "entity_name": "Finger"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.031l7",
        "entity_name": "Furlong"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05b1tz",
        "entity_name": "Palm"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.050f99",
        "entity_name": "League"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.051v_f",
        "entity_name": "Span"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05b2wc",
        "entity_name": "Nail"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fhs97",
        "entity_name": "Thousandth of an inch"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05b1wb",
        "entity_name": "Shaftment"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.distance_unit",
          "class": "measurement_unit.distance_unit",
          "friendly_name": "Unit of Length",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05t56",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Pound",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.distance_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.weight_units",
          "friendly_name": "Mass Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.distance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.05t56 } \n?x0 :measurement_unit.distance_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.weight_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.distance_unit (JOIN measurement_unit.distance_unit.measurement_system (JOIN measurement_unit.measurement_system.weight_units m.05t56)))",
    "topic_entity": {
      "m.05t56": "Pound"
    }
  },
  {
    "qid": 3200030008000,
    "question": "which comic strip genre was born from the genre that includes the shakespeare play freak?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.05p553",
        "entity_name": "Comedy"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "comic_strips.comic_strip_genre",
          "class": "comic_strips.comic_strip_genre",
          "friendly_name": "Comic Strip Genre",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "theater.theater_genre",
          "class": "theater.theater_genre",
          "friendly_name": "Theater Genre",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02x431r",
          "class": "theater.play",
          "friendly_name": "Freak",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "media_common.media_genre.parent_genre",
          "friendly_name": "Parent genre"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "theater.theater_genre.plays_in_this_genre",
          "friendly_name": "Plays In This Genre"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_strips.comic_strip_genre . \n?x1 :type.object.type :theater.theater_genre . \nVALUES ?x2 { :m.02x431r } \n?x1 :media_common.media_genre.parent_genre ?x0 . \n?x1 :theater.theater_genre.plays_in_this_genre ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "theater",
      "media_common"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND comic_strips.comic_strip_genre (JOIN (R media_common.media_genre.parent_genre) (JOIN theater.theater_genre.plays_in_this_genre m.02x431r)))",
    "topic_entity": {
      "m.02x431r": "Freak"
    }
  },
  {
    "qid": 3200570005000,
    "question": "what conference sponsor sponsored the same conference series with openshift?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.045c7b",
        "entity_name": "Google"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.047mlyn",
        "entity_name": "Media Temple"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04sv4",
        "entity_name": "Microsoft Corporation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hmyfsv",
        "entity_name": "Facebook, Inc."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cm87w_",
        "entity_name": "OpenStack"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02x3kph",
        "entity_name": "Rackspace"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03mnk",
        "entity_name": "Hewlett-Packard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03sc8",
        "entity_name": "IBM"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0mgkg",
        "entity_name": "Amazon.com"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05njw",
        "entity_name": "Oracle Corporation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0py9b",
        "entity_name": "Dell"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01t9k5",
        "entity_name": "VMware"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h3rcbt",
        "entity_name": "SoftLayer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gyv7_f",
        "entity_name": "MongoDB Inc."
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02h5b_x",
        "entity_name": "Red Hat Software"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b76t3s",
        "entity_name": "Neo4j"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c3xj3p",
        "entity_name": "Bluehost"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027pmws",
        "entity_name": "ActiveState"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04tnv6",
        "entity_name": "Rentrak"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06tx4z",
        "entity_name": "Ubuntu Foundation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h55dn3",
        "entity_name": "AppDynamics"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hhsfhv",
        "entity_name": "New Relic"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0l8my_1",
        "entity_name": "Puppet Labs"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "conferences.conference_sponsor",
          "class": "conferences.conference_sponsor",
          "friendly_name": "Conference sponsor",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "conferences.conference_series",
          "class": "conferences.conference_series",
          "friendly_name": "Conference series",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0j9pqc0",
          "class": "conferences.conference_sponsor",
          "friendly_name": "OpenShift",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "conferences.conference_series.sponsoring_organization",
          "friendly_name": "Sponsoring organization"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "conferences.conference_series.sponsoring_organization",
          "friendly_name": "Sponsoring organization"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_sponsor . \n?x1 :type.object.type :conferences.conference_series . \nVALUES ?x2 { :m.0j9pqc0 } \n?x1 :conferences.conference_series.sponsoring_organization ?x0 . \n?x1 :conferences.conference_series.sponsoring_organization ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "conferences"
    ],
    "level": "zero-shot",
    "s_expression": "(AND conferences.conference_sponsor (JOIN (R conferences.conference_series.sponsoring_organization) (JOIN conferences.conference_series.sponsoring_organization m.0j9pqc0)))",
    "topic_entity": {
      "m.0j9pqc0": "OpenShift"
    }
  },
  {
    "qid": 3204927014000,
    "question": "which football player borrows football player loan from hibs?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0407jnq",
        "entity_name": "Leigh Griffiths"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "soccer.football_player",
          "class": "soccer.football_player",
          "friendly_name": "Football player",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "soccer.football_player_loan",
          "class": "soccer.football_player_loan",
          "friendly_name": "Football Player Loan",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.017znw",
          "class": "soccer.football_team",
          "friendly_name": "hibs",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "soccer.football_player.loans",
          "friendly_name": "Loans"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "soccer.football_player_loan.borrowing_team",
          "friendly_name": "Borrowing team"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :soccer.football_player . \n?x1 :type.object.type :soccer.football_player_loan . \nVALUES ?x2 { :m.017znw } \n?x0 :soccer.football_player.loans ?x1 . \n?x1 :soccer.football_player_loan.borrowing_team ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "soccer"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND soccer.football_player (JOIN soccer.football_player.loans (JOIN soccer.football_player_loan.borrowing_team m.017znw)))",
    "topic_entity": {
      "m.017znw": "Hibernian F.C."
    }
  },
  {
    "qid": 3200273004000,
    "question": "what is the extension of seo?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04j5ww_",
        "entity_name": "Online Advertising"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0n7w78w",
        "entity_name": "SEO consultant"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0rn_rkd",
        "entity_name": "Marketing Specialist"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "type.type",
          "class": "type.type",
          "friendly_name": "Type",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "type.type",
          "class": "type.type",
          "friendly_name": "Type",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0j72ylp",
          "class": "type.type",
          "friendly_name": "SEO",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "type.type.extends",
          "friendly_name": "Extends"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "type.type.extends",
          "friendly_name": "Extends"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :type.type . \n?x1 :type.object.type :type.type . \nVALUES ?x2 { :m.0j72ylp } \n?x1 :type.type.extends ?x0 . \n?x1 :type.type.extends ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "type"
    ],
    "level": "compositional",
    "s_expression": "(AND type.type (JOIN (R type.type.extends) (JOIN type.type.extends m.0j72ylp)))",
    "topic_entity": {
      "m.0j72ylp": "SEO"
    }
  },
  {
    "qid": 3204500002000,
    "question": "the musical game that has the version of space channel 5: part 2 is in what gameplay mode?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01z747",
        "entity_name": "Multiplayer video game"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hjn4",
        "entity_name": "Single-player video game"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.gameplay_mode",
          "class": "cvg.gameplay_mode",
          "friendly_name": "Gameplay Mode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.musical_game",
          "class": "cvg.musical_game",
          "friendly_name": "Musical Game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02hlg8j",
          "class": "cvg.game_version",
          "friendly_name": "Space Channel 5: Part 2",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.gameplay_mode.games_with_this_mode",
          "friendly_name": "Games with this mode"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.versions",
          "friendly_name": "Versions"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.gameplay_mode . \n?x1 :type.object.type :cvg.musical_game . \nVALUES ?x2 { :m.02hlg8j } \n?x0 :cvg.gameplay_mode.games_with_this_mode ?x1 . \n?x1 :cvg.computer_videogame.versions ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.gameplay_mode (JOIN cvg.gameplay_mode.games_with_this_mode (JOIN cvg.computer_videogame.versions m.02hlg8j)))",
    "topic_entity": {
      "m.02hlg8j": "Space Channel 5: Part 2"
    }
  },
  {
    "qid": 3200175014000,
    "question": "who produced the radio program on evan mecham?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.06mhbyk",
        "entity_name": "Diane Bonilla"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06mhbyr",
        "entity_name": "Dennis Lambert"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06mhbyy",
        "entity_name": "Bob Christopher"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "broadcast.producer",
          "class": "broadcast.producer",
          "friendly_name": "Broadcast Producer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "radio.radio_program",
          "class": "radio.radio_program",
          "friendly_name": "Radio program",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02s8b8",
          "class": "radio.radio_subject",
          "friendly_name": "Evan Mecham",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "broadcast.content.producer",
          "friendly_name": "Producer"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "radio.radio_subject.programs_with_this_subject",
          "friendly_name": "Programs with this subject"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.producer . \n?x1 :type.object.type :radio.radio_program . \nVALUES ?x2 { :m.02s8b8 } \n?x1 :broadcast.content.producer ?x0 . \n?x2 :radio.radio_subject.programs_with_this_subject ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "radio",
      "broadcast"
    ],
    "level": "zero-shot",
    "s_expression": "(AND broadcast.producer (JOIN (R broadcast.content.producer) (JOIN (R radio.radio_subject.programs_with_this_subject) m.02s8b8)))",
    "topic_entity": {
      "m.02s8b8": "Evan Mecham"
    }
  },
  {
    "qid": 3203957000000,
    "question": "what unit of energy belongs to the same measurement system as kg/m3?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.1224btsg",
        "entity_name": "Kilojoule"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04570",
        "entity_name": "Joule"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.energy_unit",
          "class": "measurement_unit.energy_unit",
          "friendly_name": "Unit of Energy",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0d1kg",
          "class": "measurement_unit.unit_of_density",
          "friendly_name": "kg/m3",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.energy_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.unit_of_density.measurement_system",
          "friendly_name": "Measurement system"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.energy_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0d1kg } \n?x0 :measurement_unit.energy_unit.measurement_system ?x1 . \n?x2 :measurement_unit.unit_of_density.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.energy_unit (JOIN measurement_unit.energy_unit.measurement_system (JOIN (R measurement_unit.unit_of_density.measurement_system) m.0d1kg)))",
    "topic_entity": {
      "m.0d1kg": "Kilogram per cubic metre"
    }
  },
  {
    "qid": 3201311010000,
    "question": "someone who founded oss also founded what government agency?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fh30",
        "entity_name": "Tennessee Valley Authority"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0d6qjf",
        "entity_name": "Central Intelligence Agency (CIA)"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02tl57",
        "entity_name": "Farm Security Administration"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027nj9",
        "entity_name": "Federal Writers' Project"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02xmb",
        "entity_name": "Federal Reserve System"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fh58",
        "entity_name": "Works Progress Administration"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j97p",
        "entity_name": "National Archives and Records Administration"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02pzkcj",
        "entity_name": "Fair Employment Practices Commission"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fbr4",
        "entity_name": "U.S. Securities and Exchange Commission"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fhhg",
        "entity_name": "Office of Price Administration"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06yl8j",
        "entity_name": "Resettlement Administration"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01gl16",
        "entity_name": "National Labor Relations Board"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07rtsm",
        "entity_name": "Office of Censorship"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.057ybl",
        "entity_name": "United States Office of War Information"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05vyk5",
        "entity_name": "War Production Board"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06p4jm",
        "entity_name": "Office of the Coordinator of Inter-American Affairs"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01g4lh",
        "entity_name": "Social Security Administration"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.027w1yq",
        "entity_name": "Federal Security Agency"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fh2p",
        "entity_name": "Public Works Administration"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09sn6x",
        "entity_name": "National Youth Administration"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fh45",
        "entity_name": "Civil Works Administration"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dxztf",
        "entity_name": "Office of Civilian Defense"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.031qt9",
        "entity_name": "Export-Import Bank of the United States"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02pn7zc",
        "entity_name": "Office of the Coordinator of Information"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06ppmg",
        "entity_name": "War Manpower Commission"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fh4j",
        "entity_name": "Agricultural Adjustment Act"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cjjxg",
        "entity_name": "Office of War Mobilization"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0260s",
        "entity_name": "Civilian Conservation Corps"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fh3h",
        "entity_name": "Home Owners' Loan Corporation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kbll",
        "entity_name": "Federal Emergency Relief Administration"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.011hv9",
        "entity_name": "Rural Utilities Service"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05zq3ws",
        "entity_name": "Federal Works Agency"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fhb1",
        "entity_name": "Federal Housing Administration"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "government.government_agency",
          "class": "government.government_agency",
          "friendly_name": "Government Agency",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "organization.organization_founder",
          "class": "organization.organization_founder",
          "friendly_name": "Organization founder",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05p50",
          "class": "military.armed_force",
          "friendly_name": "oss",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "organization.organization.founders",
          "friendly_name": "Founders"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "organization.organization.founders",
          "friendly_name": "Founders"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :government.government_agency . \n?x1 :type.object.type :organization.organization_founder . \nVALUES ?x2 { :m.05p50 } \n?x0 :organization.organization.founders ?x1 . \n?x2 :organization.organization.founders ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "organization"
    ],
    "level": "compositional",
    "s_expression": "(AND government.government_agency (JOIN organization.organization.founders (JOIN (R organization.organization.founders) m.05p50)))",
    "topic_entity": {
      "m.05p50": "Office of Strategic Services"
    }
  },
  {
    "qid": 3205699002000,
    "question": "which gameplay mode is the video game that supports the peripheral joy stick?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01z747",
        "entity_name": "Multiplayer video game"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hjn4",
        "entity_name": "Single-player video game"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.gameplay_mode",
          "class": "cvg.gameplay_mode",
          "friendly_name": "Gameplay Mode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_videogame",
          "class": "cvg.computer_videogame",
          "friendly_name": "Video game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.044fq",
          "class": "computer.computer_peripheral",
          "friendly_name": "joy stick",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.gameplay_mode.games_with_this_mode",
          "friendly_name": "Games with this mode"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.peripherals_supported",
          "friendly_name": "Peripherals supported"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.gameplay_mode . \n?x1 :type.object.type :cvg.computer_videogame . \nVALUES ?x2 { :m.044fq } \n?x0 :cvg.gameplay_mode.games_with_this_mode ?x1 . \n?x1 :cvg.computer_videogame.peripherals_supported ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.gameplay_mode (JOIN cvg.gameplay_mode.games_with_this_mode (JOIN cvg.computer_videogame.peripherals_supported m.044fq)))",
    "topic_entity": {
      "m.044fq": "Joystick"
    }
  },
  {
    "qid": 3205675003000,
    "question": "the unit of luminance in the measurement system the cantains gauss is called what?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04csv72",
        "entity_name": "Stilb"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.luminance_unit",
          "class": "measurement_unit.luminance_unit",
          "friendly_name": "Unit of Luminance",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.038jg",
          "class": "measurement_unit.magnetic_flux_density_unit",
          "friendly_name": "Gauss",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.luminance_units",
          "friendly_name": "Luminance Units"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "measurement_unit.magnetic_flux_density_unit.measurement_system",
          "friendly_name": "Measurement System"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.luminance_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.038jg } \n?x1 :measurement_unit.measurement_system.luminance_units ?x0 . \n?x2 :measurement_unit.magnetic_flux_density_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.luminance_unit (JOIN (R measurement_unit.measurement_system.luminance_units) (JOIN (R measurement_unit.magnetic_flux_density_unit.measurement_system) m.038jg)))",
    "topic_entity": {
      "m.038jg": "Gauss"
    }
  },
  {
    "qid": 3203681007000,
    "question": "what religious text is associated with a religion that has a practice of eucharist in the catholic church?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.015j7",
        "entity_name": "The Bible"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05crg",
        "entity_name": "New Testament"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ld9",
        "entity_name": "Old Testament"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01dfl",
        "entity_name": "Book of Nehemiah"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "religion.religious_text",
          "class": "religion.religious_text",
          "friendly_name": "Religious Text",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "religion.religion",
          "class": "religion.religion",
          "friendly_name": "Religion",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0dtnr6",
          "class": "religion.religious_practice",
          "friendly_name": "Eucharist in the Catholic Church",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "religion.religion.texts",
          "friendly_name": "Texts"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "religion.religious_practice.practice_of",
          "friendly_name": "Religious practice of"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.religious_text . \n?x1 :type.object.type :religion.religion . \nVALUES ?x2 { :m.0dtnr6 } \n?x1 :religion.religion.texts ?x0 . \n?x2 :religion.religious_practice.practice_of ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "religion"
    ],
    "level": "compositional",
    "s_expression": "(AND religion.religious_text (JOIN (R religion.religion.texts) (JOIN (R religion.religious_practice.practice_of) m.0dtnr6)))",
    "topic_entity": {
      "m.0dtnr6": "Eucharist in the Catholic Church"
    }
  },
  {
    "qid": 3204989005000,
    "question": "what is the unit of mass in the measurement system that uses gray per second?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.07ny7",
        "entity_name": "Tonne"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.047dr",
        "entity_name": "Kilogram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1225dlgf",
        "entity_name": "Milligram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01x32j1",
        "entity_name": "Gram"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02p14f_",
        "entity_name": "Microgram"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.mass_unit",
          "class": "measurement_unit.mass_unit",
          "friendly_name": "Unit of Mass",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02sj5d4",
          "class": "measurement_unit.absorbed_dose_rate_unit",
          "friendly_name": "Gray per second",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.weight_units",
          "friendly_name": "Mass Units"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.absorbed_dose_rate_units",
          "friendly_name": "Absorbed Dose Rate Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.mass_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.02sj5d4 } \n?x1 :measurement_unit.measurement_system.weight_units ?x0 . \n?x1 :measurement_unit.measurement_system.absorbed_dose_rate_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.mass_unit (JOIN (R measurement_unit.measurement_system.weight_units) (JOIN measurement_unit.measurement_system.absorbed_dose_rate_units m.02sj5d4)))",
    "topic_entity": {
      "m.02sj5d4": "Gray per second"
    }
  },
  {
    "qid": 3203411012000,
    "question": "which tld registry registered verisign?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.09bffv",
        "entity_name": "Educause"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hsmt_",
        "entity_name": "Comores Telecom"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hsmw2",
        "entity_name": "The .tv Corporation"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hsm_y",
        "entity_name": "ENIC"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03m6rc",
        "entity_name": "Global Name Registry"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "internet.top_level_domain_registry",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Top Level Domain Registry",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "internet.top_level_domain",
          "class": "internet.top_level_domain",
          "friendly_name": "Top Level Domain",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01vbkb",
          "class": "internet.top_level_domain_registry",
          "friendly_name": "Verisign",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "internet.top_level_domain_registry.domains",
          "friendly_name": "Domains Registered"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "internet.top_level_domain.registry",
          "friendly_name": "Registry"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.top_level_domain_registry . \n?x1 :type.object.type :internet.top_level_domain . \nVALUES ?x2 { :m.01vbkb } \n?x0 :internet.top_level_domain_registry.domains ?x1 . \n?x1 :internet.top_level_domain.registry ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "internet"
    ],
    "level": "compositional",
    "s_expression": "(AND internet.top_level_domain_registry (JOIN internet.top_level_domain_registry.domains (JOIN internet.top_level_domain.registry m.01vbkb)))",
    "topic_entity": {
      "m.01vbkb": "Verisign"
    }
  },
  {
    "qid": 3203681011000,
    "question": "a particular religion that practices proselytising is accounted in which religious book?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0942mh",
        "entity_name": "Pearl of Great Price"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.015j7",
        "entity_name": "The Bible"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.048lc",
        "entity_name": "King James Version"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02943",
        "entity_name": "Doctrine and Covenants"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.019c7",
        "entity_name": "Book of Mormon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0vlz4",
        "entity_name": "Book of Mormon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.014_c",
        "entity_name": "Book of Alma"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "religion.religious_text",
          "class": "religion.religious_text",
          "friendly_name": "Religious Text",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "religion.religion",
          "class": "religion.religion",
          "friendly_name": "Religion",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01j2d8",
          "class": "religion.religious_practice",
          "friendly_name": "proselytising",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "religion.religion.texts",
          "friendly_name": "Texts"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "religion.religious_practice.practice_of",
          "friendly_name": "Religious practice of"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.religious_text . \n?x1 :type.object.type :religion.religion . \nVALUES ?x2 { :m.01j2d8 } \n?x1 :religion.religion.texts ?x0 . \n?x2 :religion.religious_practice.practice_of ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "religion"
    ],
    "level": "compositional",
    "s_expression": "(AND religion.religious_text (JOIN (R religion.religion.texts) (JOIN (R religion.religious_practice.practice_of) m.01j2d8)))",
    "topic_entity": {
      "m.01j2d8": "Proselytism"
    }
  },
  {
    "qid": 4301141013000,
    "question": "where is the version developed by frontier developments and distributed through wii ware released?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.075g54v",
        "entity_name": "Wii/DS NA"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_region",
          "class": "cvg.computer_game_region",
          "friendly_name": "Video Game Region",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03hfyj6",
          "class": "cvg.computer_game_distribution_system",
          "friendly_name": "wii ware",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.069dh8",
          "class": "cvg.cvg_developer",
          "friendly_name": "Frontier Developments",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.game_version.regions",
          "friendly_name": "Regions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.game_version.distributed_through",
          "friendly_name": "Distributed through"
        },
        {
          "start": 3,
          "end": 1,
          "relation": "cvg.cvg_developer.game_versions_developed",
          "friendly_name": "Game Versions Developed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_region . \n?x1 :type.object.type :cvg.game_version . \nVALUES ?x2 { :m.03hfyj6 } \nVALUES ?x3 { :m.069dh8 } \n?x1 :cvg.game_version.regions ?x0 . \n?x1 :cvg.game_version.distributed_through ?x2 . \n?x3 :cvg.cvg_developer.game_versions_developed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.069dh8))))",
    "topic_entity": {
      "m.03hfyj6": "WiiWare",
      "m.069dh8": "Frontier Developments"
    }
  },
  {
    "qid": 4301141020000,
    "question": "virtual console, which is developed by first star software, was released where?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.09c7w0",
        "entity_name": "United States of America"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_game_region",
          "class": "cvg.computer_game_region",
          "friendly_name": "Video Game Region",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.07sg3j",
          "class": "cvg.computer_game_distribution_system",
          "friendly_name": "Virtual Console",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.02pzfw",
          "class": "cvg.cvg_developer",
          "friendly_name": "First Star Software",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.game_version.regions",
          "friendly_name": "Regions"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.game_version.distributed_through",
          "friendly_name": "Distributed through"
        },
        {
          "start": 3,
          "end": 1,
          "relation": "cvg.cvg_developer.game_versions_developed",
          "friendly_name": "Game Versions Developed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_region . \n?x1 :type.object.type :cvg.game_version . \nVALUES ?x2 { :m.07sg3j } \nVALUES ?x3 { :m.02pzfw } \n?x1 :cvg.game_version.regions ?x0 . \n?x1 :cvg.game_version.distributed_through ?x2 . \n?x3 :cvg.cvg_developer.game_versions_developed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.07sg3j) (JOIN (R cvg.cvg_developer.game_versions_developed) m.02pzfw))))",
    "topic_entity": {
      "m.07sg3j": "Virtual Console",
      "m.02pzfw": "First Star Software"
    }
  },
  {
    "qid": 3201457003000,
    "question": "what exhibition has the same exhibition curator with warhol: headlines?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.057l189",
        "entity_name": "The Andy Goldsworthy Project"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "exhibitions.exhibition",
          "class": "exhibitions.exhibition",
          "friendly_name": "Exhibition",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "exhibitions.exhibition_curator",
          "class": "exhibitions.exhibition_curator",
          "friendly_name": "Exhibition curator",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0dlfpn1",
          "class": "exhibitions.exhibition",
          "friendly_name": "WARHOL: HEADLINES",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "exhibitions.exhibition_curator.exhibitions_curated",
          "friendly_name": "Exhibitions curated"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "exhibitions.exhibition_curator.exhibitions_curated",
          "friendly_name": "Exhibitions curated"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :exhibitions.exhibition . \n?x1 :type.object.type :exhibitions.exhibition_curator . \nVALUES ?x2 { :m.0dlfpn1 } \n?x1 :exhibitions.exhibition_curator.exhibitions_curated ?x0 . \n?x1 :exhibitions.exhibition_curator.exhibitions_curated ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "exhibitions"
    ],
    "level": "compositional",
    "s_expression": "(AND exhibitions.exhibition (JOIN (R exhibitions.exhibition_curator.exhibitions_curated) (JOIN exhibitions.exhibition_curator.exhibitions_curated m.0dlfpn1)))",
    "topic_entity": {
      "m.0dlfpn1": "WARHOL: HEADLINES"
    }
  },
  {
    "qid": 3203974007000,
    "question": "for diseases treated by mirtazapine,what is the risk factor?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dctd",
        "entity_name": "Chronic fatigue syndrome"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h3h4",
        "entity_name": "Peptic ulcer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01t91m",
        "entity_name": "Trigeminal neuralgia"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02y0js",
        "entity_name": "Stroke"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05mdx",
        "entity_name": "Osteoporosis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0qcr0",
        "entity_name": "Cancer"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c58k",
        "entity_name": "Diabetes mellitus"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dcsx",
        "entity_name": "Alzheimer's disease"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g02vk",
        "entity_name": "Parkinson's disease"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gk4g",
        "entity_name": "heart attack"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hg11",
        "entity_name": "Hypothyroidism"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05904",
        "entity_name": "Migraine"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ldpy",
        "entity_name": "Adolescence"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0255t_",
        "entity_name": "Dysmenorrhea"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03hz0",
        "entity_name": "Hyperthyroidism"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02vrr",
        "entity_name": "Epilepsy"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0d19y2",
        "entity_name": "HIV/AIDS"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.017s1k",
        "entity_name": "Amyotrophic lateral sclerosis"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.020hwm",
        "entity_name": "Low back pain"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.012lyw",
        "entity_name": "Stress"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0774bt4",
        "entity_name": "Family history of Clinical depression"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "medicine.risk_factor",
          "class": "medicine.risk_factor",
          "friendly_name": "Risk Factor",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "medicine.disease",
          "class": "medicine.disease",
          "friendly_name": "Disease or medical condition",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02lts4",
          "class": "medicine.medical_treatment",
          "friendly_name": "Mirtazapine",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "medicine.disease.risk_factors",
          "friendly_name": "Risk Factors"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "medicine.disease.treatments",
          "friendly_name": "Treatments"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.risk_factor . \n?x1 :type.object.type :medicine.disease . \nVALUES ?x2 { :m.02lts4 } \n?x1 :medicine.disease.risk_factors ?x0 . \n?x1 :medicine.disease.treatments ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "medicine"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND medicine.risk_factor (JOIN (R medicine.disease.risk_factors) (JOIN medicine.disease.treatments m.02lts4)))",
    "topic_entity": {
      "m.02lts4": "Mirtazapine"
    }
  },
  {
    "qid": 4302314020000,
    "question": "using amoxicillin for the treatment of pediatric autoimmune disorders associated with streptococcal infections which medical trial has the least number of expect total enrollment?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03zbgdy",
        "entity_name": "Treatment"
      }
    ],
    "function": "argmax",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "medicine.medical_trial_design",
          "class": "medicine.medical_trial_design",
          "friendly_name": "Medical trial design",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "medicine.medical_trial",
          "class": "medicine.medical_trial",
          "friendly_name": "Medical trial",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04d1kq9",
          "class": "medicine.medical_trial",
          "friendly_name": "Amoxicillin for the Treatment of Pediatric Autoimmune Disorders Associated With Streptococcal Infections",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.int",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "medicine.medical_trial.design",
          "friendly_name": "Design"
        },
        {
          "start": 0,
          "end": 2,
          "relation": "medicine.medical_trial_design.trials",
          "friendly_name": "Trials"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "medicine.medical_trial.expected_total_enrollment",
          "friendly_name": "Expected total enrollment"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_design . \n?x1 :type.object.type :medicine.medical_trial . \nVALUES ?x2 { :m.04d1kq9 } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :medicine.medical_trial_design . \n?y1 :type.object.type :medicine.medical_trial . \nVALUES ?y2 { :m.04d1kq9 } \n?y1 :medicine.medical_trial.design ?y0 . \n?y0 :medicine.medical_trial_design.trials ?y2 . \n?y1 :medicine.medical_trial.expected_total_enrollment ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x1 :medicine.medical_trial.design ?x0 . \n?x0 :medicine.medical_trial_design.trials ?x2 . \n?x1 :medicine.medical_trial.expected_total_enrollment ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "medicine"
    ],
    "level": "compositional",
    "s_expression": "(ARGMAX (AND medicine.medical_trial_design (JOIN medicine.medical_trial_design.trials m.04d1kq9)) (JOIN (R medicine.medical_trial.design) medicine.medical_trial.expected_total_enrollment))",
    "topic_entity": {
      "m.04d1kq9": "Amoxicillin for the Treatment of Pediatric Autoimmune Disorders Associated With Streptococcal Infections"
    }
  },
  {
    "qid": 3203081005000,
    "question": "what type of education is provided by university?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01_pb_",
        "entity_name": "Bill Nelson"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02z2f4",
        "entity_name": "Ronald A. Parise"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gxcx1",
        "entity_name": "Kevin A. Ford"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03_15f",
        "entity_name": "William Frederick Fisher"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02kc_d",
        "entity_name": "Norman Thagard"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02n1r8",
        "entity_name": "Andrew M. Allen"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gxc_h",
        "entity_name": "Ronald J. Garan, Jr."
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "spaceflight.astronaut",
          "class": "spaceflight.astronaut",
          "friendly_name": "Astronaut",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "education.education",
          "class": "education.education",
          "friendly_name": "Education",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0j_sncb",
          "class": "education.university",
          "friendly_name": "university",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.education",
          "friendly_name": "Education"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "education.education.institution",
          "friendly_name": "Institution"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.astronaut . \n?x1 :type.object.type :education.education . \nVALUES ?x2 { :m.0j_sncb } \n?x0 :people.person.education ?x1 . \n?x1 :education.education.institution ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "education",
      "people"
    ],
    "level": "compositional",
    "s_expression": "(AND spaceflight.astronaut (JOIN people.person.education (JOIN education.education.institution m.0j_sncb)))",
    "topic_entity": {
      "m.0j_sncb": "University of Florida"
    }
  },
  {
    "qid": 3200435006000,
    "question": "which unit is the si base unit of the j?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.120hhsxf",
        "entity_name": "Kiloton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1224btsg",
        "entity_name": "Kilojoule"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.122jqjdq",
        "entity_name": "Megaton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.017mjn",
        "entity_name": "Hartree"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.018lqb",
        "entity_name": "Kilowatt hour"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01fr3",
        "entity_name": "British thermal unit"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.01wv2",
        "entity_name": "Calorie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02m68",
        "entity_name": "Electronvolt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02phk",
        "entity_name": "Erg"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02qdq0",
        "entity_name": "Barrel of oil equivalent"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03r93c",
        "entity_name": "Tonne of oil equivalent"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04g9275",
        "entity_name": "Kilocalorie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04n4r_n",
        "entity_name": "Cubic mile of oil"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05cdmtb",
        "entity_name": "Ton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05cpvgm",
        "entity_name": "Milliton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05cpvh4",
        "entity_name": "Microton of TNT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05pxqc7",
        "entity_name": "Megaelectronvolt"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cz9j60",
        "entity_name": "Kilogram oil equivalent"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "freebase.unit_profile",
          "class": "freebase.unit_profile",
          "friendly_name": "Unit Profile",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.common_dimension",
          "class": "measurement_unit.common_dimension",
          "friendly_name": "Common Dimension",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04570",
          "class": "measurement_unit.energy_unit",
          "friendly_name": "j",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.dimension.units",
          "friendly_name": "Units"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.dimension.si_base_unit",
          "friendly_name": "SI Base Unit"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :freebase.unit_profile . \n?x1 :type.object.type :measurement_unit.common_dimension . \nVALUES ?x2 { :m.04570 } \n?x1 :measurement_unit.dimension.units ?x0 . \n?x1 :measurement_unit.dimension.si_base_unit ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND freebase.unit_profile (JOIN (R measurement_unit.dimension.units) (JOIN measurement_unit.dimension.si_base_unit m.04570)))",
    "topic_entity": {
      "m.04570": "Joule"
    }
  },
  {
    "qid": 2101016015000,
    "question": "which streams have a bit rate of 39?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03gc609",
        "entity_name": "WMNF - 39kbps Stream"
      }
    ],
    "function": "none",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "broadcast.internet_stream",
          "class": "broadcast.internet_stream",
          "friendly_name": "Internet Stream",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "39^^http://www.w3.org/2001/XMLSchema#integer",
          "class": "type.int",
          "friendly_name": "39",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "broadcast.internet_stream.stream_bitrate",
          "friendly_name": "Stream Bitrate"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.internet_stream . \nVALUES ?x1 { \"39\"^^<http://www.w3.org/2001/XMLSchema#integer> } \n?x0 :broadcast.internet_stream.stream_bitrate ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "broadcast"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND broadcast.internet_stream (JOIN broadcast.internet_stream.stream_bitrate 39^^http://www.w3.org/2001/XMLSchema#integer))",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 2102297003000,
    "question": "the original gravity of 1.078 is the level for what beer?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ghttzq",
        "entity_name": "Saint Arnold Divine Reserve 11"
      }
    ],
    "function": "none",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "food.beer",
          "class": "food.beer",
          "friendly_name": "Beer",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "1.078^^http://www.w3.org/2001/XMLSchema#float",
          "class": "type.float",
          "friendly_name": "1.078",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "food.beer.original_gravity",
          "friendly_name": "Original gravity"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :food.beer . \nVALUES ?x1 { \"1.078\"^^<http://www.w3.org/2001/XMLSchema#float> } \n?x0 :food.beer.original_gravity ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "food"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND food.beer (JOIN food.beer.original_gravity 1.078^^http://www.w3.org/2001/XMLSchema#float))",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 3203081006000,
    "question": "university of louisiana at lafayette can provide the what type of education?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03vg63",
        "entity_name": "Albert H. Crews"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "spaceflight.astronaut",
          "class": "spaceflight.astronaut",
          "friendly_name": "Astronaut",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "education.education",
          "class": "education.education",
          "friendly_name": "Education",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02zccd",
          "class": "education.university",
          "friendly_name": "University of Louisiana at Lafayette",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.education",
          "friendly_name": "Education"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "education.education.institution",
          "friendly_name": "Institution"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.astronaut . \n?x1 :type.object.type :education.education . \nVALUES ?x2 { :m.02zccd } \n?x0 :people.person.education ?x1 . \n?x1 :education.education.institution ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "education",
      "people"
    ],
    "level": "compositional",
    "s_expression": "(AND spaceflight.astronaut (JOIN people.person.education (JOIN education.education.institution m.02zccd)))",
    "topic_entity": {
      "m.02zccd": "University of Louisiana at Lafayette"
    },
    "hops": 3
  },
  {
    "qid": 3204817008000,
    "question": "what is the video game series that includes a video game expansion designed by blizzard games?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03bwwx",
        "entity_name": "Warcraft"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.game_series",
          "class": "cvg.game_series",
          "friendly_name": "Video Game Series",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_game_expansion",
          "class": "cvg.computer_game_expansion",
          "friendly_name": "Video Game Expansion",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.01jx9",
          "class": "cvg.cvg_designer",
          "friendly_name": "blizzard games",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "cvg.computer_videogame.game_series",
          "friendly_name": "Part of game series"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.designers",
          "friendly_name": "Designers"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_series . \n?x1 :type.object.type :cvg.computer_game_expansion . \nVALUES ?x2 { :m.01jx9 } \n?x1 :cvg.computer_videogame.game_series ?x0 . \n?x1 :cvg.computer_videogame.designers ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.game_series (JOIN (R cvg.computer_videogame.game_series) (JOIN cvg.computer_videogame.designers m.01jx9)))",
    "topic_entity": {
      "m.01jx9": "Blizzard Entertainment"
    },
    "hops": 3
  },
  {
    "qid": 2102525002000,
    "question": "what is the locomotive class with a maximum speed of 120.0?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03wgv4l",
        "entity_name": "NSB Class 88"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bbywl5",
        "entity_name": "ÖBB Class 5047"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03czhrd",
        "entity_name": "HŽ series 7021"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.012hf028",
        "entity_name": "Newag 220M/221M"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g54zrl",
        "entity_name": "VR Class Dm12"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03cw48z",
        "entity_name": "VR Class Sm2"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.064nc8m",
        "entity_name": "Stadler NExT"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02pxf8p",
        "entity_name": "NSB Class 66"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03y93qs",
        "entity_name": "SL X1"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03cqg35",
        "entity_name": "VR Class Sm1"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.012hd3_8",
        "entity_name": "Kolzam RegioVan"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.08szcw",
        "entity_name": "NZR RM class"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09tz6m",
        "entity_name": "PKP class ED73"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03c7g0b",
        "entity_name": "NMBS/SNCB Class 41"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bxzdk2",
        "entity_name": "NS SGMm"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03cz6hv",
        "entity_name": "HŽ series 7121"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02vp24b",
        "entity_name": "InterCity Express"
      }
    ],
    "function": "none",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "rail.locomotive_class",
          "class": "rail.locomotive_class",
          "friendly_name": "Locomotive class",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "120.0^^http://www.w3.org/2001/XMLSchema#float",
          "class": "type.float",
          "friendly_name": "120.0",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "rail.locomotive_class.maximum_speed",
          "friendly_name": "Maximum speed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :rail.locomotive_class . \nVALUES ?x1 { \"120.0\"^^<http://www.w3.org/2001/XMLSchema#float> } \n?x0 :rail.locomotive_class.maximum_speed ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "rail"
    ],
    "level": "zero-shot",
    "s_expression": "(AND rail.locomotive_class (JOIN rail.locomotive_class.maximum_speed 120.0^^http://www.w3.org/2001/XMLSchema#float))",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 2103615002000,
    "question": "the locomotive that has the largest number of completed locomotives is called what?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j_42tq",
        "entity_name": "Seven Stars in Kyushu"
      }
    ],
    "function": "argmax",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "rail.locomotive",
          "class": "rail.locomotive",
          "friendly_name": "Locomotive",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.datetime",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "rail.locomotive.construction_completed",
          "friendly_name": "Construction completed"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :rail.locomotive . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :rail.locomotive . \n?y0 :rail.locomotive.construction_completed ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :rail.locomotive.construction_completed ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "rail"
    ],
    "level": "zero-shot",
    "s_expression": "(ARGMAX rail.locomotive rail.locomotive.construction_completed)",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 3204827000000,
    "question": "find deceased person who belongs to the american indian group that speak pawnee language.",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02rfbrt",
        "entity_name": "Chief Yellow Horse"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03clyvv",
        "entity_name": "Petalesharo"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.026vmxs",
        "entity_name": "Acee Blue Eagle"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "people.deceased_person",
          "class": "people.deceased_person",
          "friendly_name": "Deceased Person",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "people.american_indian_group",
          "class": "people.american_indian_group",
          "friendly_name": "American Indian group",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.06dqgy",
          "class": "language.human_language",
          "friendly_name": "Pawnee Language",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "people.person.ethnicity",
          "friendly_name": "Ethnicity"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "people.ethnicity.languages_spoken",
          "friendly_name": "Languages spoken"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :people.deceased_person . \n?x1 :type.object.type :people.american_indian_group . \nVALUES ?x2 { :m.06dqgy } \n?x0 :people.person.ethnicity ?x1 . \n?x1 :people.ethnicity.languages_spoken ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "people"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND people.deceased_person (JOIN people.person.ethnicity (JOIN people.ethnicity.languages_spoken m.06dqgy)))",
    "topic_entity": {
      "m.06dqgy": "Pawnee Language"
    },
    "hops": 3
  },
  {
    "qid": 3204804000000,
    "question": "what is the input method for the musical game with guitar hero iii - set 1 - starting out small?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02_xfg7",
        "entity_name": "Guitar Hero Guitar"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.input_method",
          "class": "cvg.input_method",
          "friendly_name": "Input Method",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.musical_game",
          "class": "cvg.musical_game",
          "friendly_name": "Musical Game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0dp7bmr",
          "class": "cvg.video_game_soundtrack",
          "friendly_name": "Guitar Hero III - Set 1 - Starting Out Small",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.input_method.games_using_this",
          "friendly_name": "Games Using This"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "cvg.video_game_soundtrack.video_game",
          "friendly_name": "Video game"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.input_method . \n?x1 :type.object.type :cvg.musical_game . \nVALUES ?x2 { :m.0dp7bmr } \n?x0 :cvg.input_method.games_using_this ?x1 . \n?x2 :cvg.video_game_soundtrack.video_game ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.input_method (JOIN cvg.input_method.games_using_this (JOIN (R cvg.video_game_soundtrack.video_game) m.0dp7bmr)))",
    "topic_entity": {
      "m.0dp7bmr": "Guitar Hero III - Set 1 - Starting Out Small"
    },
    "hops": 3
  },
  {
    "qid": 3201778015000,
    "question": "what is the genre of the play with the grease (1994 broadway revival cast) soundtrack?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0557q",
        "entity_name": "Musical theatre"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "theater.theater_genre",
          "class": "theater.theater_genre",
          "friendly_name": "Theater Genre",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "theater.play",
          "class": "theater.play",
          "friendly_name": "Play",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0g90rnz",
          "class": "theater.musical_soundtrack",
          "friendly_name": "Grease (1994 Broadway revival cast)",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "theater.play.genre",
          "friendly_name": "Genre"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "theater.play.soundtracks",
          "friendly_name": "Soundtracks"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :theater.theater_genre . \n?x1 :type.object.type :theater.play . \nVALUES ?x2 { :m.0g90rnz } \n?x1 :theater.play.genre ?x0 . \n?x1 :theater.play.soundtracks ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "theater"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND theater.theater_genre (JOIN (R theater.play.genre) (JOIN theater.play.soundtracks m.0g90rnz)))",
    "topic_entity": {
      "m.0g90rnz": "Grease (1994 Broadway revival cast)"
    },
    "hops": 3
  },
  {
    "qid": 3204797009000,
    "question": "what is the name of the fictional creature's species depicted by the character in rene mosier?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.088b9x",
        "entity_name": "Tobias Sirinial Santorelli"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.088bbl",
        "entity_name": "Aximili-Esgarrouth-Isthill"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "fictional_universe.fictional_creature",
          "class": "fictional_universe.fictional_creature",
          "friendly_name": "Fictional Creature",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "fictional_universe.character_species",
          "class": "fictional_universe.character_species",
          "friendly_name": "Character Species",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.09vvs57",
          "class": "fictional_universe.fictional_character",
          "friendly_name": "Rene Mosier",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "fictional_universe.fictional_creature.fictional_creature_species",
          "friendly_name": "Fictional Creature Species"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "fictional_universe.character_species.characters_of_this_species",
          "friendly_name": "Characters of This Species"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.fictional_creature . \n?x1 :type.object.type :fictional_universe.character_species . \nVALUES ?x2 { :m.09vvs57 } \n?x0 :fictional_universe.fictional_creature.fictional_creature_species ?x1 . \n?x1 :fictional_universe.character_species.characters_of_this_species ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "fictional_universe"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND fictional_universe.fictional_creature (JOIN fictional_universe.fictional_creature.fictional_creature_species (JOIN fictional_universe.character_species.characters_of_this_species m.09vvs57)))",
    "topic_entity": {
      "m.09vvs57": "Rene Mosier"
    },
    "hops": 3
  },
  {
    "qid": 3205699008000,
    "question": "which gameplay mode is the video game that supports the peripheral currah?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hjn4",
        "entity_name": "Single-player video game"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.gameplay_mode",
          "class": "cvg.gameplay_mode",
          "friendly_name": "Gameplay Mode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.computer_videogame",
          "class": "cvg.computer_videogame",
          "friendly_name": "Video game",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0527_3v",
          "class": "computer.computer_peripheral",
          "friendly_name": "currah",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.gameplay_mode.games_with_this_mode",
          "friendly_name": "Games with this mode"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "cvg.computer_videogame.peripherals_supported",
          "friendly_name": "Peripherals supported"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.gameplay_mode . \n?x1 :type.object.type :cvg.computer_videogame . \nVALUES ?x2 { :m.0527_3v } \n?x0 :cvg.gameplay_mode.games_with_this_mode ?x1 . \n?x1 :cvg.computer_videogame.peripherals_supported ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.gameplay_mode (JOIN cvg.gameplay_mode.games_with_this_mode (JOIN cvg.computer_videogame.peripherals_supported m.0527_3v)))",
    "topic_entity": {
      "m.0527_3v": "Currah Microspeech"
    },
    "hops": 3
  },
  {
    "qid": 2102105007000,
    "question": "what television series season began originally on 1966-01-12?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ng3h6",
        "entity_name": "Batman - Season 1"
      }
    ],
    "function": "none",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "tv.tv_series_season",
          "class": "tv.tv_series_season",
          "friendly_name": "TV Season",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "1966-01-12^^http://www.w3.org/2001/XMLSchema#date",
          "class": "type.datetime",
          "friendly_name": "1966-01-12",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "tv.tv_series_season.from",
          "friendly_name": "From"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :tv.tv_series_season . \nVALUES ?x1 { \"1966-01-12-08:00\"^^<http://www.w3.org/2001/XMLSchema#date> } \n?x0 :tv.tv_series_season.from ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "tv"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND tv.tv_series_season (JOIN tv.tv_series_season.from 1966-01-12^^http://www.w3.org/2001/XMLSchema#date))",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 2102574003000,
    "question": "1.0 dose in grays equals which unit of absorbed?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.01q5dt",
        "entity_name": "Gray"
      }
    ],
    "function": "none",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.absorbed_dose_unit",
          "class": "measurement_unit.absorbed_dose_unit",
          "friendly_name": "Unit of Absorbed Dose",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "1.0^^http://www.w3.org/2001/XMLSchema#float",
          "class": "type.float",
          "friendly_name": "1.0",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.absorbed_dose_unit.dose_in_grays",
          "friendly_name": "Dose in grays"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.absorbed_dose_unit . \nVALUES ?x1 { \"1.0\"^^<http://www.w3.org/2001/XMLSchema#float> } \n?x0 :measurement_unit.absorbed_dose_unit.dose_in_grays ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.absorbed_dose_unit (JOIN measurement_unit.absorbed_dose_unit.dose_in_grays 1.0^^http://www.w3.org/2001/XMLSchema#float))",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 2104460015000,
    "question": "which meteorite has a mass of less than or equal to 2.3e+06?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b75kvq",
        "entity_name": "Kesen meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0_v1ngh",
        "entity_name": "Yamato 000593"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0192tq",
        "entity_name": "Allan Hills 84001"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02pk_dp",
        "entity_name": "Adelie Land meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02vz6_6",
        "entity_name": "Hadley Rille meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03kmgy",
        "entity_name": "Sayh al Uhaymir 169"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03x_myf",
        "entity_name": "Allende meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0466m46",
        "entity_name": "Stannern"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.047n218",
        "entity_name": "Sylacauga"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04cqn05",
        "entity_name": "Park Forest"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04cr6l0",
        "entity_name": "Esquel"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04crypn",
        "entity_name": "Mineo"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04cs0f_",
        "entity_name": "Norton County"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04csbcf",
        "entity_name": "Qidong"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04csg7x",
        "entity_name": "Homestead"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04csw3m",
        "entity_name": "Krasnojarsk"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04ct6t9",
        "entity_name": "Monte Milone"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04ctkhl",
        "entity_name": "L'Aigle"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04cx1hr",
        "entity_name": "Omolon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04cy08_",
        "entity_name": "Huckitta"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04cyr8d",
        "entity_name": "Pavlovka"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04f324b",
        "entity_name": "Albareto"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04f32zg",
        "entity_name": "Pallasovka"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04zwynp",
        "entity_name": "Buzzard Coulee meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05v5gh",
        "entity_name": "Orgueil"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.063skl",
        "entity_name": "Murchison meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.088_10",
        "entity_name": "Imilac"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0897gv",
        "entity_name": "Paragould meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09gcw9t",
        "entity_name": "Bovedy"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09gkl3z",
        "entity_name": "Chergach"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.09rvcq1",
        "entity_name": "Yardymly"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b__c7k",
        "entity_name": "Chambord meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwgd_b",
        "entity_name": "Assisi"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwgmnh",
        "entity_name": "Agen"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwhnq9",
        "entity_name": "Akbarpur"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwhply",
        "entity_name": "Adhi Kot"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwhvby",
        "entity_name": "Allegan"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwj3_v",
        "entity_name": "Archie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwj_s9",
        "entity_name": "Appley Bridge meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwjw02",
        "entity_name": "Ankober"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwk21f",
        "entity_name": "Ambapur Nagla"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwk6_m",
        "entity_name": "Anlong"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwkp_2",
        "entity_name": "Abee"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwkz1n",
        "entity_name": "Avanhandava"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwl5_j",
        "entity_name": "Arbol Solo"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bwmd9j",
        "entity_name": "Arroyo Aguiar"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c23h0",
        "entity_name": "Kaidun meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c41cch",
        "entity_name": "Neuschwanstein"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0c4jfx",
        "entity_name": "Fukang"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cmb98g",
        "entity_name": "St-Robert meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cmc05b",
        "entity_name": "Lac Dodon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0cmc49w",
        "entity_name": "Penouille meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dgs51l",
        "entity_name": "Annaheim meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dlklwb",
        "entity_name": "Springwater meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0dwh4l",
        "entity_name": "Nakhla meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0f3sxx",
        "entity_name": "Yamato 791197"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fph_c6",
        "entity_name": "Benton meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fq0cs3",
        "entity_name": "Blithfield meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0fq0scf",
        "entity_name": "Osseo meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0g56y8j",
        "entity_name": "Gay Gulch meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gkxxrj",
        "entity_name": "Yamato 691"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0glqp61",
        "entity_name": "Middlesbrough meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gt9_k",
        "entity_name": "Shergotty meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0gxz_3c",
        "entity_name": "Adzhi-Bogdo"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0hrfnf_",
        "entity_name": "Claxton meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j42kb_",
        "entity_name": "Ensisheim"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j_4mfl",
        "entity_name": "Atoka meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jgsx",
        "entity_name": "Wold Cottage"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jky239",
        "entity_name": "Sutter's Mill meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwxd47",
        "entity_name": "Loreto"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jwxlyx",
        "entity_name": "Goose Lake meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pb5dcb",
        "entity_name": "Eagle Station meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pb5qcp",
        "entity_name": "Chinga meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pb5xly",
        "entity_name": "Zaklodzie meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pc300y",
        "entity_name": "Santa Vitoria do Palmar meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pc42wz",
        "entity_name": "Richardton meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pc60sg",
        "entity_name": "Tlacotepec meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pclrtm",
        "entity_name": "Příbram meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pclssg",
        "entity_name": "Oldenburg meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pcm1mz",
        "entity_name": "Coahuila meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pcm3cl",
        "entity_name": "Northwest Africa 3009"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pcmbv8",
        "entity_name": "Bellsbank meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pcv15b",
        "entity_name": "Winona meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pcv325",
        "entity_name": "Vermillion meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pdbn_0",
        "entity_name": "D'Orbigny meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pdndgb",
        "entity_name": "Millbillillie"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0pk_8hy",
        "entity_name": "Zaisho"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0r4j7z7",
        "entity_name": "Baszkówka"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0r4ngkr",
        "entity_name": "Łowicz"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0r4pjyx",
        "entity_name": "Sołtmany"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0s8vypz",
        "entity_name": "Northwest Africa 7325"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ynxg66",
        "entity_name": "Northwest Africa 7034"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02wz33w",
        "entity_name": "Peekskill meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0r8lh7l",
        "entity_name": "Allan Hills A81005"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0k0s5_y",
        "entity_name": "Grant meteorite"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0j9kdc4",
        "entity_name": "Treysa"
      }
    ],
    "function": "<=",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "astronomy.meteorite",
          "class": "astronomy.meteorite",
          "friendly_name": "Meteorite",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "2.3e+06^^http://www.w3.org/2001/XMLSchema#float",
          "class": "type.float",
          "friendly_name": "2.3e+06",
          "question_node": 0,
          "function": "<="
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "astronomy.meteorite.meteorite_mass",
          "friendly_name": "Meteorite Mass"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.meteorite . \nFILTER (?x1 <= \"2.3e+06\"^^<http://www.w3.org/2001/XMLSchema#float>)\n?x0 :astronomy.meteorite.meteorite_mass ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "astronomy"
    ],
    "level": "compositional",
    "s_expression": "(AND astronomy.meteorite (le astronomy.meteorite.meteorite_mass 2.3e+06^^http://www.w3.org/2001/XMLSchema#float))",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 4302008004000,
    "question": "which tournament events did competitors from the united states win a gold medal?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.04jm9jb",
        "entity_name": "2007 World Championships in Athletics – Men's 4 × 100 metres relay"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07k9brc",
        "entity_name": "2009 World Championships in Athletics – Men's 400 metres hurdles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0r3rdwy",
        "entity_name": "2013 US Open – Women's Singles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07kd3mn",
        "entity_name": "2009 World Championships in Athletics – Women's 4 × 400 metres relay"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.076vw_4",
        "entity_name": "2009 World Championships in Athletics – Men's 20 kilometres walk"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07k7_0z",
        "entity_name": "2009 World Championships in Athletics – Women's long jump"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07k4z7x",
        "entity_name": "2009 World Championships in Athletics – Men's long jump"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04j9k3k",
        "entity_name": "2007 World Championships in Athletics – Women's 200 metres"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07k48dy",
        "entity_name": "2009 World Championships in Athletics – Men's 4 × 400 metres relay"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07kbjrt",
        "entity_name": "2009 World Championships in Athletics – Men's 50 kilometres walk"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b6521g",
        "entity_name": "2007 World Championships in Athletics – Women's 4 x 100 metres relay"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07k4yk2",
        "entity_name": "2009 World Championships in Athletics – Women's 20 kilometres walk"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07k4jp5",
        "entity_name": "2009 World Championships in Athletics – Men's decathlon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0jt592v",
        "entity_name": "2008 IAAF World Indoor Championships – Women's 60 metres hurdles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.076tmvs",
        "entity_name": "2009 World Championships in Athletics – Men's shot put"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0wf1lyr",
        "entity_name": "Swimming at the 2013 World Aquatics Championships – Women's 4 × 100 metre medley relay"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0wjn836",
        "entity_name": "2013 World Championships in Athletics – Men's decathlon"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0vshv41",
        "entity_name": "Swimming at the 1973 World Aquatics Championships – Men's 200 metre butterfly"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0b6521k",
        "entity_name": "2007 World Championships in Athletics – Women's 100 metres hurdles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.06w7h1_",
        "entity_name": "1996 Indy 200 at Walt Disney World"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0wjv0zt",
        "entity_name": "2013 Rogers Cup – Women's Singles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0bh9zcc",
        "entity_name": "2010 IAAF World Indoor Championships – Women's 60 metres hurdles"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0l8gjwv",
        "entity_name": "2013 PGA Championship"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.03byhjl",
        "entity_name": "2007 World Championships in Athletics – Men's 100 metres"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07k5zv7",
        "entity_name": "2009 World Championships in Athletics – Men's 400 metres"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07k4cjq",
        "entity_name": "2009 World Championships in Athletics – Women's 400 metres"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07kbd7v",
        "entity_name": "2009 World Championships in Athletics – Women's 200 metres"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04jfbf8",
        "entity_name": "2007 World Championships in Athletics – Men's 200 metres"
      }
    ],
    "function": "none",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "sports.tournament_event_competition",
          "class": "sports.tournament_event_competition",
          "friendly_name": "Tournament event competition",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "sports.competitor_competition_relationship",
          "class": "sports.competitor_competition_relationship",
          "friendly_name": "Competitor/competition relationship",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.02lpp7",
          "class": "sports.sport_medal",
          "friendly_name": "Gold medal",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.09c7w0",
          "class": "sports.sport_country",
          "friendly_name": "united states",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "sports.competitor_competition_relationship.competition",
          "friendly_name": "Competition"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "sports.competitor_competition_relationship.medal",
          "friendly_name": "Medal"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "sports.competitor_competition_relationship.country",
          "friendly_name": "Country"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.tournament_event_competition . \n?x1 :type.object.type :sports.competitor_competition_relationship . \nVALUES ?x2 { :m.02lpp7 } \nVALUES ?x3 { :m.09c7w0 } \n?x1 :sports.competitor_competition_relationship.competition ?x0 . \n?x1 :sports.competitor_competition_relationship.medal ?x2 . \n?x1 :sports.competitor_competition_relationship.country ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "sports"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND sports.tournament_event_competition (JOIN (R sports.competitor_competition_relationship.competition) (AND (JOIN sports.competitor_competition_relationship.medal m.02lpp7) (JOIN sports.competitor_competition_relationship.country m.09c7w0))))",
    "topic_entity": {
      "m.02lpp7": "Gold medal",
      "m.09c7w0": "United States of America"
    },
    "hops": 4
  },
  {
    "qid": 2100708009000,
    "question": "which food has energy per 100g as 802.0?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0t_9j5x",
        "entity_name": "null"
      }
    ],
    "function": "none",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "food.food",
          "class": "food.food",
          "friendly_name": "Food",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "802.0^^http://www.w3.org/2001/XMLSchema#float",
          "class": "type.float",
          "friendly_name": "802.0",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "food.food.energy",
          "friendly_name": "Energy per 100g"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :food.food . \nVALUES ?x1 { \"802.0\"^^<http://www.w3.org/2001/XMLSchema#float> } \n?x0 :food.food.energy ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "food"
    ],
    "level": "i.i.d.",
    "s_expression": "(AND food.food (JOIN food.food.energy 802.0^^http://www.w3.org/2001/XMLSchema#float))",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 3204476002000,
    "question": "which unit of energy is of the same measurement system as cumecs?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.1224btsg",
        "entity_name": "Kilojoule"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04570",
        "entity_name": "Joule"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.energy_unit",
          "class": "measurement_unit.energy_unit",
          "friendly_name": "Unit of Energy",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.0gbw2l",
          "class": "measurement_unit.unit_of_volumetric_flow_rate",
          "friendly_name": "cumecs",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.energy_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.volumetric_flow_rate_units",
          "friendly_name": "Volumetric Flow Rate Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.energy_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.0gbw2l } \n?x0 :measurement_unit.energy_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.volumetric_flow_rate_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.energy_unit (JOIN measurement_unit.energy_unit.measurement_system (JOIN measurement_unit.measurement_system.volumetric_flow_rate_units m.0gbw2l)))",
    "topic_entity": {
      "m.0gbw2l": "Cubic metre per second"
    },
    "hops": 3
  },
  {
    "qid": 3202416012000,
    "question": "what is the name of the video game version that was developed by the developer of atelier rorona: the alchemist of arland?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlkc1",
        "entity_name": "Atelier Iris 2: The Azoth of Destiny"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlg9g",
        "entity_name": "Atelier Iris 3: Grand Fantasm"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hljhw",
        "entity_name": "Atelier Iris: Eternal Mana"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.02hlx78",
        "entity_name": "Ar tonelico: Melody of Elemia"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.040h8x_",
        "entity_name": "Ar tonelico 2: Sekai ni Hibiku Shoujotachi no Metafalica"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.04djkgn",
        "entity_name": "Mana-Khemia 2"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05ns749",
        "entity_name": "Mana Khemia: Alchemists of Al-Revis"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.game_version",
          "class": "cvg.game_version",
          "friendly_name": "Video Game Version",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "cvg.cvg_developer",
          "class": "cvg.cvg_developer",
          "friendly_name": "Video Game Developer",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05p2dn6",
          "class": "cvg.computer_videogame",
          "friendly_name": "Atelier Rorona: The Alchemist of Arland",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.game_version.developer",
          "friendly_name": "Developer"
        },
        {
          "start": 2,
          "end": 1,
          "relation": "cvg.computer_videogame.developer",
          "friendly_name": "Developer"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \n?x1 :type.object.type :cvg.cvg_developer . \nVALUES ?x2 { :m.05p2dn6 } \n?x0 :cvg.game_version.developer ?x1 . \n?x2 :cvg.computer_videogame.developer ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.game_version (JOIN cvg.game_version.developer (JOIN (R cvg.computer_videogame.developer) m.05p2dn6)))",
    "topic_entity": {
      "m.05p2dn6": "Atelier Rorona: The Alchemist of Arland"
    },
    "hops": 3
  },
  {
    "qid": 3205327012000,
    "question": "which radio programs focus on homelessness?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.03hxd3",
        "entity_name": "Radio documentary"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "broadcast.genre",
          "class": "broadcast.genre",
          "friendly_name": "Broadcast Genre",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "radio.radio_program",
          "class": "radio.radio_program",
          "friendly_name": "Radio program",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.03l7f",
          "class": "radio.radio_subject",
          "friendly_name": "Homelessness",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "broadcast.content.genre",
          "friendly_name": "Genres"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "radio.radio_program.subjects",
          "friendly_name": "Subject"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.genre . \n?x1 :type.object.type :radio.radio_program . \nVALUES ?x2 { :m.03l7f } \n?x1 :broadcast.content.genre ?x0 . \n?x1 :radio.radio_program.subjects ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "radio",
      "broadcast"
    ],
    "level": "zero-shot",
    "s_expression": "(AND broadcast.genre (JOIN (R broadcast.content.genre) (JOIN radio.radio_program.subjects m.03l7f)))",
    "topic_entity": {
      "m.03l7f": "Homelessness"
    },
    "hops": 3
  },
  {
    "qid": 2102981012000,
    "question": "365.0 is the horsepower for what engine?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h4_7n6",
        "entity_name": "Ford 3.5L 6 Cylinder 365 hp 420 ft-lbs"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.0h2hjkx",
        "entity_name": "Ford 3.5L 6 Cylinder 365 hp 350 ft-lbs Turbo"
      }
    ],
    "function": "none",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "automotive.engine",
          "class": "automotive.engine",
          "friendly_name": "Engine",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "365.0^^http://www.w3.org/2001/XMLSchema#float",
          "class": "type.float",
          "friendly_name": "365.0",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "automotive.engine.horsepower",
          "friendly_name": "Horsepower"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :automotive.engine . \nVALUES ?x1 { \"365.0\"^^<http://www.w3.org/2001/XMLSchema#float> } \n?x0 :automotive.engine.horsepower ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "automotive"
    ],
    "level": "compositional",
    "s_expression": "(AND automotive.engine (JOIN automotive.engine.horsepower 365.0^^http://www.w3.org/2001/XMLSchema#float))",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 2105385003000,
    "question": "what is the largest unit of length in meters?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.086qlz",
        "entity_name": "Siriometer"
      }
    ],
    "function": "argmax",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.distance_unit",
          "class": "measurement_unit.distance_unit",
          "friendly_name": "Unit of Length",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "0^^http://www.w3.org/2001/XMLSchema#int",
          "class": "type.float",
          "friendly_name": "0",
          "question_node": 0,
          "function": "argmax"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.distance_unit.distance_in_meters",
          "friendly_name": "Distance In Meters"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.distance_unit . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :measurement_unit.distance_unit . \n?y0 :measurement_unit.distance_unit.distance_in_meters ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :measurement_unit.distance_unit.distance_in_meters ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(ARGMAX measurement_unit.distance_unit measurement_unit.distance_unit.distance_in_meters)",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 3201457008000,
    "question": "matisse—picasso shares the same exhibition curator with which exhibition?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0773glk",
        "entity_name": "Jasper Johns: A Retrospective"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.07gz15j",
        "entity_name": "'Primitivism' in 20th Century Art: Affinity of the Tribal and the Modern"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "exhibitions.exhibition",
          "class": "exhibitions.exhibition",
          "friendly_name": "Exhibition",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "exhibitions.exhibition_curator",
          "class": "exhibitions.exhibition_curator",
          "friendly_name": "Exhibition curator",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.063jlxz",
          "class": "exhibitions.exhibition",
          "friendly_name": "Matisse—Picasso",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "exhibitions.exhibition_curator.exhibitions_curated",
          "friendly_name": "Exhibitions curated"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "exhibitions.exhibition_curator.exhibitions_curated",
          "friendly_name": "Exhibitions curated"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :exhibitions.exhibition . \n?x1 :type.object.type :exhibitions.exhibition_curator . \nVALUES ?x2 { :m.063jlxz } \n?x1 :exhibitions.exhibition_curator.exhibitions_curated ?x0 . \n?x1 :exhibitions.exhibition_curator.exhibitions_curated ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "exhibitions"
    ],
    "level": "compositional",
    "s_expression": "(AND exhibitions.exhibition (JOIN (R exhibitions.exhibition_curator.exhibitions_curated) (JOIN exhibitions.exhibition_curator.exhibitions_curated m.063jlxz)))",
    "topic_entity": {
      "m.063jlxz": "Matisse—Picasso"
    },
    "hops": 2
  },
  {
    "qid": 2100867008000,
    "question": "on 02/14/2011, which radio program was broadcasted for the first time?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ng0zz0",
        "entity_name": "Matters of the Heart"
      }
    ],
    "function": "none",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "radio.radio_program_episode",
          "class": "radio.radio_program_episode",
          "friendly_name": "Radio program episode",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "literal",
          "id": "2011-02-14^^http://www.w3.org/2001/XMLSchema#date",
          "class": "type.datetime",
          "friendly_name": "02/14/2011",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "radio.radio_program_episode.air_date",
          "friendly_name": "Air date"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program_episode . \nVALUES ?x1 { \"2011-02-14-08:00\"^^<http://www.w3.org/2001/XMLSchema#date> } \n?x0 :radio.radio_program_episode.air_date ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "radio"
    ],
    "level": "zero-shot",
    "s_expression": "(AND radio.radio_program_episode (JOIN radio.radio_program_episode.air_date 2011-02-14^^http://www.w3.org/2001/XMLSchema#date))",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 2100198007000,
    "question": "mysterious adventures series supports what video games?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0284xw0",
        "entity_name": "Waxworks"
      }
    ],
    "function": "none",
    "num_node": 2,
    "num_edge": 1,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "cvg.computer_videogame",
          "class": "cvg.computer_videogame",
          "friendly_name": "Video game",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "entity",
          "id": "g.11bc15x6_k",
          "class": "cvg.game_series",
          "friendly_name": "Mysterious Adventures Series",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "cvg.computer_videogame.game_series",
          "friendly_name": "Part of game series"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_videogame . \nVALUES ?x1 { :g.11bc15x6_k } \n?x0 :cvg.computer_videogame.game_series ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
    "domains": [
      "cvg"
    ],
    "level": "zero-shot",
    "s_expression": "(AND cvg.computer_videogame (JOIN cvg.computer_videogame.game_series g.11bc15x6_k))",
    "topic_entity": {},
    "hops": 2
  },
  {
    "qid": 3203329002000,
    "question": "in the measurement system where luminous flux units of lumens is used, what is the unit of charge?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0ctyj",
        "entity_name": "Coulomb"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.charge_unit",
          "class": "measurement_unit.charge_unit",
          "friendly_name": "Unit of Charge",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "measurement_unit.measurement_system",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "Measurement System",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.04ckf7",
          "class": "measurement_unit.luminous_flux_unit",
          "friendly_name": "lumens",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "measurement_unit.charge_unit.measurement_system",
          "friendly_name": "Measurement System"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "measurement_unit.measurement_system.luminous_flux_units",
          "friendly_name": "Luminous Flux Units"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.charge_unit . \n?x1 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x2 { :m.04ckf7 } \n?x0 :measurement_unit.charge_unit.measurement_system ?x1 . \n?x1 :measurement_unit.measurement_system.luminous_flux_units ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.charge_unit (JOIN measurement_unit.charge_unit.measurement_system (JOIN measurement_unit.measurement_system.luminous_flux_units m.04ckf7)))",
    "topic_entity": {
      "m.04ckf7": "Lumen"
    },
    "hops": 3
  },
  {
    "qid": 4303460000000,
    "question": "how many different dog breeds from the canada have a similar temperament as abull terrier?",
    "answer": [
      {
        "answer_type": "Value",
        "answer_argument": "4"
      }
    ],
    "function": "count",
    "num_node": 4,
    "num_edge": 3,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "biology.breed_temperament",
          "class": "biology.breed_temperament",
          "friendly_name": "Breed temperament",
          "question_node": 1,
          "function": "count"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "biology.animal_breed",
          "class": "biology.animal_breed",
          "friendly_name": "Animal breed",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.05h0h0",
          "class": "biology.animal_breed",
          "friendly_name": "Bull Terrier",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 3,
          "node_type": "entity",
          "id": "m.0d060g",
          "class": "biology.breed_origin",
          "friendly_name": "Canada",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 0,
          "end": 1,
          "relation": "biology.breed_temperament.breeds",
          "friendly_name": "Breeds"
        },
        {
          "start": 2,
          "end": 0,
          "relation": "biology.animal_breed.temperament",
          "friendly_name": "Temperament"
        },
        {
          "start": 1,
          "end": 3,
          "relation": "biology.animal_breed.place_of_origin",
          "friendly_name": "Place of origin"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.breed_temperament . \n?x1 :type.object.type :biology.animal_breed . \nVALUES ?x2 { :m.05h0h0 } \nVALUES ?x3 { :m.0d060g } \n?x0 :biology.breed_temperament.breeds ?x1 . \n?x2 :biology.animal_breed.temperament ?x0 . \n?x1 :biology.animal_breed.place_of_origin ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
    "domains": [
      "biology"
    ],
    "level": "compositional",
    "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.0d060g)) (JOIN (R biology.animal_breed.temperament) m.05h0h0))))",
    "topic_entity": {
      "m.05h0h0": "Bull Terrier",
      "m.0d060g": "Canada"
    },
    "hops": 4
  },
  {
    "qid": 3206083001000,
    "question": "what is the unit of data transmission rate in the international system of units for transfers larger than 1000.0 bits per second?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "g.121mkm81",
        "entity_name": "Terabit per second"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "g.1q6jh4dmv",
        "entity_name": "Megabit per second"
      },
      {
        "answer_type": "Entity",
        "answer_argument": "m.05tk42",
        "entity_name": "Gigabit per second"
      }
    ],
    "function": ">",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "measurement_unit.unit_of_data_transmission_rate",
          "class": "measurement_unit.unit_of_data_transmission_rate",
          "friendly_name": "Unit of Data Transmission Rate",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "entity",
          "id": "m.0c13h",
          "class": "measurement_unit.measurement_system",
          "friendly_name": "International System of Units",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "literal",
          "id": "1000.0^^http://www.w3.org/2001/XMLSchema#float",
          "class": "type.float",
          "friendly_name": "1000.0",
          "question_node": 0,
          "function": ">"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "measurement_unit.measurement_system.data_rate_units",
          "friendly_name": "Data Rate Units"
        },
        {
          "start": 0,
          "end": 2,
          "relation": "measurement_unit.unit_of_data_transmission_rate.rate_in_bits_per_second",
          "friendly_name": "Rate in bits per second"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.unit_of_data_transmission_rate . \nVALUES ?x1 { :m.0c13h } \nFILTER (?x2 > \"1000.0\"^^<http://www.w3.org/2001/XMLSchema#float>)\n?x1 :measurement_unit.measurement_system.data_rate_units ?x0 . \n?x0 :measurement_unit.unit_of_data_transmission_rate.rate_in_bits_per_second ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "measurement_unit"
    ],
    "level": "zero-shot",
    "s_expression": "(AND measurement_unit.unit_of_data_transmission_rate (AND (JOIN (R measurement_unit.measurement_system.data_rate_units) m.0c13h) (gt measurement_unit.unit_of_data_transmission_rate.rate_in_bits_per_second 1000.0^^http://www.w3.org/2001/XMLSchema#float)))",
    "topic_entity": {
      "m.0c13h": "International System of Units"
    },
    "hops": 3
  },
  {
    "qid": 3201324007000,
    "question": "c&o railroad owns a what locomotive?",
    "answer": [
      {
        "answer_type": "Entity",
        "answer_argument": "m.0d5_jw",
        "entity_name": "George Washington"
      }
    ],
    "function": "none",
    "num_node": 3,
    "num_edge": 2,
    "graph_query": {
      "nodes": [
        {
          "nid": 0,
          "node_type": "class",
          "id": "rail.locomotive",
          "class": "rail.locomotive",
          "friendly_name": "Locomotive",
          "question_node": 1,
          "function": "none"
        },
        {
          "nid": 1,
          "node_type": "class",
          "id": "rail.locomotive_ownership",
          "class": "rail.locomotive_ownership",
          "friendly_name": "Locomotive ownership",
          "question_node": 0,
          "function": "none"
        },
        {
          "nid": 2,
          "node_type": "entity",
          "id": "m.045mcp",
          "class": "rail.locomotive_owner",
          "friendly_name": "c&o railroad",
          "question_node": 0,
          "function": "none"
        }
      ],
      "edges": [
        {
          "start": 1,
          "end": 0,
          "relation": "rail.locomotive_ownership.locomotive",
          "friendly_name": "Locomotive"
        },
        {
          "start": 1,
          "end": 2,
          "relation": "rail.locomotive_ownership.owner",
          "friendly_name": "Owner"
        }
      ]
    },
    "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :rail.locomotive . \n?x1 :type.object.type :rail.locomotive_ownership . \nVALUES ?x2 { :m.045mcp } \n?x1 :rail.locomotive_ownership.locomotive ?x0 . \n?x1 :rail.locomotive_ownership.owner ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
    "domains": [
      "rail"
    ],
    "level": "zero-shot",
    "s_expression": "(AND rail.locomotive (JOIN (R rail.locomotive_ownership.locomotive) (JOIN rail.locomotive_ownership.owner m.045mcp)))",
    "topic_entity": {
      "m.045mcp": "Chesapeake and Ohio Railway"
    },
    "hops": 3
  }
]